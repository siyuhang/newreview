webpackJsonp([9],{

/***/ 4:
/***/ function(module, exports) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n// css base code, injected by the css-loader\nmodule.exports = function () {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif (item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function (modules, mediaQuery) {\n\t\tif (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif (typeof id === \"number\") alreadyImportedModules[id] = true;\n\t\t}\n\t\tfor (i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif (mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if (mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9DOi9BcHBTZXJ2L3d3dy9kYXNoaXh1bi9odG1sL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/MWQ5NyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibGlzdCIsInRvU3RyaW5nIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsIml0ZW0iLCJwdXNoIiwiam9pbiIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImlkIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUlBO0FBQ0FBLE9BQU9DLE9BQVAsR0FBaUIsWUFBVztBQUMzQixLQUFJQyxPQUFPLEVBQVg7O0FBRUE7QUFDQUEsTUFBS0MsUUFBTCxHQUFnQixTQUFTQSxRQUFULEdBQW9CO0FBQ25DLE1BQUlDLFNBQVMsRUFBYjtBQUNBLE9BQUksSUFBSUMsSUFBSSxDQUFaLEVBQWVBLElBQUksS0FBS0MsTUFBeEIsRUFBZ0NELEdBQWhDLEVBQXFDO0FBQ3BDLE9BQUlFLE9BQU8sS0FBS0YsQ0FBTCxDQUFYO0FBQ0EsT0FBR0UsS0FBSyxDQUFMLENBQUgsRUFBWTtBQUNYSCxXQUFPSSxJQUFQLENBQVksWUFBWUQsS0FBSyxDQUFMLENBQVosR0FBc0IsR0FBdEIsR0FBNEJBLEtBQUssQ0FBTCxDQUE1QixHQUFzQyxHQUFsRDtBQUNBLElBRkQsTUFFTztBQUNOSCxXQUFPSSxJQUFQLENBQVlELEtBQUssQ0FBTCxDQUFaO0FBQ0E7QUFDRDtBQUNELFNBQU9ILE9BQU9LLElBQVAsQ0FBWSxFQUFaLENBQVA7QUFDQSxFQVhEOztBQWFBO0FBQ0FQLE1BQUtHLENBQUwsR0FBUyxVQUFTSyxPQUFULEVBQWtCQyxVQUFsQixFQUE4QjtBQUN0QyxNQUFHLE9BQU9ELE9BQVAsS0FBbUIsUUFBdEIsRUFDQ0EsVUFBVSxDQUFDLENBQUMsSUFBRCxFQUFPQSxPQUFQLEVBQWdCLEVBQWhCLENBQUQsQ0FBVjtBQUNELE1BQUlFLHlCQUF5QixFQUE3QjtBQUNBLE9BQUksSUFBSVAsSUFBSSxDQUFaLEVBQWVBLElBQUksS0FBS0MsTUFBeEIsRUFBZ0NELEdBQWhDLEVBQXFDO0FBQ3BDLE9BQUlRLEtBQUssS0FBS1IsQ0FBTCxFQUFRLENBQVIsQ0FBVDtBQUNBLE9BQUcsT0FBT1EsRUFBUCxLQUFjLFFBQWpCLEVBQ0NELHVCQUF1QkMsRUFBdkIsSUFBNkIsSUFBN0I7QUFDRDtBQUNELE9BQUlSLElBQUksQ0FBUixFQUFXQSxJQUFJSyxRQUFRSixNQUF2QixFQUErQkQsR0FBL0IsRUFBb0M7QUFDbkMsT0FBSUUsT0FBT0csUUFBUUwsQ0FBUixDQUFYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFHLE9BQU9FLEtBQUssQ0FBTCxDQUFQLEtBQW1CLFFBQW5CLElBQStCLENBQUNLLHVCQUF1QkwsS0FBSyxDQUFMLENBQXZCLENBQW5DLEVBQW9FO0FBQ25FLFFBQUdJLGNBQWMsQ0FBQ0osS0FBSyxDQUFMLENBQWxCLEVBQTJCO0FBQzFCQSxVQUFLLENBQUwsSUFBVUksVUFBVjtBQUNBLEtBRkQsTUFFTyxJQUFHQSxVQUFILEVBQWU7QUFDckJKLFVBQUssQ0FBTCxJQUFVLE1BQU1BLEtBQUssQ0FBTCxDQUFOLEdBQWdCLFNBQWhCLEdBQTRCSSxVQUE1QixHQUF5QyxHQUFuRDtBQUNBO0FBQ0RULFNBQUtNLElBQUwsQ0FBVUQsSUFBVjtBQUNBO0FBQ0Q7QUFDRCxFQXhCRDtBQXlCQSxRQUFPTCxJQUFQO0FBQ0EsQ0E1Q0QiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9DOi9BcHBTZXJ2L3d3dy9kYXNoaXh1bi9odG1sL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 7:
/***/ function(module, exports, __webpack_require__) {

	eval("/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(false) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 8:
/***/ function(module, exports) {

	eval("module.exports = function () {\n\n        document.documentElement.style.fontSize = document.documentElement.clientWidth / 6.4 + \"px\";\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9DOi9BcHBTZXJ2L3d3dy9kYXNoaXh1bi9odG1sL2pzL21haW4uanM/OTFkZCJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJzdHlsZSIsImZvbnRTaXplIiwiY2xpZW50V2lkdGgiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxPQUFQLEdBQWUsWUFBVTs7QUFFakJDLGlCQUFTQyxlQUFULENBQXlCQyxLQUF6QixDQUErQkMsUUFBL0IsR0FBd0NILFNBQVNDLGVBQVQsQ0FBeUJHLFdBQXpCLEdBQXFDLEdBQXJDLEdBQXlDLElBQWpGO0FBQ1AsQ0FIYyxFQUFmIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe1xyXG5cclxuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuZm9udFNpemU9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLzYuNCtcInB4XCI7XHJcbn0oKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vQzovQXBwU2Vydi93d3cvZGFzaGl4dW4vaHRtbC9qcy9tYWluLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ },

/***/ 21:
/***/ function(module, exports, __webpack_require__) {

	eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(22);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(7)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./seven.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./seven.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY3NzL3NldmVuLnNjc3M/ZmFjNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUFnRjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcyEuL3NldmVuLnNjc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzIS4vc2V2ZW4uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcyEuL3NldmVuLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2Nzcy9zZXZlbi5zY3NzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDkiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 22:
/***/ function(module, exports, __webpack_require__) {

	eval("exports = module.exports = __webpack_require__(4)();\n// imports\n\n\n// module\nexports.push([module.id, \"@charset \\\"UTF-8\\\";\\n* {\\n  box-sizing: border-box;\\n  -webkit-box-sizing: border-box;\\n  -webkit-tap-highlight-color: transparent;\\n  -webkit-touch-callout: none;\\n  -webkit-backface-visibility: hidden; }\\n\\nbody, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, legend, input, textarea, p, blockquote, th, td {\\n  margin: 0;\\n  padding: 0; }\\n\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0; }\\n  table th, table td {\\n    vertical-align: top; }\\n\\nfieldset, img {\\n  border: 0; }\\n\\nimg {\\n  display: block;\\n  width: 100%;\\n  height: 100%; }\\n\\nem, strong, b, i {\\n  font-style: normal;\\n  font-weight: normal; }\\n\\nh1, h2, h3, h4, h5, h6 {\\n  font-weight: normal;\\n  font-size: 100%; }\\n\\nbody, input, button, textarea {\\n  font-family: sans-serif,Helvetica;\\n  outline: none; }\\n\\na {\\n  text-decoration: none;\\n  outline: none; }\\n\\na:hover {\\n  cursor: pointer; }\\n\\nhtml, body {\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  height: 100%;\\n  width: 100%;\\n  color: #333;\\n  -ms-text-size-adjust: 100%;\\n  -webkit-text-size-adjust: 100%;\\n  -webkit-font-smoothing: antialiased; }\\n\\nbody {\\n  position: relative;\\n  overflow: hidden;\\n  -webkit-overflow-scrolling: touch;\\n  -webkit-transform-style: preserve-3d;\\n  -webkit-backface-visibility: hidden; }\\n\\nul, ol {\\n  list-style-type: none; }\\n  ul li, ol li {\\n    list-style: none; }\\n\\na, input, textarea, select {\\n  outline: 0;\\n  font-size: 100%;\\n  border: 1px solid #fefefe; }\\n\\na {\\n  color: #333;\\n  text-decoration: none;\\n  -webkit-tap-highlight-color: transparent; }\\n  a:active {\\n    color: #1a1a1a; }\\n\\n::-webkit-input-placeholder {\\n  color: #cacaca; }\\n\\ninput:-moz-placeholder {\\n  color: #cacaca; }\\n\\n/*\\nhtml,body{\\n  width: 100%;\\n  height: 100%;\\n  background: #ffffff;\\n}\\n%center{\\n  text-align: center;\\n}\\n%fl{\\n  float: left;\\n}\\n$baseColor:#d80a1e;\\n$fontColor:#fff;\\n.clearfix{\\n  &:before,\\n  &:after {\\n    display: block; //zy\\n    content: \\\" \\\"; // 1\\n    height: 0; //zy\\n  }\\n  &:after {\\n    clear: both;\\n  }\\n}\\n\\n@mixin rightArrow($bWidth: 1px,$color:#fff,$bgColor:$baseColor){\\n  position: relative;\\n  &:after{\\n    content: '';\\n    position: absolute;\\n    border: 7px solid transparent;\\n    border-left-width: 8px;\\n    border-right-width: 8px;\\n    border-left-color: $bgColor;\\n    top: 50%;\\n    margin: -6px 0 0 0;\\n    right: 0;\\n  }\\n  &:before{\\n    content: '';\\n    position: absolute;\\n    border: 7px solid transparent;\\n    border-left-width: 8px;\\n    border-right-width: 8px;\\n    border-left-color: $color;\\n    top: 50%;\\n    margin: -6px 0 0 0;\\n    right: -$bWidth;\\n  }\\n}\\n\\n@mixin downArrow($bWidth: 1px,$color:#fff,$bgColor:$baseColor){\\n  position: relative;\\n  &:after{\\n    content: '';\\n    position: absolute;\\n    border: 7px solid transparent;\\n    border-top-color: $bgColor;\\n    top: 50%;\\n    margin: -6px 0 0 0;\\n    right: 0;\\n  }\\n  &:before{\\n    content: '';\\n    position: absolute;\\n    border: 7px solid transparent;\\n    border-top-color: $color;\\n    top: 50%;\\n    margin: -5px 0 0 0;\\n    right: 0;\\n  }\\n}\\n.hide{\\n  display: none;\\n}\\n.deep-hide{\\n  display: none !important;\\n}*/\\n.red {\\n  background: #F5504A;\\n  color: #ffffff;\\n  border: none; }\\n\\n.rotate {\\n  -webkit-transform: rotate(180deg);\\n  -webkit-transition: all .4s; }\\n\\n* {\\n  margin: 0;\\n  padding: 0; }\\n\\nhtml, body, .sevn_container {\\n  width: 100%;\\n  height: 100%;\\n  font-size: 0.32rem;\\n  background: #ffffff; }\\n\\n.sevn_hed {\\n  width: 100%;\\n  height: 0.88rem;\\n  position: relative; }\\n  .sevn_hed h5 {\\n    font-size: 0.32rem;\\n    color: #333333;\\n    text-align: center;\\n    line-height: 0.88rem; }\\n\\n.sevn_tizhi {\\n  width: 100%;\\n  height: 2.42rem;\\n  background: #F5504A;\\n  padding: 0.47rem 0.37rem;\\n  position: relative; }\\n  .sevn_tizhi p {\\n    font-size: 0.23rem;\\n    color: #FDFEF9;\\n    padding-bottom: 0.1rem; }\\n  .sevn_tizhi h1 {\\n    color: #FDFEF9;\\n    font-size: 0.34rem; }\\n  .sevn_tizhi span {\\n    color: #FFC8C7;\\n    font-size: 0.2rem; }\\n  .sevn_tizhi .sevn_btn {\\n    position: absolute;\\n    right: 5%;\\n    top: 45%;\\n    border: none;\\n    background: #F5504A;\\n    font-size: 0.5rem; }\\n\\n.sevn_yishi h4 {\\n  width: 100%;\\n  height: 0.83rem;\\n  line-height: 0.57rem;\\n  padding-left: 5%;\\n  color: #F6514B;\\n  font-weight: 400;\\n  position: relative;\\n  padding-top: 3%;\\n  border-bottom: 1px solid #999; }\\n  .sevn_yishi h4 span {\\n    width: 0.35rem;\\n    height: 10px;\\n    background: url(\" + __webpack_require__(23) + \") no-repeat;\\n    background-size: contain;\\n    position: absolute;\\n    right: 5%;\\n    top: 30%;\\n    margin-top: 0.1rem; }\\n\\n.sevn_buyishi h4 {\\n  width: 100%;\\n  height: 0.83rem;\\n  line-height: 0.57rem;\\n  padding-left: 5%;\\n  color: #F6514B;\\n  font-weight: 400;\\n  position: relative;\\n  padding-top: 3%;\\n  border-bottom: 1px solid #999; }\\n  .sevn_buyishi h4 span {\\n    width: 0.35rem;\\n    height: 10px;\\n    background: url(\" + __webpack_require__(23) + \") no-repeat;\\n    background-size: contain;\\n    position: absolute;\\n    right: 5%;\\n    top: 30%;\\n    margin-top: 0.1rem; }\\n\\n.sevn_ybox {\\n  display: none; }\\n  .sevn_ybox .sevn_img {\\n    display: -webkit-flex; }\\n    .sevn_ybox .sevn_img dl {\\n      -webkit-flex: 1；; }\\n\\n.sevn_bbox {\\n  display: none; }\\n  .sevn_bbox .sevn_img {\\n    display: -webkit-flex; }\\n    .sevn_bbox .sevn_img dl {\\n      -webkit-flex: 1；; }\\n\", \"\"]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 23:
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__.p + \"../img/down.png\";//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbWcvZG93bi5wbmc/MDNhZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIi4uL2ltZy9kb3duLnBuZ1wiO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vaW1nL2Rvd24ucG5nXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDkiXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 24:
/***/ function(module, exports) {

	eval("/*! iScroll v5.1.3 ~ (c) 2008-2014 Matteo Spinelli ~ http://cubiq.org/license */\n(function (window, document, Math) {\n\tvar rAF = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n\t\twindow.setTimeout(callback, 1000 / 60);\n\t};\n\n\tvar utils = function () {\n\t\tvar me = {};\n\n\t\tvar _elementStyle = document.createElement('div').style;\n\t\tvar _vendor = function () {\n\t\t\tvar vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],\n\t\t\t    transform,\n\t\t\t    i = 0,\n\t\t\t    l = vendors.length;\n\n\t\t\tfor (; i < l; i++) {\n\t\t\t\ttransform = vendors[i] + 'ransform';\n\t\t\t\tif (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}();\n\n\t\tfunction _prefixStyle(style) {\n\t\t\tif (_vendor === false) return false;\n\t\t\tif (_vendor === '') return style;\n\t\t\treturn _vendor + style.charAt(0).toUpperCase() + style.substr(1);\n\t\t}\n\n\t\tme.getTime = Date.now || function getTime() {\n\t\t\treturn new Date().getTime();\n\t\t};\n\n\t\tme.extend = function (target, obj) {\n\t\t\tfor (var i in obj) {\n\t\t\t\ttarget[i] = obj[i];\n\t\t\t}\n\t\t};\n\n\t\tme.addEvent = function (el, type, fn, capture) {\n\t\t\tel.addEventListener(type, fn, !!capture);\n\t\t};\n\n\t\tme.removeEvent = function (el, type, fn, capture) {\n\t\t\tel.removeEventListener(type, fn, !!capture);\n\t\t};\n\n\t\tme.prefixPointerEvent = function (pointerEvent) {\n\t\t\treturn window.MSPointerEvent ? 'MSPointer' + pointerEvent.charAt(9).toUpperCase() + pointerEvent.substr(10) : pointerEvent;\n\t\t};\n\n\t\tme.momentum = function (current, start, time, lowerMargin, wrapperSize, deceleration) {\n\t\t\tvar distance = current - start,\n\t\t\t    speed = Math.abs(distance) / time,\n\t\t\t    destination,\n\t\t\t    duration;\n\n\t\t\tdeceleration = deceleration === undefined ? 0.0006 : deceleration;\n\n\t\t\tdestination = current + speed * speed / (2 * deceleration) * (distance < 0 ? -1 : 1);\n\t\t\tduration = speed / deceleration;\n\n\t\t\tif (destination < lowerMargin) {\n\t\t\t\tdestination = wrapperSize ? lowerMargin - wrapperSize / 2.5 * (speed / 8) : lowerMargin;\n\t\t\t\tdistance = Math.abs(destination - current);\n\t\t\t\tduration = distance / speed;\n\t\t\t} else if (destination > 0) {\n\t\t\t\tdestination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;\n\t\t\t\tdistance = Math.abs(current) + destination;\n\t\t\t\tduration = distance / speed;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdestination: Math.round(destination),\n\t\t\t\tduration: duration\n\t\t\t};\n\t\t};\n\n\t\tvar _transform = _prefixStyle('transform');\n\n\t\tme.extend(me, {\n\t\t\thasTransform: _transform !== false,\n\t\t\thasPerspective: _prefixStyle('perspective') in _elementStyle,\n\t\t\thasTouch: 'ontouchstart' in window,\n\t\t\thasPointer: window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed\n\t\t\thasTransition: _prefixStyle('transition') in _elementStyle\n\t\t});\n\n\t\t// This should find all Android browsers lower than build 535.19 (both stock browser and webview)\n\t\tme.isBadAndroid = /Android /.test(window.navigator.appVersion) && !/Chrome\\/\\d/.test(window.navigator.appVersion);\n\n\t\tme.extend(me.style = {}, {\n\t\t\ttransform: _transform,\n\t\t\ttransitionTimingFunction: _prefixStyle('transitionTimingFunction'),\n\t\t\ttransitionDuration: _prefixStyle('transitionDuration'),\n\t\t\ttransitionDelay: _prefixStyle('transitionDelay'),\n\t\t\ttransformOrigin: _prefixStyle('transformOrigin')\n\t\t});\n\n\t\tme.hasClass = function (e, c) {\n\t\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\");\n\t\t\treturn re.test(e.className);\n\t\t};\n\n\t\tme.addClass = function (e, c) {\n\t\t\tif (me.hasClass(e, c)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar newclass = e.className.split(' ');\n\t\t\tnewclass.push(c);\n\t\t\te.className = newclass.join(' ');\n\t\t};\n\n\t\tme.removeClass = function (e, c) {\n\t\t\tif (!me.hasClass(e, c)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar re = new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\", 'g');\n\t\t\te.className = e.className.replace(re, ' ');\n\t\t};\n\n\t\tme.offset = function (el) {\n\t\t\tvar left = -el.offsetLeft,\n\t\t\t    top = -el.offsetTop;\n\n\t\t\t// jshint -W084\n\t\t\twhile (el = el.offsetParent) {\n\t\t\t\tleft -= el.offsetLeft;\n\t\t\t\ttop -= el.offsetTop;\n\t\t\t}\n\t\t\t// jshint +W084\n\n\t\t\treturn {\n\t\t\t\tleft: left,\n\t\t\t\ttop: top\n\t\t\t};\n\t\t};\n\n\t\tme.preventDefaultException = function (el, exceptions) {\n\t\t\tfor (var i in exceptions) {\n\t\t\t\tif (exceptions[i].test(el[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tme.extend(me.eventType = {}, {\n\t\t\ttouchstart: 1,\n\t\t\ttouchmove: 1,\n\t\t\ttouchend: 1,\n\n\t\t\tmousedown: 2,\n\t\t\tmousemove: 2,\n\t\t\tmouseup: 2,\n\n\t\t\tpointerdown: 3,\n\t\t\tpointermove: 3,\n\t\t\tpointerup: 3,\n\n\t\t\tMSPointerDown: 3,\n\t\t\tMSPointerMove: 3,\n\t\t\tMSPointerUp: 3\n\t\t});\n\n\t\tme.extend(me.ease = {}, {\n\t\t\tquadratic: {\n\t\t\t\tstyle: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\treturn k * (2 - k);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcircular: {\n\t\t\t\tstyle: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly \"circular\" but this looks better, it should be (0.075, 0.82, 0.165, 1)\n\t\t\t\tfn: function (k) {\n\t\t\t\t\treturn Math.sqrt(1 - --k * k);\n\t\t\t\t}\n\t\t\t},\n\t\t\tback: {\n\t\t\t\tstyle: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\tvar b = 4;\n\t\t\t\t\treturn (k = k - 1) * k * ((b + 1) * k + b) + 1;\n\t\t\t\t}\n\t\t\t},\n\t\t\tbounce: {\n\t\t\t\tstyle: '',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\tif ((k /= 1) < 1 / 2.75) {\n\t\t\t\t\t\treturn 7.5625 * k * k;\n\t\t\t\t\t} else if (k < 2 / 2.75) {\n\t\t\t\t\t\treturn 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n\t\t\t\t\t} else if (k < 2.5 / 2.75) {\n\t\t\t\t\t\treturn 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\telastic: {\n\t\t\t\tstyle: '',\n\t\t\t\tfn: function (k) {\n\t\t\t\t\tvar f = 0.22,\n\t\t\t\t\t    e = 0.4;\n\n\t\t\t\t\tif (k === 0) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (k == 1) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tme.tap = function (e, eventName) {\n\t\t\tvar ev = document.createEvent('Event');\n\t\t\tev.initEvent(eventName, true, true);\n\t\t\tev.pageX = e.pageX;\n\t\t\tev.pageY = e.pageY;\n\t\t\te.target.dispatchEvent(ev);\n\t\t};\n\n\t\tme.click = function (e) {\n\t\t\tvar target = e.target,\n\t\t\t    ev;\n\n\t\t\tif (!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)) {\n\t\t\t\tev = document.createEvent('MouseEvents');\n\t\t\t\tev.initMouseEvent('click', true, true, e.view, 1, target.screenX, target.screenY, target.clientX, target.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, 0, null);\n\n\t\t\t\tev._constructed = true;\n\t\t\t\ttarget.dispatchEvent(ev);\n\t\t\t}\n\t\t};\n\n\t\treturn me;\n\t}();\n\t/******************************\n *************************\n *************************\n *************************\n *************************\n *************************\n *******************************************/\n\tfunction IScroll(el, options) {\n\t\t//el这个参数可以是CSS选择器，也可以是一个DOM对象\n\t\tthis.wrapper = typeof el == 'string' ? document.querySelector(el) : el;\n\t\tthis.scroller = this.wrapper.children[0];\n\t\tthis.scrollerStyle = this.scroller.style; // cache style for better performance\n\n\t\tthis.options = {\n\n\t\t\tresizeScrollbars: true,\n\n\t\t\tmouseWheelSpeed: 20,\n\n\t\t\tsnapThreshold: 0.334,\n\n\t\t\t// INSERT POINT: OPTIONS \n\n\t\t\tstartX: 0,\n\t\t\tstartY: 0,\n\t\t\tscrollY: true,\n\t\t\tdirectionLockThreshold: 5,\n\t\t\tmomentum: true,\n\n\t\t\tbounce: true,\n\t\t\tbounceTime: 600,\n\t\t\tbounceEasing: '',\n\n\t\t\tpreventDefault: true,\n\t\t\tpreventDefaultException: { tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/ },\n\n\t\t\tHWCompositing: true,\n\t\t\tuseTransition: true,\n\t\t\tuseTransform: true\n\t\t};\n\n\t\tfor (var i in options) {\n\t\t\tthis.options[i] = options[i];\n\t\t}\n\n\t\t// Normalize options\n\t\tthis.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';\n\n\t\tthis.options.useTransition = utils.hasTransition && this.options.useTransition;\n\t\tthis.options.useTransform = utils.hasTransform && this.options.useTransform;\n\n\t\tthis.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;\n\t\tthis.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;\n\n\t\t// If you want eventPassthrough I have to lock one of the axes\n\t\tthis.options.scrollY = this.options.eventPassthrough == 'vertical' ? false : this.options.scrollY;\n\t\tthis.options.scrollX = this.options.eventPassthrough == 'horizontal' ? false : this.options.scrollX;\n\n\t\t// With eventPassthrough we also need lockDirection mechanism\n\t\tthis.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;\n\t\tthis.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;\n\n\t\tthis.options.bounceEasing = typeof this.options.bounceEasing == 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;\n\n\t\tthis.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;\n\n\t\tif (this.options.tap === true) {\n\t\t\tthis.options.tap = 'tap';\n\t\t}\n\n\t\tif (this.options.shrinkScrollbars == 'scale') {\n\t\t\tthis.options.useTransition = false;\n\t\t}\n\n\t\tthis.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;\n\n\t\t// INSERT POINT: NORMALIZATION\n\n\t\t// Some defaults\t\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.directionX = 0;\n\t\tthis.directionY = 0;\n\t\tthis._events = {};\n\n\t\t// INSERT POINT: DEFAULTS\n\n\t\tthis._init();\n\t\tthis.refresh();\n\n\t\tthis.scrollTo(this.options.startX, this.options.startY);\n\t\tthis.enable();\n\t}\n\n\tIScroll.prototype = {\n\t\tversion: '5.1.3',\n\n\t\t_init: function () {\n\t\t\tthis._initEvents();\n\n\t\t\tif (this.options.scrollbars || this.options.indicators) {\n\t\t\t\tthis._initIndicators();\n\t\t\t}\n\n\t\t\tif (this.options.mouseWheel) {\n\t\t\t\tthis._initWheel();\n\t\t\t}\n\n\t\t\tif (this.options.snap) {\n\t\t\t\tthis._initSnap();\n\t\t\t}\n\n\t\t\tif (this.options.keyBindings) {\n\t\t\t\tthis._initKeys();\n\t\t\t}\n\n\t\t\t// INSERT POINT: _init\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis._initEvents(true);\n\n\t\t\tthis._execEvent('destroy');\n\t\t},\n\n\t\t_transitionEnd: function (e) {\n\t\t\tif (e.target != this.scroller || !this.isInTransition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._transitionTime();\n\t\t\tif (!this.resetPosition(this.options.bounceTime)) {\n\t\t\t\tthis.isInTransition = false;\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t}\n\t\t},\n\n\t\t_start: function (e) {\n\t\t\t// React to left mouse button only\n\t\t\tif (utils.eventType[e.type] != 1) {\n\t\t\t\tif (e.button !== 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t    pos;\n\n\t\t\tthis.initiated = utils.eventType[e.type];\n\t\t\tthis.moved = false;\n\t\t\tthis.distX = 0;\n\t\t\tthis.distY = 0;\n\t\t\tthis.directionX = 0;\n\t\t\tthis.directionY = 0;\n\t\t\tthis.directionLocked = 0;\n\n\t\t\tthis._transitionTime();\n\n\t\t\tthis.startTime = utils.getTime();\n\n\t\t\tif (this.options.useTransition && this.isInTransition) {\n\t\t\t\tthis.isInTransition = false;\n\t\t\t\tpos = this.getComputedPosition();\n\t\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t} else if (!this.options.useTransition && this.isAnimating) {\n\t\t\t\tthis.isAnimating = false;\n\t\t\t\tthis._execEvent('scrollEnd');\n\t\t\t}\n\n\t\t\tthis.startX = this.x;\n\t\t\tthis.startY = this.y;\n\t\t\tthis.absStartX = this.x;\n\t\t\tthis.absStartY = this.y;\n\t\t\tthis.pointX = point.pageX;\n\t\t\tthis.pointY = point.pageY;\n\n\t\t\tthis._execEvent('beforeScrollStart');\n\t\t},\n\n\t\t_move: function (e) {\n\t\t\tif (!this.enabled || utils.eventType[e.type] !== this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.preventDefault) {\n\t\t\t\t// increases performance on Android? TODO: check!\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t    deltaX = point.pageX - this.pointX,\n\t\t\t    deltaY = point.pageY - this.pointY,\n\t\t\t    timestamp = utils.getTime(),\n\t\t\t    newX,\n\t\t\t    newY,\n\t\t\t    absDistX,\n\t\t\t    absDistY;\n\n\t\t\tthis.pointX = point.pageX;\n\t\t\tthis.pointY = point.pageY;\n\n\t\t\tthis.distX += deltaX;\n\t\t\tthis.distY += deltaY;\n\t\t\tabsDistX = Math.abs(this.distX);\n\t\t\tabsDistY = Math.abs(this.distY);\n\n\t\t\t// We need to move at least 10 pixels for the scrolling to initiate\n\t\t\tif (timestamp - this.endTime > 300 && absDistX < 10 && absDistY < 10) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If you are scrolling in one direction lock the other\n\t\t\tif (!this.directionLocked && !this.options.freeScroll) {\n\t\t\t\tif (absDistX > absDistY + this.options.directionLockThreshold) {\n\t\t\t\t\tthis.directionLocked = 'h'; // lock horizontally\n\t\t\t\t} else if (absDistY >= absDistX + this.options.directionLockThreshold) {\n\t\t\t\t\tthis.directionLocked = 'v'; // lock vertically\n\t\t\t\t} else {\n\t\t\t\t\tthis.directionLocked = 'n'; // no lock\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.directionLocked == 'h') {\n\t\t\t\tif (this.options.eventPassthrough == 'vertical') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if (this.options.eventPassthrough == 'horizontal') {\n\t\t\t\t\tthis.initiated = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdeltaY = 0;\n\t\t\t} else if (this.directionLocked == 'v') {\n\t\t\t\tif (this.options.eventPassthrough == 'horizontal') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if (this.options.eventPassthrough == 'vertical') {\n\t\t\t\t\tthis.initiated = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdeltaX = 0;\n\t\t\t}\n\n\t\t\tdeltaX = this.hasHorizontalScroll ? deltaX : 0;\n\t\t\tdeltaY = this.hasVerticalScroll ? deltaY : 0;\n\n\t\t\tnewX = this.x + deltaX;\n\t\t\tnewY = this.y + deltaY;\n\n\t\t\t// Slow down if outside of the boundaries\n\t\t\tif (newX > 0 || newX < this.maxScrollX) {\n\t\t\t\tnewX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;\n\t\t\t}\n\t\t\tif (newY > 0 || newY < this.maxScrollY) {\n\t\t\t\tnewY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;\n\t\t\t}\n\n\t\t\tthis.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\n\t\t\tthis.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\n\n\t\t\tif (!this.moved) {\n\t\t\t\tthis._execEvent('scrollStart');\n\t\t\t}\n\n\t\t\tthis.moved = true;\n\n\t\t\tthis._translate(newX, newY);\n\n\t\t\t/* REPLACE START: _move */\n\n\t\t\tif (timestamp - this.startTime > 300) {\n\t\t\t\tthis.startTime = timestamp;\n\t\t\t\tthis.startX = this.x;\n\t\t\t\tthis.startY = this.y;\n\t\t\t}\n\n\t\t\t/* REPLACE END: _move */\n\t\t},\n\n\t\t_end: function (e) {\n\t\t\tif (!this.enabled || utils.eventType[e.type] !== this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tvar point = e.changedTouches ? e.changedTouches[0] : e,\n\t\t\t    momentumX,\n\t\t\t    momentumY,\n\t\t\t    duration = utils.getTime() - this.startTime,\n\t\t\t    newX = Math.round(this.x),\n\t\t\t    newY = Math.round(this.y),\n\t\t\t    distanceX = Math.abs(newX - this.startX),\n\t\t\t    distanceY = Math.abs(newY - this.startY),\n\t\t\t    time = 0,\n\t\t\t    easing = '';\n\n\t\t\tthis.isInTransition = 0;\n\t\t\tthis.initiated = 0;\n\t\t\tthis.endTime = utils.getTime();\n\n\t\t\t// reset if we are outside of the boundaries\n\t\t\tif (this.resetPosition(this.options.bounceTime)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.scrollTo(newX, newY); // ensures that the last position is rounded\n\n\t\t\t// we scrolled less than 10 pixels\n\t\t\tif (!this.moved) {\n\t\t\t\tif (this.options.tap) {\n\t\t\t\t\tutils.tap(e, this.options.tap);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.click) {\n\t\t\t\t\tutils.click(e);\n\t\t\t\t}\n\n\t\t\t\tthis._execEvent('scrollCancel');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {\n\t\t\t\tthis._execEvent('flick');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// start momentum animation if needed\n\t\t\tif (this.options.momentum && duration < 300) {\n\t\t\t\tmomentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration) : { destination: newX, duration: 0 };\n\t\t\t\tmomentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration) : { destination: newY, duration: 0 };\n\t\t\t\tnewX = momentumX.destination;\n\t\t\t\tnewY = momentumY.destination;\n\t\t\t\ttime = Math.max(momentumX.duration, momentumY.duration);\n\t\t\t\tthis.isInTransition = 1;\n\t\t\t}\n\n\t\t\tif (this.options.snap) {\n\t\t\t\tvar snap = this._nearestSnap(newX, newY);\n\t\t\t\tthis.currentPage = snap;\n\t\t\t\ttime = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);\n\t\t\t\tnewX = snap.x;\n\t\t\t\tnewY = snap.y;\n\n\t\t\t\tthis.directionX = 0;\n\t\t\t\tthis.directionY = 0;\n\t\t\t\teasing = this.options.bounceEasing;\n\t\t\t}\n\n\t\t\t// INSERT POINT: _end\n\n\t\t\tif (newX != this.x || newY != this.y) {\n\t\t\t\t// change easing function when scroller goes out of the boundaries\n\t\t\t\tif (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {\n\t\t\t\t\teasing = utils.ease.quadratic;\n\t\t\t\t}\n\n\t\t\t\tthis.scrollTo(newX, newY, time, easing);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._execEvent('scrollEnd');\n\t\t},\n\n\t\t_resize: function () {\n\t\t\tvar that = this;\n\n\t\t\tclearTimeout(this.resizeTimeout);\n\n\t\t\tthis.resizeTimeout = setTimeout(function () {\n\t\t\t\tthat.refresh();\n\t\t\t}, this.options.resizePolling);\n\t\t},\n\n\t\tresetPosition: function (time) {\n\t\t\tvar x = this.x,\n\t\t\t    y = this.y;\n\n\t\t\ttime = time || 0;\n\n\t\t\tif (!this.hasHorizontalScroll || this.x > 0) {\n\t\t\t\tx = 0;\n\t\t\t} else if (this.x < this.maxScrollX) {\n\t\t\t\tx = this.maxScrollX;\n\t\t\t}\n\n\t\t\tif (!this.hasVerticalScroll || this.y > 0) {\n\t\t\t\ty = 0;\n\t\t\t} else if (this.y < this.maxScrollY) {\n\t\t\t\ty = this.maxScrollY;\n\t\t\t}\n\n\t\t\tif (x == this.x && y == this.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.scrollTo(x, y, time, this.options.bounceEasing);\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.enabled = false;\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.enabled = true;\n\t\t},\n\n\t\trefresh: function () {\n\t\t\tvar rf = this.wrapper.offsetHeight; // Force reflow\n\n\t\t\tthis.wrapperWidth = this.wrapper.clientWidth;\n\t\t\tthis.wrapperHeight = this.wrapper.clientHeight;\n\n\t\t\t/* REPLACE START: refresh */\n\n\t\t\tthis.scrollerWidth = this.scroller.offsetWidth;\n\t\t\tthis.scrollerHeight = this.scroller.offsetHeight;\n\n\t\t\tthis.maxScrollX = this.wrapperWidth - this.scrollerWidth;\n\t\t\tthis.maxScrollY = this.wrapperHeight - this.scrollerHeight;\n\n\t\t\t/* REPLACE END: refresh */\n\n\t\t\tthis.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;\n\t\t\tthis.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;\n\n\t\t\tif (!this.hasHorizontalScroll) {\n\t\t\t\tthis.maxScrollX = 0;\n\t\t\t\tthis.scrollerWidth = this.wrapperWidth;\n\t\t\t}\n\n\t\t\tif (!this.hasVerticalScroll) {\n\t\t\t\tthis.maxScrollY = 0;\n\t\t\t\tthis.scrollerHeight = this.wrapperHeight;\n\t\t\t}\n\n\t\t\tthis.endTime = 0;\n\t\t\tthis.directionX = 0;\n\t\t\tthis.directionY = 0;\n\n\t\t\tthis.wrapperOffset = utils.offset(this.wrapper);\n\n\t\t\tthis._execEvent('refresh');\n\n\t\t\tthis.resetPosition();\n\n\t\t\t// INSERT POINT: _refresh\n\t\t},\n\n\t\ton: function (type, fn) {\n\t\t\tif (!this._events[type]) {\n\t\t\t\tthis._events[type] = [];\n\t\t\t}\n\n\t\t\tthis._events[type].push(fn);\n\t\t},\n\n\t\toff: function (type, fn) {\n\t\t\tif (!this._events[type]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar index = this._events[type].indexOf(fn);\n\n\t\t\tif (index > -1) {\n\t\t\t\tthis._events[type].splice(index, 1);\n\t\t\t}\n\t\t},\n\n\t\t_execEvent: function (type) {\n\t\t\tif (!this._events[type]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar i = 0,\n\t\t\t    l = this._events[type].length;\n\n\t\t\tif (!l) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (; i < l; i++) {\n\t\t\t\tthis._events[type][i].apply(this, [].slice.call(arguments, 1));\n\t\t\t}\n\t\t},\n\n\t\tscrollBy: function (x, y, time, easing) {\n\t\t\tx = this.x + x;\n\t\t\ty = this.y + y;\n\t\t\ttime = time || 0;\n\n\t\t\tthis.scrollTo(x, y, time, easing);\n\t\t},\n\n\t\tscrollTo: function (x, y, time, easing) {\n\t\t\teasing = easing || utils.ease.circular;\n\n\t\t\tthis.isInTransition = this.options.useTransition && time > 0;\n\n\t\t\tif (!time || this.options.useTransition && easing.style) {\n\t\t\t\tthis._transitionTimingFunction(easing.style);\n\t\t\t\tthis._transitionTime(time);\n\t\t\t\tthis._translate(x, y);\n\t\t\t} else {\n\t\t\t\tthis._animate(x, y, time, easing.fn);\n\t\t\t}\n\t\t},\n\n\t\tscrollToElement: function (el, time, offsetX, offsetY, easing) {\n\t\t\tel = el.nodeType ? el : this.scroller.querySelector(el);\n\n\t\t\tif (!el) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar pos = utils.offset(el);\n\n\t\t\tpos.left -= this.wrapperOffset.left;\n\t\t\tpos.top -= this.wrapperOffset.top;\n\n\t\t\t// if offsetX/Y are true we center the element to the screen\n\t\t\tif (offsetX === true) {\n\t\t\t\toffsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);\n\t\t\t}\n\t\t\tif (offsetY === true) {\n\t\t\t\toffsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);\n\t\t\t}\n\n\t\t\tpos.left -= offsetX || 0;\n\t\t\tpos.top -= offsetY || 0;\n\n\t\t\tpos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;\n\t\t\tpos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;\n\n\t\t\ttime = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;\n\n\t\t\tthis.scrollTo(pos.left, pos.top, time, easing);\n\t\t},\n\n\t\t_transitionTime: function (time) {\n\t\t\ttime = time || 0;\n\n\t\t\tthis.scrollerStyle[utils.style.transitionDuration] = time + 'ms';\n\n\t\t\tif (!time && utils.isBadAndroid) {\n\t\t\t\tthis.scrollerStyle[utils.style.transitionDuration] = '0.001s';\n\t\t\t}\n\n\t\t\tif (this.indicators) {\n\t\t\t\tfor (var i = this.indicators.length; i--;) {\n\t\t\t\t\tthis.indicators[i].transitionTime(time);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// INSERT POINT: _transitionTime\n\t\t},\n\n\t\t_transitionTimingFunction: function (easing) {\n\t\t\tthis.scrollerStyle[utils.style.transitionTimingFunction] = easing;\n\n\t\t\tif (this.indicators) {\n\t\t\t\tfor (var i = this.indicators.length; i--;) {\n\t\t\t\t\tthis.indicators[i].transitionTimingFunction(easing);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// INSERT POINT: _transitionTimingFunction\n\t\t},\n\n\t\t_translate: function (x, y) {\n\t\t\tif (this.options.useTransform) {\n\n\t\t\t\t/* REPLACE START: _translate */\n\n\t\t\t\tthis.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;\n\n\t\t\t\t/* REPLACE END: _translate */\n\t\t\t} else {\n\t\t\t\tx = Math.round(x);\n\t\t\t\ty = Math.round(y);\n\t\t\t\tthis.scrollerStyle.left = x + 'px';\n\t\t\t\tthis.scrollerStyle.top = y + 'px';\n\t\t\t}\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tif (this.indicators) {\n\t\t\t\tfor (var i = this.indicators.length; i--;) {\n\t\t\t\t\tthis.indicators[i].updatePosition();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// INSERT POINT: _translate\n\t\t},\n\n\t\t_initEvents: function (remove) {\n\t\t\tvar eventType = remove ? utils.removeEvent : utils.addEvent,\n\t\t\t    target = this.options.bindToWrapper ? this.wrapper : window;\n\n\t\t\teventType(window, 'orientationchange', this);\n\t\t\teventType(window, 'resize', this);\n\n\t\t\tif (this.options.click) {\n\t\t\t\teventType(this.wrapper, 'click', this, true);\n\t\t\t}\n\n\t\t\tif (!this.options.disableMouse) {\n\t\t\t\teventType(this.wrapper, 'mousedown', this);\n\t\t\t\teventType(target, 'mousemove', this);\n\t\t\t\teventType(target, 'mousecancel', this);\n\t\t\t\teventType(target, 'mouseup', this);\n\t\t\t}\n\n\t\t\tif (utils.hasPointer && !this.options.disablePointer) {\n\t\t\t\teventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointercancel'), this);\n\t\t\t\teventType(target, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t}\n\n\t\t\tif (utils.hasTouch && !this.options.disableTouch) {\n\t\t\t\teventType(this.wrapper, 'touchstart', this);\n\t\t\t\teventType(target, 'touchmove', this);\n\t\t\t\teventType(target, 'touchcancel', this);\n\t\t\t\teventType(target, 'touchend', this);\n\t\t\t}\n\n\t\t\teventType(this.scroller, 'transitionend', this);\n\t\t\teventType(this.scroller, 'webkitTransitionEnd', this);\n\t\t\teventType(this.scroller, 'oTransitionEnd', this);\n\t\t\teventType(this.scroller, 'MSTransitionEnd', this);\n\t\t},\n\n\t\tgetComputedPosition: function () {\n\t\t\tvar matrix = window.getComputedStyle(this.scroller, null),\n\t\t\t    x,\n\t\t\t    y;\n\n\t\t\tif (this.options.useTransform) {\n\t\t\t\tmatrix = matrix[utils.style.transform].split(')')[0].split(', ');\n\t\t\t\tx = +(matrix[12] || matrix[4]);\n\t\t\t\ty = +(matrix[13] || matrix[5]);\n\t\t\t} else {\n\t\t\t\tx = +matrix.left.replace(/[^-\\d.]/g, '');\n\t\t\t\ty = +matrix.top.replace(/[^-\\d.]/g, '');\n\t\t\t}\n\n\t\t\treturn { x: x, y: y };\n\t\t},\n\n\t\t_initIndicators: function () {\n\t\t\tvar interactive = this.options.interactiveScrollbars,\n\t\t\t    customStyle = typeof this.options.scrollbars != 'string',\n\t\t\t    indicators = [],\n\t\t\t    indicator;\n\n\t\t\tvar that = this;\n\n\t\t\tthis.indicators = [];\n\n\t\t\tif (this.options.scrollbars) {\n\t\t\t\t// Vertical scrollbar\n\t\t\t\tif (this.options.scrollY) {\n\t\t\t\t\tindicator = {\n\t\t\t\t\t\tel: createDefaultScrollbar('v', interactive, this.options.scrollbars),\n\t\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\t\tlistenX: false\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\t\tindicators.push(indicator);\n\t\t\t\t}\n\n\t\t\t\t// Horizontal scrollbar\n\t\t\t\tif (this.options.scrollX) {\n\t\t\t\t\tindicator = {\n\t\t\t\t\t\tel: createDefaultScrollbar('h', interactive, this.options.scrollbars),\n\t\t\t\t\t\tinteractive: interactive,\n\t\t\t\t\t\tdefaultScrollbars: true,\n\t\t\t\t\t\tcustomStyle: customStyle,\n\t\t\t\t\t\tresize: this.options.resizeScrollbars,\n\t\t\t\t\t\tshrink: this.options.shrinkScrollbars,\n\t\t\t\t\t\tfade: this.options.fadeScrollbars,\n\t\t\t\t\t\tlistenY: false\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.wrapper.appendChild(indicator.el);\n\t\t\t\t\tindicators.push(indicator);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.indicators) {\n\t\t\t\t// TODO: check concat compatibility\n\t\t\t\tindicators = indicators.concat(this.options.indicators);\n\t\t\t}\n\n\t\t\tfor (var i = indicators.length; i--;) {\n\t\t\t\tthis.indicators.push(new Indicator(this, indicators[i]));\n\t\t\t}\n\n\t\t\t// TODO: check if we can use array.map (wide compatibility and performance issues)\n\t\t\tfunction _indicatorsMap(fn) {\n\t\t\t\tfor (var i = that.indicators.length; i--;) {\n\t\t\t\t\tfn.call(that.indicators[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.options.fadeScrollbars) {\n\t\t\t\tthis.on('scrollEnd', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.on('scrollCancel', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.on('scrollStart', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade(1);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis.on('beforeScrollStart', function () {\n\t\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\t\tthis.fade(1, true);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.on('refresh', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.on('destroy', function () {\n\t\t\t\t_indicatorsMap(function () {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t});\n\n\t\t\t\tdelete this.indicators;\n\t\t\t});\n\t\t},\n\n\t\t_initWheel: function () {\n\t\t\tutils.addEvent(this.wrapper, 'wheel', this);\n\t\t\tutils.addEvent(this.wrapper, 'mousewheel', this);\n\t\t\tutils.addEvent(this.wrapper, 'DOMMouseScroll', this);\n\n\t\t\tthis.on('destroy', function () {\n\t\t\t\tutils.removeEvent(this.wrapper, 'wheel', this);\n\t\t\t\tutils.removeEvent(this.wrapper, 'mousewheel', this);\n\t\t\t\tutils.removeEvent(this.wrapper, 'DOMMouseScroll', this);\n\t\t\t});\n\t\t},\n\n\t\t_wheel: function (e) {\n\t\t\tif (!this.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tvar wheelDeltaX,\n\t\t\t    wheelDeltaY,\n\t\t\t    newX,\n\t\t\t    newY,\n\t\t\t    that = this;\n\n\t\t\tif (this.wheelTimeout === undefined) {\n\t\t\t\tthat._execEvent('scrollStart');\n\t\t\t}\n\n\t\t\t// Execute the scrollEnd event after 400ms the wheel stopped scrolling\n\t\t\tclearTimeout(this.wheelTimeout);\n\t\t\tthis.wheelTimeout = setTimeout(function () {\n\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t\tthat.wheelTimeout = undefined;\n\t\t\t}, 400);\n\n\t\t\tif ('deltaX' in e) {\n\t\t\t\tif (e.deltaMode === 1) {\n\t\t\t\t\twheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;\n\t\t\t\t\twheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;\n\t\t\t\t} else {\n\t\t\t\t\twheelDeltaX = -e.deltaX;\n\t\t\t\t\twheelDeltaY = -e.deltaY;\n\t\t\t\t}\n\t\t\t} else if ('wheelDeltaX' in e) {\n\t\t\t\twheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;\n\t\t\t\twheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;\n\t\t\t} else if ('wheelDelta' in e) {\n\t\t\t\twheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;\n\t\t\t} else if ('detail' in e) {\n\t\t\t\twheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twheelDeltaX *= this.options.invertWheelDirection;\n\t\t\twheelDeltaY *= this.options.invertWheelDirection;\n\n\t\t\tif (!this.hasVerticalScroll) {\n\t\t\t\twheelDeltaX = wheelDeltaY;\n\t\t\t\twheelDeltaY = 0;\n\t\t\t}\n\n\t\t\tif (this.options.snap) {\n\t\t\t\tnewX = this.currentPage.pageX;\n\t\t\t\tnewY = this.currentPage.pageY;\n\n\t\t\t\tif (wheelDeltaX > 0) {\n\t\t\t\t\tnewX--;\n\t\t\t\t} else if (wheelDeltaX < 0) {\n\t\t\t\t\tnewX++;\n\t\t\t\t}\n\n\t\t\t\tif (wheelDeltaY > 0) {\n\t\t\t\t\tnewY--;\n\t\t\t\t} else if (wheelDeltaY < 0) {\n\t\t\t\t\tnewY++;\n\t\t\t\t}\n\n\t\t\t\tthis.goToPage(newX, newY);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);\n\t\t\tnewY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);\n\n\t\t\tif (newX > 0) {\n\t\t\t\tnewX = 0;\n\t\t\t} else if (newX < this.maxScrollX) {\n\t\t\t\tnewX = this.maxScrollX;\n\t\t\t}\n\n\t\t\tif (newY > 0) {\n\t\t\t\tnewY = 0;\n\t\t\t} else if (newY < this.maxScrollY) {\n\t\t\t\tnewY = this.maxScrollY;\n\t\t\t}\n\n\t\t\tthis.scrollTo(newX, newY, 0);\n\n\t\t\t// INSERT POINT: _wheel\n\t\t},\n\n\t\t_initSnap: function () {\n\t\t\tthis.currentPage = {};\n\n\t\t\tif (typeof this.options.snap == 'string') {\n\t\t\t\tthis.options.snap = this.scroller.querySelectorAll(this.options.snap);\n\t\t\t}\n\n\t\t\tthis.on('refresh', function () {\n\t\t\t\tvar i = 0,\n\t\t\t\t    l,\n\t\t\t\t    m = 0,\n\t\t\t\t    n,\n\t\t\t\t    cx,\n\t\t\t\t    cy,\n\t\t\t\t    x = 0,\n\t\t\t\t    y,\n\t\t\t\t    stepX = this.options.snapStepX || this.wrapperWidth,\n\t\t\t\t    stepY = this.options.snapStepY || this.wrapperHeight,\n\t\t\t\t    el;\n\n\t\t\t\tthis.pages = [];\n\n\t\t\t\tif (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.options.snap === true) {\n\t\t\t\t\tcx = Math.round(stepX / 2);\n\t\t\t\t\tcy = Math.round(stepY / 2);\n\n\t\t\t\t\twhile (x > -this.scrollerWidth) {\n\t\t\t\t\t\tthis.pages[i] = [];\n\t\t\t\t\t\tl = 0;\n\t\t\t\t\t\ty = 0;\n\n\t\t\t\t\t\twhile (y > -this.scrollerHeight) {\n\t\t\t\t\t\t\tthis.pages[i][l] = {\n\t\t\t\t\t\t\t\tx: Math.max(x, this.maxScrollX),\n\t\t\t\t\t\t\t\ty: Math.max(y, this.maxScrollY),\n\t\t\t\t\t\t\t\twidth: stepX,\n\t\t\t\t\t\t\t\theight: stepY,\n\t\t\t\t\t\t\t\tcx: x - cx,\n\t\t\t\t\t\t\t\tcy: y - cy\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\ty -= stepY;\n\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx -= stepX;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tel = this.options.snap;\n\t\t\t\t\tl = el.length;\n\t\t\t\t\tn = -1;\n\n\t\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\t\tif (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {\n\t\t\t\t\t\t\tm = 0;\n\t\t\t\t\t\t\tn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.pages[m]) {\n\t\t\t\t\t\t\tthis.pages[m] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tx = Math.max(-el[i].offsetLeft, this.maxScrollX);\n\t\t\t\t\t\ty = Math.max(-el[i].offsetTop, this.maxScrollY);\n\t\t\t\t\t\tcx = x - Math.round(el[i].offsetWidth / 2);\n\t\t\t\t\t\tcy = y - Math.round(el[i].offsetHeight / 2);\n\n\t\t\t\t\t\tthis.pages[m][n] = {\n\t\t\t\t\t\t\tx: x,\n\t\t\t\t\t\t\ty: y,\n\t\t\t\t\t\t\twidth: el[i].offsetWidth,\n\t\t\t\t\t\t\theight: el[i].offsetHeight,\n\t\t\t\t\t\t\tcx: cx,\n\t\t\t\t\t\t\tcy: cy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (x > this.maxScrollX) {\n\t\t\t\t\t\t\tm++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);\n\n\t\t\t\t// Update snap threshold if needed\n\t\t\t\tif (this.options.snapThreshold % 1 === 0) {\n\t\t\t\t\tthis.snapThresholdX = this.options.snapThreshold;\n\t\t\t\t\tthis.snapThresholdY = this.options.snapThreshold;\n\t\t\t\t} else {\n\t\t\t\t\tthis.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);\n\t\t\t\t\tthis.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.on('flick', function () {\n\t\t\t\tvar time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX), 1000), Math.min(Math.abs(this.y - this.startY), 1000)), 300);\n\n\t\t\t\tthis.goToPage(this.currentPage.pageX + this.directionX, this.currentPage.pageY + this.directionY, time);\n\t\t\t});\n\t\t},\n\n\t\t_nearestSnap: function (x, y) {\n\t\t\tif (!this.pages.length) {\n\t\t\t\treturn { x: 0, y: 0, pageX: 0, pageY: 0 };\n\t\t\t}\n\n\t\t\tvar i = 0,\n\t\t\t    l = this.pages.length,\n\t\t\t    m = 0;\n\n\t\t\t// Check if we exceeded the snap threshold\n\t\t\tif (Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY) {\n\t\t\t\treturn this.currentPage;\n\t\t\t}\n\n\t\t\tif (x > 0) {\n\t\t\t\tx = 0;\n\t\t\t} else if (x < this.maxScrollX) {\n\t\t\t\tx = this.maxScrollX;\n\t\t\t}\n\n\t\t\tif (y > 0) {\n\t\t\t\ty = 0;\n\t\t\t} else if (y < this.maxScrollY) {\n\t\t\t\ty = this.maxScrollY;\n\t\t\t}\n\n\t\t\tfor (; i < l; i++) {\n\t\t\t\tif (x >= this.pages[i][0].cx) {\n\t\t\t\t\tx = this.pages[i][0].x;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tl = this.pages[i].length;\n\n\t\t\tfor (; m < l; m++) {\n\t\t\t\tif (y >= this.pages[0][m].cy) {\n\t\t\t\t\ty = this.pages[0][m].y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (i == this.currentPage.pageX) {\n\t\t\t\ti += this.directionX;\n\n\t\t\t\tif (i < 0) {\n\t\t\t\t\ti = 0;\n\t\t\t\t} else if (i >= this.pages.length) {\n\t\t\t\t\ti = this.pages.length - 1;\n\t\t\t\t}\n\n\t\t\t\tx = this.pages[i][0].x;\n\t\t\t}\n\n\t\t\tif (m == this.currentPage.pageY) {\n\t\t\t\tm += this.directionY;\n\n\t\t\t\tif (m < 0) {\n\t\t\t\t\tm = 0;\n\t\t\t\t} else if (m >= this.pages[0].length) {\n\t\t\t\t\tm = this.pages[0].length - 1;\n\t\t\t\t}\n\n\t\t\t\ty = this.pages[0][m].y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tpageX: i,\n\t\t\t\tpageY: m\n\t\t\t};\n\t\t},\n\n\t\tgoToPage: function (x, y, time, easing) {\n\t\t\teasing = easing || this.options.bounceEasing;\n\n\t\t\tif (x >= this.pages.length) {\n\t\t\t\tx = this.pages.length - 1;\n\t\t\t} else if (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\n\t\t\tif (y >= this.pages[x].length) {\n\t\t\t\ty = this.pages[x].length - 1;\n\t\t\t} else if (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tvar posX = this.pages[x][y].x,\n\t\t\t    posY = this.pages[x][y].y;\n\n\t\t\ttime = time === undefined ? this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;\n\n\t\t\tthis.currentPage = {\n\t\t\t\tx: posX,\n\t\t\t\ty: posY,\n\t\t\t\tpageX: x,\n\t\t\t\tpageY: y\n\t\t\t};\n\n\t\t\tthis.scrollTo(posX, posY, time, easing);\n\t\t},\n\n\t\tnext: function (time, easing) {\n\t\t\tvar x = this.currentPage.pageX,\n\t\t\t    y = this.currentPage.pageY;\n\n\t\t\tx++;\n\n\t\t\tif (x >= this.pages.length && this.hasVerticalScroll) {\n\t\t\t\tx = 0;\n\t\t\t\ty++;\n\t\t\t}\n\n\t\t\tthis.goToPage(x, y, time, easing);\n\t\t},\n\n\t\tprev: function (time, easing) {\n\t\t\tvar x = this.currentPage.pageX,\n\t\t\t    y = this.currentPage.pageY;\n\n\t\t\tx--;\n\n\t\t\tif (x < 0 && this.hasVerticalScroll) {\n\t\t\t\tx = 0;\n\t\t\t\ty--;\n\t\t\t}\n\n\t\t\tthis.goToPage(x, y, time, easing);\n\t\t},\n\n\t\t_initKeys: function (e) {\n\t\t\t// default key bindings\n\t\t\tvar keys = {\n\t\t\t\tpageUp: 33,\n\t\t\t\tpageDown: 34,\n\t\t\t\tend: 35,\n\t\t\t\thome: 36,\n\t\t\t\tleft: 37,\n\t\t\t\tup: 38,\n\t\t\t\tright: 39,\n\t\t\t\tdown: 40\n\t\t\t};\n\t\t\tvar i;\n\n\t\t\t// if you give me characters I give you keycode\n\t\t\tif (typeof this.options.keyBindings == 'object') {\n\t\t\t\tfor (i in this.options.keyBindings) {\n\t\t\t\t\tif (typeof this.options.keyBindings[i] == 'string') {\n\t\t\t\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.options.keyBindings = {};\n\t\t\t}\n\n\t\t\tfor (i in keys) {\n\t\t\t\tthis.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];\n\t\t\t}\n\n\t\t\tutils.addEvent(window, 'keydown', this);\n\n\t\t\tthis.on('destroy', function () {\n\t\t\t\tutils.removeEvent(window, 'keydown', this);\n\t\t\t});\n\t\t},\n\n\t\t_key: function (e) {\n\t\t\tif (!this.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar snap = this.options.snap,\n\t\t\t    // we are using this alot, better to cache it\n\t\t\tnewX = snap ? this.currentPage.pageX : this.x,\n\t\t\t    newY = snap ? this.currentPage.pageY : this.y,\n\t\t\t    now = utils.getTime(),\n\t\t\t    prevTime = this.keyTime || 0,\n\t\t\t    acceleration = 0.250,\n\t\t\t    pos;\n\n\t\t\tif (this.options.useTransition && this.isInTransition) {\n\t\t\t\tpos = this.getComputedPosition();\n\n\t\t\t\tthis._translate(Math.round(pos.x), Math.round(pos.y));\n\t\t\t\tthis.isInTransition = false;\n\t\t\t}\n\n\t\t\tthis.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;\n\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase this.options.keyBindings.pageUp:\n\t\t\t\t\tif (this.hasHorizontalScroll && !this.hasVerticalScroll) {\n\t\t\t\t\t\tnewX += snap ? 1 : this.wrapperWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewY += snap ? 1 : this.wrapperHeight;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.pageDown:\n\t\t\t\t\tif (this.hasHorizontalScroll && !this.hasVerticalScroll) {\n\t\t\t\t\t\tnewX -= snap ? 1 : this.wrapperWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewY -= snap ? 1 : this.wrapperHeight;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.end:\n\t\t\t\t\tnewX = snap ? this.pages.length - 1 : this.maxScrollX;\n\t\t\t\t\tnewY = snap ? this.pages[0].length - 1 : this.maxScrollY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.home:\n\t\t\t\t\tnewX = 0;\n\t\t\t\t\tnewY = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.left:\n\t\t\t\t\tnewX += snap ? -1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.up:\n\t\t\t\t\tnewY += snap ? 1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.right:\n\t\t\t\t\tnewX -= snap ? -1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.options.keyBindings.down:\n\t\t\t\t\tnewY -= snap ? 1 : 5 + this.keyAcceleration >> 0;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (snap) {\n\t\t\t\tthis.goToPage(newX, newY);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (newX > 0) {\n\t\t\t\tnewX = 0;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t} else if (newX < this.maxScrollX) {\n\t\t\t\tnewX = this.maxScrollX;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t}\n\n\t\t\tif (newY > 0) {\n\t\t\t\tnewY = 0;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t} else if (newY < this.maxScrollY) {\n\t\t\t\tnewY = this.maxScrollY;\n\t\t\t\tthis.keyAcceleration = 0;\n\t\t\t}\n\n\t\t\tthis.scrollTo(newX, newY, 0);\n\n\t\t\tthis.keyTime = now;\n\t\t},\n\n\t\t_animate: function (destX, destY, duration, easingFn) {\n\t\t\tvar that = this,\n\t\t\t    startX = this.x,\n\t\t\t    startY = this.y,\n\t\t\t    startTime = utils.getTime(),\n\t\t\t    destTime = startTime + duration;\n\n\t\t\tfunction step() {\n\t\t\t\tvar now = utils.getTime(),\n\t\t\t\t    newX,\n\t\t\t\t    newY,\n\t\t\t\t    easing;\n\n\t\t\t\tif (now >= destTime) {\n\t\t\t\t\tthat.isAnimating = false;\n\t\t\t\t\tthat._translate(destX, destY);\n\n\t\t\t\t\tif (!that.resetPosition(that.options.bounceTime)) {\n\t\t\t\t\t\tthat._execEvent('scrollEnd');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnow = (now - startTime) / duration;\n\t\t\t\teasing = easingFn(now);\n\t\t\t\tnewX = (destX - startX) * easing + startX;\n\t\t\t\tnewY = (destY - startY) * easing + startY;\n\t\t\t\tthat._translate(newX, newY);\n\n\t\t\t\tif (that.isAnimating) {\n\t\t\t\t\trAF(step);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.isAnimating = true;\n\t\t\tstep();\n\t\t},\n\t\thandleEvent: function (e) {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'touchstart':\n\t\t\t\tcase 'pointerdown':\n\t\t\t\tcase 'MSPointerDown':\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tthis._start(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchmove':\n\t\t\t\tcase 'pointermove':\n\t\t\t\tcase 'MSPointerMove':\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tthis._move(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchend':\n\t\t\t\tcase 'pointerup':\n\t\t\t\tcase 'MSPointerUp':\n\t\t\t\tcase 'mouseup':\n\t\t\t\tcase 'touchcancel':\n\t\t\t\tcase 'pointercancel':\n\t\t\t\tcase 'MSPointerCancel':\n\t\t\t\tcase 'mousecancel':\n\t\t\t\t\tthis._end(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'orientationchange':\n\t\t\t\tcase 'resize':\n\t\t\t\t\tthis._resize();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'transitionend':\n\t\t\t\tcase 'webkitTransitionEnd':\n\t\t\t\tcase 'oTransitionEnd':\n\t\t\t\tcase 'MSTransitionEnd':\n\t\t\t\t\tthis._transitionEnd(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wheel':\n\t\t\t\tcase 'DOMMouseScroll':\n\t\t\t\tcase 'mousewheel':\n\t\t\t\t\tthis._wheel(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'keydown':\n\t\t\t\t\tthis._key(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'click':\n\t\t\t\t\tif (!e._constructed) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\tfunction createDefaultScrollbar(direction, interactive, type) {\n\t\tvar scrollbar = document.createElement('div'),\n\t\t    indicator = document.createElement('div');\n\n\t\tif (type === true) {\n\t\t\tscrollbar.style.cssText = 'position:absolute;z-index:9999';\n\t\t\tindicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';\n\t\t}\n\n\t\tindicator.className = 'iScrollIndicator';\n\n\t\tif (direction == 'h') {\n\t\t\tif (type === true) {\n\t\t\t\tscrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\n\t\t\t\tindicator.style.height = '100%';\n\t\t\t}\n\t\t\tscrollbar.className = 'iScrollHorizontalScrollbar';\n\t\t} else {\n\t\t\tif (type === true) {\n\t\t\t\tscrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\n\t\t\t\tindicator.style.width = '100%';\n\t\t\t}\n\t\t\tscrollbar.className = 'iScrollVerticalScrollbar';\n\t\t}\n\n\t\tscrollbar.style.cssText += ';overflow:hidden';\n\n\t\tif (!interactive) {\n\t\t\tscrollbar.style.pointerEvents = 'none';\n\t\t}\n\n\t\tscrollbar.appendChild(indicator);\n\n\t\treturn scrollbar;\n\t}\n\n\tfunction Indicator(scroller, options) {\n\t\tthis.wrapper = typeof options.el == 'string' ? document.querySelector(options.el) : options.el;\n\t\tthis.wrapperStyle = this.wrapper.style;\n\t\tthis.indicator = this.wrapper.children[0];\n\t\tthis.indicatorStyle = this.indicator.style;\n\t\tthis.scroller = scroller;\n\n\t\tthis.options = {\n\t\t\tlistenX: true,\n\t\t\tlistenY: true,\n\t\t\tinteractive: false,\n\t\t\tresize: true,\n\t\t\tdefaultScrollbars: false,\n\t\t\tshrink: false,\n\t\t\tfade: false,\n\t\t\tspeedRatioX: 0,\n\t\t\tspeedRatioY: 0\n\t\t};\n\n\t\tfor (var i in options) {\n\t\t\tthis.options[i] = options[i];\n\t\t}\n\n\t\tthis.sizeRatioX = 1;\n\t\tthis.sizeRatioY = 1;\n\t\tthis.maxPosX = 0;\n\t\tthis.maxPosY = 0;\n\n\t\tif (this.options.interactive) {\n\t\t\tif (!this.options.disableTouch) {\n\t\t\t\tutils.addEvent(this.indicator, 'touchstart', this);\n\t\t\t\tutils.addEvent(window, 'touchend', this);\n\t\t\t}\n\t\t\tif (!this.options.disablePointer) {\n\t\t\t\tutils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t}\n\t\t\tif (!this.options.disableMouse) {\n\t\t\t\tutils.addEvent(this.indicator, 'mousedown', this);\n\t\t\t\tutils.addEvent(window, 'mouseup', this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.fade) {\n\t\t\tthis.wrapperStyle[utils.style.transform] = this.scroller.translateZ;\n\t\t\tthis.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid ? '0.001s' : '0ms';\n\t\t\tthis.wrapperStyle.opacity = '0';\n\t\t}\n\t}\n\n\tIndicator.prototype = {\n\t\thandleEvent: function (e) {\n\t\t\tswitch (e.type) {\n\t\t\t\tcase 'touchstart':\n\t\t\t\tcase 'pointerdown':\n\t\t\t\tcase 'MSPointerDown':\n\t\t\t\tcase 'mousedown':\n\t\t\t\t\tthis._start(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchmove':\n\t\t\t\tcase 'pointermove':\n\t\t\t\tcase 'MSPointerMove':\n\t\t\t\tcase 'mousemove':\n\t\t\t\t\tthis._move(e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'touchend':\n\t\t\t\tcase 'pointerup':\n\t\t\t\tcase 'MSPointerUp':\n\t\t\t\tcase 'mouseup':\n\t\t\t\tcase 'touchcancel':\n\t\t\t\tcase 'pointercancel':\n\t\t\t\tcase 'MSPointerCancel':\n\t\t\t\tcase 'mousecancel':\n\t\t\t\t\tthis._end(e);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tif (this.options.interactive) {\n\t\t\t\tutils.removeEvent(this.indicator, 'touchstart', this);\n\t\t\t\tutils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);\n\t\t\t\tutils.removeEvent(this.indicator, 'mousedown', this);\n\n\t\t\t\tutils.removeEvent(window, 'touchmove', this);\n\t\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t\tutils.removeEvent(window, 'mousemove', this);\n\n\t\t\t\tutils.removeEvent(window, 'touchend', this);\n\t\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);\n\t\t\t\tutils.removeEvent(window, 'mouseup', this);\n\t\t\t}\n\n\t\t\tif (this.options.defaultScrollbars) {\n\t\t\t\tthis.wrapper.parentNode.removeChild(this.wrapper);\n\t\t\t}\n\t\t},\n\n\t\t_start: function (e) {\n\t\t\tvar point = e.touches ? e.touches[0] : e;\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tthis.transitionTime();\n\n\t\t\tthis.initiated = true;\n\t\t\tthis.moved = false;\n\t\t\tthis.lastPointX = point.pageX;\n\t\t\tthis.lastPointY = point.pageY;\n\n\t\t\tthis.startTime = utils.getTime();\n\n\t\t\tif (!this.options.disableTouch) {\n\t\t\t\tutils.addEvent(window, 'touchmove', this);\n\t\t\t}\n\t\t\tif (!this.options.disablePointer) {\n\t\t\t\tutils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\t}\n\t\t\tif (!this.options.disableMouse) {\n\t\t\t\tutils.addEvent(window, 'mousemove', this);\n\t\t\t}\n\n\t\t\tthis.scroller._execEvent('beforeScrollStart');\n\t\t},\n\n\t\t_move: function (e) {\n\t\t\tvar point = e.touches ? e.touches[0] : e,\n\t\t\t    deltaX,\n\t\t\t    deltaY,\n\t\t\t    newX,\n\t\t\t    newY,\n\t\t\t    timestamp = utils.getTime();\n\n\t\t\tif (!this.moved) {\n\t\t\t\tthis.scroller._execEvent('scrollStart');\n\t\t\t}\n\n\t\t\tthis.moved = true;\n\n\t\t\tdeltaX = point.pageX - this.lastPointX;\n\t\t\tthis.lastPointX = point.pageX;\n\n\t\t\tdeltaY = point.pageY - this.lastPointY;\n\t\t\tthis.lastPointY = point.pageY;\n\n\t\t\tnewX = this.x + deltaX;\n\t\t\tnewY = this.y + deltaY;\n\n\t\t\tthis._pos(newX, newY);\n\n\t\t\t// INSERT POINT: indicator._move\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t},\n\n\t\t_end: function (e) {\n\t\t\tif (!this.initiated) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.initiated = false;\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tutils.removeEvent(window, 'touchmove', this);\n\t\t\tutils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);\n\t\t\tutils.removeEvent(window, 'mousemove', this);\n\n\t\t\tif (this.scroller.options.snap) {\n\t\t\t\tvar snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);\n\n\t\t\t\tvar time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);\n\n\t\t\t\tif (this.scroller.x != snap.x || this.scroller.y != snap.y) {\n\t\t\t\t\tthis.scroller.directionX = 0;\n\t\t\t\t\tthis.scroller.directionY = 0;\n\t\t\t\t\tthis.scroller.currentPage = snap;\n\t\t\t\t\tthis.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.moved) {\n\t\t\t\tthis.scroller._execEvent('scrollEnd');\n\t\t\t}\n\t\t},\n\n\t\ttransitionTime: function (time) {\n\t\t\ttime = time || 0;\n\t\t\tthis.indicatorStyle[utils.style.transitionDuration] = time + 'ms';\n\n\t\t\tif (!time && utils.isBadAndroid) {\n\t\t\t\tthis.indicatorStyle[utils.style.transitionDuration] = '0.001s';\n\t\t\t}\n\t\t},\n\n\t\ttransitionTimingFunction: function (easing) {\n\t\t\tthis.indicatorStyle[utils.style.transitionTimingFunction] = easing;\n\t\t},\n\n\t\trefresh: function () {\n\t\t\tthis.transitionTime();\n\n\t\t\tif (this.options.listenX && !this.options.listenY) {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';\n\t\t\t} else if (this.options.listenY && !this.options.listenX) {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t\t} else {\n\t\t\t\tthis.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';\n\t\t\t}\n\n\t\t\tif (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {\n\t\t\t\tutils.addClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\t\tutils.removeClass(this.wrapper, 'iScrollLoneScrollbar');\n\n\t\t\t\tif (this.options.defaultScrollbars && this.options.customStyle) {\n\t\t\t\t\tif (this.options.listenX) {\n\t\t\t\t\t\tthis.wrapper.style.right = '8px';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.wrapper.style.bottom = '8px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tutils.removeClass(this.wrapper, 'iScrollBothScrollbars');\n\t\t\t\tutils.addClass(this.wrapper, 'iScrollLoneScrollbar');\n\n\t\t\t\tif (this.options.defaultScrollbars && this.options.customStyle) {\n\t\t\t\t\tif (this.options.listenX) {\n\t\t\t\t\t\tthis.wrapper.style.right = '2px';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.wrapper.style.bottom = '2px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar r = this.wrapper.offsetHeight; // force refresh\n\n\t\t\tif (this.options.listenX) {\n\t\t\t\tthis.wrapperWidth = this.wrapper.clientWidth;\n\t\t\t\tif (this.options.resize) {\n\t\t\t\t\tthis.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);\n\t\t\t\t\tthis.indicatorStyle.width = this.indicatorWidth + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.indicatorWidth = this.indicator.clientWidth;\n\t\t\t\t}\n\n\t\t\t\tthis.maxPosX = this.wrapperWidth - this.indicatorWidth;\n\n\t\t\t\tif (this.options.shrink == 'clip') {\n\t\t\t\t\tthis.minBoundaryX = -this.indicatorWidth + 8;\n\t\t\t\t\tthis.maxBoundaryX = this.wrapperWidth - 8;\n\t\t\t\t} else {\n\t\t\t\t\tthis.minBoundaryX = 0;\n\t\t\t\t\tthis.maxBoundaryX = this.maxPosX;\n\t\t\t\t}\n\n\t\t\t\tthis.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;\n\t\t\t}\n\n\t\t\tif (this.options.listenY) {\n\t\t\t\tthis.wrapperHeight = this.wrapper.clientHeight;\n\t\t\t\tif (this.options.resize) {\n\t\t\t\t\tthis.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);\n\t\t\t\t\tthis.indicatorStyle.height = this.indicatorHeight + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tthis.indicatorHeight = this.indicator.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\n\t\t\t\tif (this.options.shrink == 'clip') {\n\t\t\t\t\tthis.minBoundaryY = -this.indicatorHeight + 8;\n\t\t\t\t\tthis.maxBoundaryY = this.wrapperHeight - 8;\n\t\t\t\t} else {\n\t\t\t\t\tthis.minBoundaryY = 0;\n\t\t\t\t\tthis.maxBoundaryY = this.maxPosY;\n\t\t\t\t}\n\n\t\t\t\tthis.maxPosY = this.wrapperHeight - this.indicatorHeight;\n\t\t\t\tthis.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;\n\t\t\t}\n\n\t\t\tthis.updatePosition();\n\t\t},\n\n\t\tupdatePosition: function () {\n\t\t\tvar x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,\n\t\t\t    y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;\n\n\t\t\tif (!this.options.ignoreBoundaries) {\n\t\t\t\tif (x < this.minBoundaryX) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.width = Math.max(this.indicatorWidth + x, 8);\n\t\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\tx = this.minBoundaryX;\n\t\t\t\t} else if (x > this.maxBoundaryX) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);\n\t\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t\t\tx = this.maxPosX + this.indicatorWidth - this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = this.maxBoundaryX;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.options.shrink == 'scale' && this.width != this.indicatorWidth) {\n\t\t\t\t\tthis.width = this.indicatorWidth;\n\t\t\t\t\tthis.indicatorStyle.width = this.width + 'px';\n\t\t\t\t}\n\n\t\t\t\tif (y < this.minBoundaryY) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.height = Math.max(this.indicatorHeight + y * 3, 8);\n\t\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\ty = this.minBoundaryY;\n\t\t\t\t} else if (y > this.maxBoundaryY) {\n\t\t\t\t\tif (this.options.shrink == 'scale') {\n\t\t\t\t\t\tthis.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);\n\t\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t\t\ty = this.maxPosY + this.indicatorHeight - this.height;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = this.maxBoundaryY;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.options.shrink == 'scale' && this.height != this.indicatorHeight) {\n\t\t\t\t\tthis.height = this.indicatorHeight;\n\t\t\t\t\tthis.indicatorStyle.height = this.height + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tif (this.scroller.options.useTransform) {\n\t\t\t\tthis.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;\n\t\t\t} else {\n\t\t\t\tthis.indicatorStyle.left = x + 'px';\n\t\t\t\tthis.indicatorStyle.top = y + 'px';\n\t\t\t}\n\t\t},\n\n\t\t_pos: function (x, y) {\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t} else if (x > this.maxPosX) {\n\t\t\t\tx = this.maxPosX;\n\t\t\t}\n\n\t\t\tif (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t} else if (y > this.maxPosY) {\n\t\t\t\ty = this.maxPosY;\n\t\t\t}\n\n\t\t\tx = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;\n\t\t\ty = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;\n\n\t\t\tthis.scroller.scrollTo(x, y);\n\t\t},\n\n\t\tfade: function (val, hold) {\n\t\t\tif (hold && !this.visible) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(this.fadeTimeout);\n\t\t\tthis.fadeTimeout = null;\n\n\t\t\tvar time = val ? 250 : 500,\n\t\t\t    delay = val ? 0 : 300;\n\n\t\t\tval = val ? '1' : '0';\n\n\t\t\tthis.wrapperStyle[utils.style.transitionDuration] = time + 'ms';\n\n\t\t\tthis.fadeTimeout = setTimeout(function (val) {\n\t\t\t\tthis.wrapperStyle.opacity = val;\n\t\t\t\tthis.visible = +val;\n\t\t\t}.bind(this, val), delay);\n\t\t}\n\t};\n\n\tIScroll.utils = utils;\n\n\tif (typeof module != 'undefined' && module.exports) {\n\t\tmodule.exports = IScroll;\n\t} else {\n\t\twindow.IScroll = IScroll;\n\t}\n})(window, document, Math);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9DOi9BcHBTZXJ2L3d3dy9kYXNoaXh1bi9odG1sL2xpYi9pc2Nyb2xsNS5qcz80Mjk4Il0sIm5hbWVzIjpbIndpbmRvdyIsImRvY3VtZW50IiwiTWF0aCIsInJBRiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtc1JlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbGxiYWNrIiwic2V0VGltZW91dCIsInV0aWxzIiwibWUiLCJfZWxlbWVudFN0eWxlIiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwiX3ZlbmRvciIsInZlbmRvcnMiLCJ0cmFuc2Zvcm0iLCJpIiwibCIsImxlbmd0aCIsInN1YnN0ciIsIl9wcmVmaXhTdHlsZSIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwiZ2V0VGltZSIsIkRhdGUiLCJub3ciLCJleHRlbmQiLCJ0YXJnZXQiLCJvYmoiLCJhZGRFdmVudCIsImVsIiwidHlwZSIsImZuIiwiY2FwdHVyZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJwcmVmaXhQb2ludGVyRXZlbnQiLCJwb2ludGVyRXZlbnQiLCJNU1BvaW50ZXJFdmVudCIsIm1vbWVudHVtIiwiY3VycmVudCIsInN0YXJ0IiwidGltZSIsImxvd2VyTWFyZ2luIiwid3JhcHBlclNpemUiLCJkZWNlbGVyYXRpb24iLCJkaXN0YW5jZSIsInNwZWVkIiwiYWJzIiwiZGVzdGluYXRpb24iLCJkdXJhdGlvbiIsInVuZGVmaW5lZCIsInJvdW5kIiwiX3RyYW5zZm9ybSIsImhhc1RyYW5zZm9ybSIsImhhc1BlcnNwZWN0aXZlIiwiaGFzVG91Y2giLCJoYXNQb2ludGVyIiwiUG9pbnRlckV2ZW50IiwiaGFzVHJhbnNpdGlvbiIsImlzQmFkQW5kcm9pZCIsInRlc3QiLCJuYXZpZ2F0b3IiLCJhcHBWZXJzaW9uIiwidHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwidHJhbnNpdGlvbkRlbGF5IiwidHJhbnNmb3JtT3JpZ2luIiwiaGFzQ2xhc3MiLCJlIiwiYyIsInJlIiwiUmVnRXhwIiwiY2xhc3NOYW1lIiwiYWRkQ2xhc3MiLCJuZXdjbGFzcyIsInNwbGl0IiwicHVzaCIsImpvaW4iLCJyZW1vdmVDbGFzcyIsInJlcGxhY2UiLCJvZmZzZXQiLCJsZWZ0Iiwib2Zmc2V0TGVmdCIsInRvcCIsIm9mZnNldFRvcCIsIm9mZnNldFBhcmVudCIsInByZXZlbnREZWZhdWx0RXhjZXB0aW9uIiwiZXhjZXB0aW9ucyIsImV2ZW50VHlwZSIsInRvdWNoc3RhcnQiLCJ0b3VjaG1vdmUiLCJ0b3VjaGVuZCIsIm1vdXNlZG93biIsIm1vdXNlbW92ZSIsIm1vdXNldXAiLCJwb2ludGVyZG93biIsInBvaW50ZXJtb3ZlIiwicG9pbnRlcnVwIiwiTVNQb2ludGVyRG93biIsIk1TUG9pbnRlck1vdmUiLCJNU1BvaW50ZXJVcCIsImVhc2UiLCJxdWFkcmF0aWMiLCJrIiwiY2lyY3VsYXIiLCJzcXJ0IiwiYmFjayIsImIiLCJib3VuY2UiLCJlbGFzdGljIiwiZiIsInBvdyIsInNpbiIsIlBJIiwidGFwIiwiZXZlbnROYW1lIiwiZXYiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsInBhZ2VYIiwicGFnZVkiLCJkaXNwYXRjaEV2ZW50IiwiY2xpY2siLCJ0YWdOYW1lIiwiaW5pdE1vdXNlRXZlbnQiLCJ2aWV3Iiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsImN0cmxLZXkiLCJhbHRLZXkiLCJzaGlmdEtleSIsIm1ldGFLZXkiLCJfY29uc3RydWN0ZWQiLCJJU2Nyb2xsIiwib3B0aW9ucyIsIndyYXBwZXIiLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsZXIiLCJjaGlsZHJlbiIsInNjcm9sbGVyU3R5bGUiLCJyZXNpemVTY3JvbGxiYXJzIiwibW91c2VXaGVlbFNwZWVkIiwic25hcFRocmVzaG9sZCIsInN0YXJ0WCIsInN0YXJ0WSIsInNjcm9sbFkiLCJkaXJlY3Rpb25Mb2NrVGhyZXNob2xkIiwiYm91bmNlVGltZSIsImJvdW5jZUVhc2luZyIsInByZXZlbnREZWZhdWx0IiwiSFdDb21wb3NpdGluZyIsInVzZVRyYW5zaXRpb24iLCJ1c2VUcmFuc2Zvcm0iLCJ0cmFuc2xhdGVaIiwiZXZlbnRQYXNzdGhyb3VnaCIsInNjcm9sbFgiLCJmcmVlU2Nyb2xsIiwicmVzaXplUG9sbGluZyIsInNocmlua1Njcm9sbGJhcnMiLCJpbnZlcnRXaGVlbERpcmVjdGlvbiIsIngiLCJ5IiwiZGlyZWN0aW9uWCIsImRpcmVjdGlvblkiLCJfZXZlbnRzIiwiX2luaXQiLCJyZWZyZXNoIiwic2Nyb2xsVG8iLCJlbmFibGUiLCJwcm90b3R5cGUiLCJ2ZXJzaW9uIiwiX2luaXRFdmVudHMiLCJzY3JvbGxiYXJzIiwiaW5kaWNhdG9ycyIsIl9pbml0SW5kaWNhdG9ycyIsIm1vdXNlV2hlZWwiLCJfaW5pdFdoZWVsIiwic25hcCIsIl9pbml0U25hcCIsImtleUJpbmRpbmdzIiwiX2luaXRLZXlzIiwiZGVzdHJveSIsIl9leGVjRXZlbnQiLCJfdHJhbnNpdGlvbkVuZCIsImlzSW5UcmFuc2l0aW9uIiwiX3RyYW5zaXRpb25UaW1lIiwicmVzZXRQb3NpdGlvbiIsIl9zdGFydCIsImJ1dHRvbiIsImVuYWJsZWQiLCJpbml0aWF0ZWQiLCJwb2ludCIsInRvdWNoZXMiLCJwb3MiLCJtb3ZlZCIsImRpc3RYIiwiZGlzdFkiLCJkaXJlY3Rpb25Mb2NrZWQiLCJzdGFydFRpbWUiLCJnZXRDb21wdXRlZFBvc2l0aW9uIiwiX3RyYW5zbGF0ZSIsImlzQW5pbWF0aW5nIiwiYWJzU3RhcnRYIiwiYWJzU3RhcnRZIiwicG9pbnRYIiwicG9pbnRZIiwiX21vdmUiLCJkZWx0YVgiLCJkZWx0YVkiLCJ0aW1lc3RhbXAiLCJuZXdYIiwibmV3WSIsImFic0Rpc3RYIiwiYWJzRGlzdFkiLCJlbmRUaW1lIiwiaGFzSG9yaXpvbnRhbFNjcm9sbCIsImhhc1ZlcnRpY2FsU2Nyb2xsIiwibWF4U2Nyb2xsWCIsIm1heFNjcm9sbFkiLCJfZW5kIiwiY2hhbmdlZFRvdWNoZXMiLCJtb21lbnR1bVgiLCJtb21lbnR1bVkiLCJkaXN0YW5jZVgiLCJkaXN0YW5jZVkiLCJlYXNpbmciLCJmbGljayIsIndyYXBwZXJXaWR0aCIsIndyYXBwZXJIZWlnaHQiLCJtYXgiLCJfbmVhcmVzdFNuYXAiLCJjdXJyZW50UGFnZSIsInNuYXBTcGVlZCIsIm1pbiIsIl9yZXNpemUiLCJ0aGF0IiwiY2xlYXJUaW1lb3V0IiwicmVzaXplVGltZW91dCIsImRpc2FibGUiLCJyZiIsIm9mZnNldEhlaWdodCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0Iiwic2Nyb2xsZXJXaWR0aCIsIm9mZnNldFdpZHRoIiwic2Nyb2xsZXJIZWlnaHQiLCJ3cmFwcGVyT2Zmc2V0Iiwib24iLCJvZmYiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJhcHBseSIsInNsaWNlIiwiY2FsbCIsImFyZ3VtZW50cyIsInNjcm9sbEJ5IiwiX3RyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiIsIl9hbmltYXRlIiwic2Nyb2xsVG9FbGVtZW50Iiwib2Zmc2V0WCIsIm9mZnNldFkiLCJub2RlVHlwZSIsInRyYW5zaXRpb25UaW1lIiwidXBkYXRlUG9zaXRpb24iLCJyZW1vdmUiLCJiaW5kVG9XcmFwcGVyIiwiZGlzYWJsZU1vdXNlIiwiZGlzYWJsZVBvaW50ZXIiLCJkaXNhYmxlVG91Y2giLCJtYXRyaXgiLCJnZXRDb21wdXRlZFN0eWxlIiwiaW50ZXJhY3RpdmUiLCJpbnRlcmFjdGl2ZVNjcm9sbGJhcnMiLCJjdXN0b21TdHlsZSIsImluZGljYXRvciIsImNyZWF0ZURlZmF1bHRTY3JvbGxiYXIiLCJkZWZhdWx0U2Nyb2xsYmFycyIsInJlc2l6ZSIsInNocmluayIsImZhZGUiLCJmYWRlU2Nyb2xsYmFycyIsImxpc3RlblgiLCJhcHBlbmRDaGlsZCIsImxpc3RlblkiLCJjb25jYXQiLCJJbmRpY2F0b3IiLCJfaW5kaWNhdG9yc01hcCIsIl93aGVlbCIsInN0b3BQcm9wYWdhdGlvbiIsIndoZWVsRGVsdGFYIiwid2hlZWxEZWx0YVkiLCJ3aGVlbFRpbWVvdXQiLCJkZWx0YU1vZGUiLCJ3aGVlbERlbHRhIiwiZGV0YWlsIiwiZ29Ub1BhZ2UiLCJxdWVyeVNlbGVjdG9yQWxsIiwibSIsIm4iLCJjeCIsImN5Iiwic3RlcFgiLCJzbmFwU3RlcFgiLCJzdGVwWSIsInNuYXBTdGVwWSIsInBhZ2VzIiwid2lkdGgiLCJoZWlnaHQiLCJzbmFwVGhyZXNob2xkWCIsInNuYXBUaHJlc2hvbGRZIiwicG9zWCIsInBvc1kiLCJuZXh0IiwicHJldiIsImtleXMiLCJwYWdlVXAiLCJwYWdlRG93biIsImVuZCIsImhvbWUiLCJ1cCIsInJpZ2h0IiwiZG93biIsImNoYXJDb2RlQXQiLCJfa2V5IiwicHJldlRpbWUiLCJrZXlUaW1lIiwiYWNjZWxlcmF0aW9uIiwia2V5QWNjZWxlcmF0aW9uIiwia2V5Q29kZSIsImRlc3RYIiwiZGVzdFkiLCJlYXNpbmdGbiIsImRlc3RUaW1lIiwic3RlcCIsImhhbmRsZUV2ZW50IiwiZGlyZWN0aW9uIiwic2Nyb2xsYmFyIiwiY3NzVGV4dCIsInBvaW50ZXJFdmVudHMiLCJ3cmFwcGVyU3R5bGUiLCJpbmRpY2F0b3JTdHlsZSIsInNwZWVkUmF0aW9YIiwic3BlZWRSYXRpb1kiLCJzaXplUmF0aW9YIiwic2l6ZVJhdGlvWSIsIm1heFBvc1giLCJtYXhQb3NZIiwib3BhY2l0eSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImxhc3RQb2ludFgiLCJsYXN0UG9pbnRZIiwiX3BvcyIsImRpc3BsYXkiLCJib3R0b20iLCJyIiwiaW5kaWNhdG9yV2lkdGgiLCJtaW5Cb3VuZGFyeVgiLCJtYXhCb3VuZGFyeVgiLCJpbmRpY2F0b3JIZWlnaHQiLCJtaW5Cb3VuZGFyeVkiLCJtYXhCb3VuZGFyeVkiLCJpZ25vcmVCb3VuZGFyaWVzIiwidmFsIiwiaG9sZCIsInZpc2libGUiLCJmYWRlVGltZW91dCIsImRlbGF5IiwiYmluZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsQ0FBQyxVQUFVQSxNQUFWLEVBQWtCQyxRQUFsQixFQUE0QkMsSUFBNUIsRUFBa0M7QUFDbkMsS0FBSUMsTUFBTUgsT0FBT0kscUJBQVAsSUFDVEosT0FBT0ssMkJBREUsSUFFVEwsT0FBT00sd0JBRkUsSUFHVE4sT0FBT08sc0JBSEUsSUFJVFAsT0FBT1EsdUJBSkUsSUFLVCxVQUFVQyxRQUFWLEVBQW9CO0FBQUVULFNBQU9VLFVBQVAsQ0FBa0JELFFBQWxCLEVBQTRCLE9BQU8sRUFBbkM7QUFBeUMsRUFMaEU7O0FBT0EsS0FBSUUsUUFBUyxZQUFZO0FBQ3hCLE1BQUlDLEtBQUssRUFBVDs7QUFFQSxNQUFJQyxnQkFBZ0JaLFNBQVNhLGFBQVQsQ0FBdUIsS0FBdkIsRUFBOEJDLEtBQWxEO0FBQ0EsTUFBSUMsVUFBVyxZQUFZO0FBQzFCLE9BQUlDLFVBQVUsQ0FBQyxHQUFELEVBQU0sU0FBTixFQUFpQixNQUFqQixFQUF5QixLQUF6QixFQUFnQyxJQUFoQyxDQUFkO0FBQUEsT0FDQ0MsU0FERDtBQUFBLE9BRUNDLElBQUksQ0FGTDtBQUFBLE9BR0NDLElBQUlILFFBQVFJLE1BSGI7O0FBS0EsVUFBUUYsSUFBSUMsQ0FBWixFQUFlRCxHQUFmLEVBQXFCO0FBQ3BCRCxnQkFBWUQsUUFBUUUsQ0FBUixJQUFhLFVBQXpCO0FBQ0EsUUFBS0QsYUFBYUwsYUFBbEIsRUFBa0MsT0FBT0ksUUFBUUUsQ0FBUixFQUFXRyxNQUFYLENBQWtCLENBQWxCLEVBQXFCTCxRQUFRRSxDQUFSLEVBQVdFLE1BQVgsR0FBa0IsQ0FBdkMsQ0FBUDtBQUNsQzs7QUFFRCxVQUFPLEtBQVA7QUFDQSxHQVphLEVBQWQ7O0FBY0EsV0FBU0UsWUFBVCxDQUF1QlIsS0FBdkIsRUFBOEI7QUFDN0IsT0FBS0MsWUFBWSxLQUFqQixFQUF5QixPQUFPLEtBQVA7QUFDekIsT0FB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R0FBaEI7QUFDQSxJQUg2QixDQUczQkssSUFIMkIsQ0FHdEIsSUFIc0IsRUFHaEJMLEdBSGdCLENBQVgsRUFHQ0ksS0FIRCxDQUFuQjtBQUlBO0FBNVVvQixFQUF0Qjs7QUErVUEzTyxTQUFRakksS0FBUixHQUFnQkEsS0FBaEI7O0FBRUEsS0FBSyxPQUFPOFcsTUFBUCxJQUFpQixXQUFqQixJQUFnQ0EsT0FBT0MsT0FBNUMsRUFBc0Q7QUFDckRELFNBQU9DLE9BQVAsR0FBaUI5TyxPQUFqQjtBQUNBLEVBRkQsTUFFTztBQUNONUksU0FBTzRJLE9BQVAsR0FBaUJBLE9BQWpCO0FBQ0E7QUFFQSxDQS85REQsRUErOURHNUksTUEvOURILEVBKzlEV0MsUUEvOURYLEVBKzlEcUJDLElBLzlEckIiLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgaVNjcm9sbCB2NS4xLjMgfiAoYykgMjAwOC0yMDE0IE1hdHRlbyBTcGluZWxsaSB+IGh0dHA6Ly9jdWJpcS5vcmcvbGljZW5zZSAqL1xuKGZ1bmN0aW9uICh3aW5kb3csIGRvY3VtZW50LCBNYXRoKSB7XG52YXIgckFGID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZVx0fHxcblx0d2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZVx0fHxcblx0d2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZVx0XHR8fFxuXHR3aW5kb3cub1JlcXVlc3RBbmltYXRpb25GcmFtZVx0XHR8fFxuXHR3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcdFx0fHxcblx0ZnVuY3Rpb24gKGNhbGxiYWNrKSB7IHdpbmRvdy5zZXRUaW1lb3V0KGNhbGxiYWNrLCAxMDAwIC8gNjApOyB9O1xuXG52YXIgdXRpbHMgPSAoZnVuY3Rpb24gKCkge1xuXHR2YXIgbWUgPSB7fTtcblxuXHR2YXIgX2VsZW1lbnRTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLnN0eWxlO1xuXHR2YXIgX3ZlbmRvciA9IChmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIHZlbmRvcnMgPSBbJ3QnLCAnd2Via2l0VCcsICdNb3pUJywgJ21zVCcsICdPVCddLFxuXHRcdFx0dHJhbnNmb3JtLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdmVuZG9ycy5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHR0cmFuc2Zvcm0gPSB2ZW5kb3JzW2ldICsgJ3JhbnNmb3JtJztcblx0XHRcdGlmICggdHJhbnNmb3JtIGluIF9lbGVtZW50U3R5bGUgKSByZXR1cm4gdmVuZG9yc1tpXS5zdWJzdHIoMCwgdmVuZG9yc1tpXS5sZW5ndGgtMSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9KSgpO1xuXG5cdGZ1bmN0aW9uIF9wcmVmaXhTdHlsZSAoc3R5bGUpIHtcblx0XHRpZiAoIF92ZW5kb3IgPT09IGZhbHNlICkgcmV0dXJuIGZhbHNlO1xuXHRcdGlmICggX3ZlbmRvciA9PT0gJycgKSByZXR1cm4gc3R5bGU7XG5cdFx0cmV0dXJuIF92ZW5kb3IgKyBzdHlsZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0eWxlLnN1YnN0cigxKTtcblx0fVxuXG5cdG1lLmdldFRpbWUgPSBEYXRlLm5vdyB8fCBmdW5jdGlvbiBnZXRUaW1lICgpIHsgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9O1xuXG5cdG1lLmV4dGVuZCA9IGZ1bmN0aW9uICh0YXJnZXQsIG9iaikge1xuXHRcdGZvciAoIHZhciBpIGluIG9iaiApIHtcblx0XHRcdHRhcmdldFtpXSA9IG9ialtpXTtcblx0XHR9XG5cdH07XG5cblx0bWUuYWRkRXZlbnQgPSBmdW5jdGlvbiAoZWwsIHR5cGUsIGZuLCBjYXB0dXJlKSB7XG5cdFx0ZWwuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBmbiwgISFjYXB0dXJlKTtcblx0fTtcblxuXHRtZS5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uIChlbCwgdHlwZSwgZm4sIGNhcHR1cmUpIHtcblx0XHRlbC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGZuLCAhIWNhcHR1cmUpO1xuXHR9O1xuXG5cdG1lLnByZWZpeFBvaW50ZXJFdmVudCA9IGZ1bmN0aW9uIChwb2ludGVyRXZlbnQpIHtcblx0XHRyZXR1cm4gd2luZG93Lk1TUG9pbnRlckV2ZW50ID8gXG5cdFx0XHQnTVNQb2ludGVyJyArIHBvaW50ZXJFdmVudC5jaGFyQXQoOSkudG9VcHBlckNhc2UoKSArIHBvaW50ZXJFdmVudC5zdWJzdHIoMTApOlxuXHRcdFx0cG9pbnRlckV2ZW50O1xuXHR9O1xuXG5cdG1lLm1vbWVudHVtID0gZnVuY3Rpb24gKGN1cnJlbnQsIHN0YXJ0LCB0aW1lLCBsb3dlck1hcmdpbiwgd3JhcHBlclNpemUsIGRlY2VsZXJhdGlvbikge1xuXHRcdHZhciBkaXN0YW5jZSA9IGN1cnJlbnQgLSBzdGFydCxcblx0XHRcdHNwZWVkID0gTWF0aC5hYnMoZGlzdGFuY2UpIC8gdGltZSxcblx0XHRcdGRlc3RpbmF0aW9uLFxuXHRcdFx0ZHVyYXRpb247XG5cblx0XHRkZWNlbGVyYXRpb24gPSBkZWNlbGVyYXRpb24gPT09IHVuZGVmaW5lZCA/IDAuMDAwNiA6IGRlY2VsZXJhdGlvbjtcblxuXHRcdGRlc3RpbmF0aW9uID0gY3VycmVudCArICggc3BlZWQgKiBzcGVlZCApIC8gKCAyICogZGVjZWxlcmF0aW9uICkgKiAoIGRpc3RhbmNlIDwgMCA/IC0xIDogMSApO1xuXHRcdGR1cmF0aW9uID0gc3BlZWQgLyBkZWNlbGVyYXRpb247XG5cblx0XHRpZiAoIGRlc3RpbmF0aW9uIDwgbG93ZXJNYXJnaW4gKSB7XG5cdFx0XHRkZXN0aW5hdGlvbiA9IHdyYXBwZXJTaXplID8gbG93ZXJNYXJnaW4gLSAoIHdyYXBwZXJTaXplIC8gMi41ICogKCBzcGVlZCAvIDggKSApIDogbG93ZXJNYXJnaW47XG5cdFx0XHRkaXN0YW5jZSA9IE1hdGguYWJzKGRlc3RpbmF0aW9uIC0gY3VycmVudCk7XG5cdFx0XHRkdXJhdGlvbiA9IGRpc3RhbmNlIC8gc3BlZWQ7XG5cdFx0fSBlbHNlIGlmICggZGVzdGluYXRpb24gPiAwICkge1xuXHRcdFx0ZGVzdGluYXRpb24gPSB3cmFwcGVyU2l6ZSA/IHdyYXBwZXJTaXplIC8gMi41ICogKCBzcGVlZCAvIDggKSA6IDA7XG5cdFx0XHRkaXN0YW5jZSA9IE1hdGguYWJzKGN1cnJlbnQpICsgZGVzdGluYXRpb247XG5cdFx0XHRkdXJhdGlvbiA9IGRpc3RhbmNlIC8gc3BlZWQ7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHtcblx0XHRcdGRlc3RpbmF0aW9uOiBNYXRoLnJvdW5kKGRlc3RpbmF0aW9uKSxcblx0XHRcdGR1cmF0aW9uOiBkdXJhdGlvblxuXHRcdH07XG5cdH07XG5cblx0dmFyIF90cmFuc2Zvcm0gPSBfcHJlZml4U3R5bGUoJ3RyYW5zZm9ybScpO1xuXG5cdG1lLmV4dGVuZChtZSwge1xuXHRcdGhhc1RyYW5zZm9ybTogX3RyYW5zZm9ybSAhPT0gZmFsc2UsXG5cdFx0aGFzUGVyc3BlY3RpdmU6IF9wcmVmaXhTdHlsZSgncGVyc3BlY3RpdmUnKSBpbiBfZWxlbWVudFN0eWxlLFxuXHRcdGhhc1RvdWNoOiAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3csXG5cdFx0aGFzUG9pbnRlcjogd2luZG93LlBvaW50ZXJFdmVudCB8fCB3aW5kb3cuTVNQb2ludGVyRXZlbnQsIC8vIElFMTAgaXMgcHJlZml4ZWRcblx0XHRoYXNUcmFuc2l0aW9uOiBfcHJlZml4U3R5bGUoJ3RyYW5zaXRpb24nKSBpbiBfZWxlbWVudFN0eWxlXG5cdH0pO1xuXG5cdC8vIFRoaXMgc2hvdWxkIGZpbmQgYWxsIEFuZHJvaWQgYnJvd3NlcnMgbG93ZXIgdGhhbiBidWlsZCA1MzUuMTkgKGJvdGggc3RvY2sgYnJvd3NlciBhbmQgd2Vidmlldylcblx0bWUuaXNCYWRBbmRyb2lkID0gL0FuZHJvaWQgLy50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IuYXBwVmVyc2lvbikgJiYgISgvQ2hyb21lXFwvXFxkLy50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IuYXBwVmVyc2lvbikpO1xuXG5cdG1lLmV4dGVuZChtZS5zdHlsZSA9IHt9LCB7XG5cdFx0dHJhbnNmb3JtOiBfdHJhbnNmb3JtLFxuXHRcdHRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbjogX3ByZWZpeFN0eWxlKCd0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24nKSxcblx0XHR0cmFuc2l0aW9uRHVyYXRpb246IF9wcmVmaXhTdHlsZSgndHJhbnNpdGlvbkR1cmF0aW9uJyksXG5cdFx0dHJhbnNpdGlvbkRlbGF5OiBfcHJlZml4U3R5bGUoJ3RyYW5zaXRpb25EZWxheScpLFxuXHRcdHRyYW5zZm9ybU9yaWdpbjogX3ByZWZpeFN0eWxlKCd0cmFuc2Zvcm1PcmlnaW4nKVxuXHR9KTtcblxuXHRtZS5oYXNDbGFzcyA9IGZ1bmN0aW9uIChlLCBjKSB7XG5cdFx0dmFyIHJlID0gbmV3IFJlZ0V4cChcIihefFxcXFxzKVwiICsgYyArIFwiKFxcXFxzfCQpXCIpO1xuXHRcdHJldHVybiByZS50ZXN0KGUuY2xhc3NOYW1lKTtcblx0fTtcblxuXHRtZS5hZGRDbGFzcyA9IGZ1bmN0aW9uIChlLCBjKSB7XG5cdFx0aWYgKCBtZS5oYXNDbGFzcyhlLCBjKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgbmV3Y2xhc3MgPSBlLmNsYXNzTmFtZS5zcGxpdCgnICcpO1xuXHRcdG5ld2NsYXNzLnB1c2goYyk7XG5cdFx0ZS5jbGFzc05hbWUgPSBuZXdjbGFzcy5qb2luKCcgJyk7XG5cdH07XG5cblx0bWUucmVtb3ZlQ2xhc3MgPSBmdW5jdGlvbiAoZSwgYykge1xuXHRcdGlmICggIW1lLmhhc0NsYXNzKGUsIGMpICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciByZSA9IG5ldyBSZWdFeHAoXCIoXnxcXFxccylcIiArIGMgKyBcIihcXFxcc3wkKVwiLCAnZycpO1xuXHRcdGUuY2xhc3NOYW1lID0gZS5jbGFzc05hbWUucmVwbGFjZShyZSwgJyAnKTtcblx0fTtcblxuXHRtZS5vZmZzZXQgPSBmdW5jdGlvbiAoZWwpIHtcblx0XHR2YXIgbGVmdCA9IC1lbC5vZmZzZXRMZWZ0LFxuXHRcdFx0dG9wID0gLWVsLm9mZnNldFRvcDtcblxuXHRcdC8vIGpzaGludCAtVzA4NFxuXHRcdHdoaWxlIChlbCA9IGVsLm9mZnNldFBhcmVudCkge1xuXHRcdFx0bGVmdCAtPSBlbC5vZmZzZXRMZWZ0O1xuXHRcdFx0dG9wIC09IGVsLm9mZnNldFRvcDtcblx0XHR9XG5cdFx0Ly8ganNoaW50ICtXMDg0XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0bGVmdDogbGVmdCxcblx0XHRcdHRvcDogdG9wXG5cdFx0fTtcblx0fTtcblxuXHRtZS5wcmV2ZW50RGVmYXVsdEV4Y2VwdGlvbiA9IGZ1bmN0aW9uIChlbCwgZXhjZXB0aW9ucykge1xuXHRcdGZvciAoIHZhciBpIGluIGV4Y2VwdGlvbnMgKSB7XG5cdFx0XHRpZiAoIGV4Y2VwdGlvbnNbaV0udGVzdChlbFtpXSkgKSB7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcblxuXHRtZS5leHRlbmQobWUuZXZlbnRUeXBlID0ge30sIHtcblx0XHR0b3VjaHN0YXJ0OiAxLFxuXHRcdHRvdWNobW92ZTogMSxcblx0XHR0b3VjaGVuZDogMSxcblxuXHRcdG1vdXNlZG93bjogMixcblx0XHRtb3VzZW1vdmU6IDIsXG5cdFx0bW91c2V1cDogMixcblxuXHRcdHBvaW50ZXJkb3duOiAzLFxuXHRcdHBvaW50ZXJtb3ZlOiAzLFxuXHRcdHBvaW50ZXJ1cDogMyxcblxuXHRcdE1TUG9pbnRlckRvd246IDMsXG5cdFx0TVNQb2ludGVyTW92ZTogMyxcblx0XHRNU1BvaW50ZXJVcDogM1xuXHR9KTtcblxuXHRtZS5leHRlbmQobWUuZWFzZSA9IHt9LCB7XG5cdFx0cXVhZHJhdGljOiB7XG5cdFx0XHRzdHlsZTogJ2N1YmljLWJlemllcigwLjI1LCAwLjQ2LCAwLjQ1LCAwLjk0KScsXG5cdFx0XHRmbjogZnVuY3Rpb24gKGspIHtcblx0XHRcdFx0cmV0dXJuIGsgKiAoIDIgLSBrICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRjaXJjdWxhcjoge1xuXHRcdFx0c3R5bGU6ICdjdWJpYy1iZXppZXIoMC4xLCAwLjU3LCAwLjEsIDEpJyxcdC8vIE5vdCBwcm9wZXJseSBcImNpcmN1bGFyXCIgYnV0IHRoaXMgbG9va3MgYmV0dGVyLCBpdCBzaG91bGQgYmUgKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSlcblx0XHRcdGZuOiBmdW5jdGlvbiAoaykge1xuXHRcdFx0XHRyZXR1cm4gTWF0aC5zcXJ0KCAxIC0gKCAtLWsgKiBrICkgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdGJhY2s6IHtcblx0XHRcdHN0eWxlOiAnY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpJyxcblx0XHRcdGZuOiBmdW5jdGlvbiAoaykge1xuXHRcdFx0XHR2YXIgYiA9IDQ7XG5cdFx0XHRcdHJldHVybiAoIGsgPSBrIC0gMSApICogayAqICggKCBiICsgMSApICogayArIGIgKSArIDE7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRib3VuY2U6IHtcblx0XHRcdHN0eWxlOiAnJyxcblx0XHRcdGZuOiBmdW5jdGlvbiAoaykge1xuXHRcdFx0XHRpZiAoICggayAvPSAxICkgPCAoIDEgLyAyLjc1ICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIDcuNTYyNSAqIGsgKiBrO1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBrIDwgKCAyIC8gMi43NSApICkge1xuXHRcdFx0XHRcdHJldHVybiA3LjU2MjUgKiAoIGsgLT0gKCAxLjUgLyAyLjc1ICkgKSAqIGsgKyAwLjc1O1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBrIDwgKCAyLjUgLyAyLjc1ICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIDcuNTYyNSAqICggayAtPSAoIDIuMjUgLyAyLjc1ICkgKSAqIGsgKyAwLjkzNzU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cmV0dXJuIDcuNTYyNSAqICggayAtPSAoIDIuNjI1IC8gMi43NSApICkgKiBrICsgMC45ODQzNzU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdGVsYXN0aWM6IHtcblx0XHRcdHN0eWxlOiAnJyxcblx0XHRcdGZuOiBmdW5jdGlvbiAoaykge1xuXHRcdFx0XHR2YXIgZiA9IDAuMjIsXG5cdFx0XHRcdFx0ZSA9IDAuNDtcblxuXHRcdFx0XHRpZiAoIGsgPT09IDAgKSB7IHJldHVybiAwOyB9XG5cdFx0XHRcdGlmICggayA9PSAxICkgeyByZXR1cm4gMTsgfVxuXG5cdFx0XHRcdHJldHVybiAoIGUgKiBNYXRoLnBvdyggMiwgLSAxMCAqIGsgKSAqIE1hdGguc2luKCAoIGsgLSBmIC8gNCApICogKCAyICogTWF0aC5QSSApIC8gZiApICsgMSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG5cblx0bWUudGFwID0gZnVuY3Rpb24gKGUsIGV2ZW50TmFtZSkge1xuXHRcdHZhciBldiA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuXHRcdGV2LmluaXRFdmVudChldmVudE5hbWUsIHRydWUsIHRydWUpO1xuXHRcdGV2LnBhZ2VYID0gZS5wYWdlWDtcblx0XHRldi5wYWdlWSA9IGUucGFnZVk7XG5cdFx0ZS50YXJnZXQuZGlzcGF0Y2hFdmVudChldik7XG5cdH07XG5cblx0bWUuY2xpY2sgPSBmdW5jdGlvbiAoZSkge1xuXHRcdHZhciB0YXJnZXQgPSBlLnRhcmdldCxcblx0XHRcdGV2O1xuXG5cdFx0aWYgKCAhKC8oU0VMRUNUfElOUFVUfFRFWFRBUkVBKS9pKS50ZXN0KHRhcmdldC50YWdOYW1lKSApIHtcblx0XHRcdGV2ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ01vdXNlRXZlbnRzJyk7XG5cdFx0XHRldi5pbml0TW91c2VFdmVudCgnY2xpY2snLCB0cnVlLCB0cnVlLCBlLnZpZXcsIDEsXG5cdFx0XHRcdHRhcmdldC5zY3JlZW5YLCB0YXJnZXQuc2NyZWVuWSwgdGFyZ2V0LmNsaWVudFgsIHRhcmdldC5jbGllbnRZLFxuXHRcdFx0XHRlLmN0cmxLZXksIGUuYWx0S2V5LCBlLnNoaWZ0S2V5LCBlLm1ldGFLZXksXG5cdFx0XHRcdDAsIG51bGwpO1xuXG5cdFx0XHRldi5fY29uc3RydWN0ZWQgPSB0cnVlO1xuXHRcdFx0dGFyZ2V0LmRpc3BhdGNoRXZlbnQoZXYpO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gbWU7XG59KSgpO1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuKioqKioqKioqKioqKioqKioqKioqKioqKlxuKioqKioqKioqKioqKioqKioqKioqKioqKlxuKioqKioqKioqKioqKioqKioqKioqKioqKlxuKioqKioqKioqKioqKioqKioqKioqKioqKlxuKioqKioqKioqKioqKioqKioqKioqKioqKlxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbmZ1bmN0aW9uIElTY3JvbGwgKGVsLCBvcHRpb25zKSB7Ly9lbOi/meS4quWPguaVsOWPr+S7peaYr0NTU+mAieaLqeWZqO+8jOS5n+WPr+S7peaYr+S4gOS4qkRPTeWvueixoVxuXHR0aGlzLndyYXBwZXIgPSB0eXBlb2YgZWwgPT0gJ3N0cmluZycgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsKSA6IGVsO1xuXHR0aGlzLnNjcm9sbGVyID0gdGhpcy53cmFwcGVyLmNoaWxkcmVuWzBdO1xuXHR0aGlzLnNjcm9sbGVyU3R5bGUgPSB0aGlzLnNjcm9sbGVyLnN0eWxlO1x0XHQvLyBjYWNoZSBzdHlsZSBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlXG5cblx0dGhpcy5vcHRpb25zID0ge1xuXG5cdFx0cmVzaXplU2Nyb2xsYmFyczogdHJ1ZSxcblxuXHRcdG1vdXNlV2hlZWxTcGVlZDogMjAsXG5cblx0XHRzbmFwVGhyZXNob2xkOiAwLjMzNCxcblxuLy8gSU5TRVJUIFBPSU5UOiBPUFRJT05TIFxuXG5cdFx0c3RhcnRYOiAwLFxuXHRcdHN0YXJ0WTogMCxcblx0XHRzY3JvbGxZOiB0cnVlLFxuXHRcdGRpcmVjdGlvbkxvY2tUaHJlc2hvbGQ6IDUsXG5cdFx0bW9tZW50dW06IHRydWUsXG5cblx0XHRib3VuY2U6IHRydWUsXG5cdFx0Ym91bmNlVGltZTogNjAwLFxuXHRcdGJvdW5jZUVhc2luZzogJycsXG5cblx0XHRwcmV2ZW50RGVmYXVsdDogdHJ1ZSxcblx0XHRwcmV2ZW50RGVmYXVsdEV4Y2VwdGlvbjogeyB0YWdOYW1lOiAvXihJTlBVVHxURVhUQVJFQXxCVVRUT058U0VMRUNUKSQvIH0sXG5cblx0XHRIV0NvbXBvc2l0aW5nOiB0cnVlLFxuXHRcdHVzZVRyYW5zaXRpb246IHRydWUsXG5cdFx0dXNlVHJhbnNmb3JtOiB0cnVlXG5cdH07XG5cblx0Zm9yICggdmFyIGkgaW4gb3B0aW9ucyApIHtcblx0XHR0aGlzLm9wdGlvbnNbaV0gPSBvcHRpb25zW2ldO1xuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdGlvbnNcblx0dGhpcy50cmFuc2xhdGVaID0gdGhpcy5vcHRpb25zLkhXQ29tcG9zaXRpbmcgJiYgdXRpbHMuaGFzUGVyc3BlY3RpdmUgPyAnIHRyYW5zbGF0ZVooMCknIDogJyc7XG5cblx0dGhpcy5vcHRpb25zLnVzZVRyYW5zaXRpb24gPSB1dGlscy5oYXNUcmFuc2l0aW9uICYmIHRoaXMub3B0aW9ucy51c2VUcmFuc2l0aW9uO1xuXHR0aGlzLm9wdGlvbnMudXNlVHJhbnNmb3JtID0gdXRpbHMuaGFzVHJhbnNmb3JtICYmIHRoaXMub3B0aW9ucy51c2VUcmFuc2Zvcm07XG5cblx0dGhpcy5vcHRpb25zLmV2ZW50UGFzc3Rocm91Z2ggPSB0aGlzLm9wdGlvbnMuZXZlbnRQYXNzdGhyb3VnaCA9PT0gdHJ1ZSA/ICd2ZXJ0aWNhbCcgOiB0aGlzLm9wdGlvbnMuZXZlbnRQYXNzdGhyb3VnaDtcblx0dGhpcy5vcHRpb25zLnByZXZlbnREZWZhdWx0ID0gIXRoaXMub3B0aW9ucy5ldmVudFBhc3N0aHJvdWdoICYmIHRoaXMub3B0aW9ucy5wcmV2ZW50RGVmYXVsdDtcblxuXHQvLyBJZiB5b3Ugd2FudCBldmVudFBhc3N0aHJvdWdoIEkgaGF2ZSB0byBsb2NrIG9uZSBvZiB0aGUgYXhlc1xuXHR0aGlzLm9wdGlvbnMuc2Nyb2xsWSA9IHRoaXMub3B0aW9ucy5ldmVudFBhc3N0aHJvdWdoID09ICd2ZXJ0aWNhbCcgPyBmYWxzZSA6IHRoaXMub3B0aW9ucy5zY3JvbGxZO1xuXHR0aGlzLm9wdGlvbnMuc2Nyb2xsWCA9IHRoaXMub3B0aW9ucy5ldmVudFBhc3N0aHJvdWdoID09ICdob3Jpem9udGFsJyA/IGZhbHNlIDogdGhpcy5vcHRpb25zLnNjcm9sbFg7XG5cblx0Ly8gV2l0aCBldmVudFBhc3N0aHJvdWdoIHdlIGFsc28gbmVlZCBsb2NrRGlyZWN0aW9uIG1lY2hhbmlzbVxuXHR0aGlzLm9wdGlvbnMuZnJlZVNjcm9sbCA9IHRoaXMub3B0aW9ucy5mcmVlU2Nyb2xsICYmICF0aGlzLm9wdGlvbnMuZXZlbnRQYXNzdGhyb3VnaDtcblx0dGhpcy5vcHRpb25zLmRpcmVjdGlvbkxvY2tUaHJlc2hvbGQgPSB0aGlzLm9wdGlvbnMuZXZlbnRQYXNzdGhyb3VnaCA/IDAgOiB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uTG9ja1RocmVzaG9sZDtcblxuXHR0aGlzLm9wdGlvbnMuYm91bmNlRWFzaW5nID0gdHlwZW9mIHRoaXMub3B0aW9ucy5ib3VuY2VFYXNpbmcgPT0gJ3N0cmluZycgPyB1dGlscy5lYXNlW3RoaXMub3B0aW9ucy5ib3VuY2VFYXNpbmddIHx8IHV0aWxzLmVhc2UuY2lyY3VsYXIgOiB0aGlzLm9wdGlvbnMuYm91bmNlRWFzaW5nO1xuXG5cdHRoaXMub3B0aW9ucy5yZXNpemVQb2xsaW5nID0gdGhpcy5vcHRpb25zLnJlc2l6ZVBvbGxpbmcgPT09IHVuZGVmaW5lZCA/IDYwIDogdGhpcy5vcHRpb25zLnJlc2l6ZVBvbGxpbmc7XG5cblx0aWYgKCB0aGlzLm9wdGlvbnMudGFwID09PSB0cnVlICkge1xuXHRcdHRoaXMub3B0aW9ucy50YXAgPSAndGFwJztcblx0fVxuXG5cdGlmICggdGhpcy5vcHRpb25zLnNocmlua1Njcm9sbGJhcnMgPT0gJ3NjYWxlJyApIHtcblx0XHR0aGlzLm9wdGlvbnMudXNlVHJhbnNpdGlvbiA9IGZhbHNlO1xuXHR9XG5cblx0dGhpcy5vcHRpb25zLmludmVydFdoZWVsRGlyZWN0aW9uID0gdGhpcy5vcHRpb25zLmludmVydFdoZWVsRGlyZWN0aW9uID8gLTEgOiAxO1xuXG4vLyBJTlNFUlQgUE9JTlQ6IE5PUk1BTElaQVRJT05cblxuXHQvLyBTb21lIGRlZmF1bHRzXHRcblx0dGhpcy54ID0gMDtcblx0dGhpcy55ID0gMDtcblx0dGhpcy5kaXJlY3Rpb25YID0gMDtcblx0dGhpcy5kaXJlY3Rpb25ZID0gMDtcblx0dGhpcy5fZXZlbnRzID0ge307XG5cbi8vIElOU0VSVCBQT0lOVDogREVGQVVMVFNcblxuXHR0aGlzLl9pbml0KCk7XG5cdHRoaXMucmVmcmVzaCgpO1xuXG5cdHRoaXMuc2Nyb2xsVG8odGhpcy5vcHRpb25zLnN0YXJ0WCwgdGhpcy5vcHRpb25zLnN0YXJ0WSk7XG5cdHRoaXMuZW5hYmxlKCk7XG59XG5cbklTY3JvbGwucHJvdG90eXBlID0ge1xuXHR2ZXJzaW9uOiAnNS4xLjMnLFxuXG5cdF9pbml0OiBmdW5jdGlvbiAoKSB7XG5cdFx0dGhpcy5faW5pdEV2ZW50cygpO1xuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuc2Nyb2xsYmFycyB8fCB0aGlzLm9wdGlvbnMuaW5kaWNhdG9ycyApIHtcblx0XHRcdHRoaXMuX2luaXRJbmRpY2F0b3JzKCk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMubW91c2VXaGVlbCApIHtcblx0XHRcdHRoaXMuX2luaXRXaGVlbCgpO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnNuYXAgKSB7XG5cdFx0XHR0aGlzLl9pbml0U25hcCgpO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmtleUJpbmRpbmdzICkge1xuXHRcdFx0dGhpcy5faW5pdEtleXMoKTtcblx0XHR9XG5cbi8vIElOU0VSVCBQT0lOVDogX2luaXRcblxuXHR9LFxuXG5cdGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcblx0XHR0aGlzLl9pbml0RXZlbnRzKHRydWUpO1xuXG5cdFx0dGhpcy5fZXhlY0V2ZW50KCdkZXN0cm95Jyk7XG5cdH0sXG5cblx0X3RyYW5zaXRpb25FbmQ6IGZ1bmN0aW9uIChlKSB7XG5cdFx0aWYgKCBlLnRhcmdldCAhPSB0aGlzLnNjcm9sbGVyIHx8ICF0aGlzLmlzSW5UcmFuc2l0aW9uICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoaXMuX3RyYW5zaXRpb25UaW1lKCk7XG5cdFx0aWYgKCAhdGhpcy5yZXNldFBvc2l0aW9uKHRoaXMub3B0aW9ucy5ib3VuY2VUaW1lKSApIHtcblx0XHRcdHRoaXMuaXNJblRyYW5zaXRpb24gPSBmYWxzZTtcblx0XHRcdHRoaXMuX2V4ZWNFdmVudCgnc2Nyb2xsRW5kJyk7XG5cdFx0fVxuXHR9LFxuXG5cdF9zdGFydDogZnVuY3Rpb24gKGUpIHtcblx0XHQvLyBSZWFjdCB0byBsZWZ0IG1vdXNlIGJ1dHRvbiBvbmx5XG5cdFx0aWYgKCB1dGlscy5ldmVudFR5cGVbZS50eXBlXSAhPSAxICkge1xuXHRcdFx0aWYgKCBlLmJ1dHRvbiAhPT0gMCApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggIXRoaXMuZW5hYmxlZCB8fCAodGhpcy5pbml0aWF0ZWQgJiYgdXRpbHMuZXZlbnRUeXBlW2UudHlwZV0gIT09IHRoaXMuaW5pdGlhdGVkKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5wcmV2ZW50RGVmYXVsdCAmJiAhdXRpbHMuaXNCYWRBbmRyb2lkICYmICF1dGlscy5wcmV2ZW50RGVmYXVsdEV4Y2VwdGlvbihlLnRhcmdldCwgdGhpcy5vcHRpb25zLnByZXZlbnREZWZhdWx0RXhjZXB0aW9uKSApIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cblx0XHR2YXIgcG9pbnQgPSBlLnRvdWNoZXMgPyBlLnRvdWNoZXNbMF0gOiBlLFxuXHRcdFx0cG9zO1xuXG5cdFx0dGhpcy5pbml0aWF0ZWRcdD0gdXRpbHMuZXZlbnRUeXBlW2UudHlwZV07XG5cdFx0dGhpcy5tb3ZlZFx0XHQ9IGZhbHNlO1xuXHRcdHRoaXMuZGlzdFhcdFx0PSAwO1xuXHRcdHRoaXMuZGlzdFlcdFx0PSAwO1xuXHRcdHRoaXMuZGlyZWN0aW9uWCA9IDA7XG5cdFx0dGhpcy5kaXJlY3Rpb25ZID0gMDtcblx0XHR0aGlzLmRpcmVjdGlvbkxvY2tlZCA9IDA7XG5cblx0XHR0aGlzLl90cmFuc2l0aW9uVGltZSgpO1xuXG5cdFx0dGhpcy5zdGFydFRpbWUgPSB1dGlscy5nZXRUaW1lKCk7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy51c2VUcmFuc2l0aW9uICYmIHRoaXMuaXNJblRyYW5zaXRpb24gKSB7XG5cdFx0XHR0aGlzLmlzSW5UcmFuc2l0aW9uID0gZmFsc2U7XG5cdFx0XHRwb3MgPSB0aGlzLmdldENvbXB1dGVkUG9zaXRpb24oKTtcblx0XHRcdHRoaXMuX3RyYW5zbGF0ZShNYXRoLnJvdW5kKHBvcy54KSwgTWF0aC5yb3VuZChwb3MueSkpO1xuXHRcdFx0dGhpcy5fZXhlY0V2ZW50KCdzY3JvbGxFbmQnKTtcblx0XHR9IGVsc2UgaWYgKCAhdGhpcy5vcHRpb25zLnVzZVRyYW5zaXRpb24gJiYgdGhpcy5pc0FuaW1hdGluZyApIHtcblx0XHRcdHRoaXMuaXNBbmltYXRpbmcgPSBmYWxzZTtcblx0XHRcdHRoaXMuX2V4ZWNFdmVudCgnc2Nyb2xsRW5kJyk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdGFydFggICAgPSB0aGlzLng7XG5cdFx0dGhpcy5zdGFydFkgICAgPSB0aGlzLnk7XG5cdFx0dGhpcy5hYnNTdGFydFggPSB0aGlzLng7XG5cdFx0dGhpcy5hYnNTdGFydFkgPSB0aGlzLnk7XG5cdFx0dGhpcy5wb2ludFggICAgPSBwb2ludC5wYWdlWDtcblx0XHR0aGlzLnBvaW50WSAgICA9IHBvaW50LnBhZ2VZO1xuXG5cdFx0dGhpcy5fZXhlY0V2ZW50KCdiZWZvcmVTY3JvbGxTdGFydCcpO1xuXHR9LFxuXG5cdF9tb3ZlOiBmdW5jdGlvbiAoZSkge1xuXHRcdGlmICggIXRoaXMuZW5hYmxlZCB8fCB1dGlscy5ldmVudFR5cGVbZS50eXBlXSAhPT0gdGhpcy5pbml0aWF0ZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMucHJldmVudERlZmF1bHQgKSB7XHQvLyBpbmNyZWFzZXMgcGVyZm9ybWFuY2Ugb24gQW5kcm9pZD8gVE9ETzogY2hlY2shXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0fVxuXG5cdFx0dmFyIHBvaW50XHRcdD0gZS50b3VjaGVzID8gZS50b3VjaGVzWzBdIDogZSxcblx0XHRcdGRlbHRhWFx0XHQ9IHBvaW50LnBhZ2VYIC0gdGhpcy5wb2ludFgsXG5cdFx0XHRkZWx0YVlcdFx0PSBwb2ludC5wYWdlWSAtIHRoaXMucG9pbnRZLFxuXHRcdFx0dGltZXN0YW1wXHQ9IHV0aWxzLmdldFRpbWUoKSxcblx0XHRcdG5ld1gsIG5ld1ksXG5cdFx0XHRhYnNEaXN0WCwgYWJzRGlzdFk7XG5cblx0XHR0aGlzLnBvaW50WFx0XHQ9IHBvaW50LnBhZ2VYO1xuXHRcdHRoaXMucG9pbnRZXHRcdD0gcG9pbnQucGFnZVk7XG5cblx0XHR0aGlzLmRpc3RYXHRcdCs9IGRlbHRhWDtcblx0XHR0aGlzLmRpc3RZXHRcdCs9IGRlbHRhWTtcblx0XHRhYnNEaXN0WFx0XHQ9IE1hdGguYWJzKHRoaXMuZGlzdFgpO1xuXHRcdGFic0Rpc3RZXHRcdD0gTWF0aC5hYnModGhpcy5kaXN0WSk7XG5cblx0XHQvLyBXZSBuZWVkIHRvIG1vdmUgYXQgbGVhc3QgMTAgcGl4ZWxzIGZvciB0aGUgc2Nyb2xsaW5nIHRvIGluaXRpYXRlXG5cdFx0aWYgKCB0aW1lc3RhbXAgLSB0aGlzLmVuZFRpbWUgPiAzMDAgJiYgKGFic0Rpc3RYIDwgMTAgJiYgYWJzRGlzdFkgPCAxMCkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gSWYgeW91IGFyZSBzY3JvbGxpbmcgaW4gb25lIGRpcmVjdGlvbiBsb2NrIHRoZSBvdGhlclxuXHRcdGlmICggIXRoaXMuZGlyZWN0aW9uTG9ja2VkICYmICF0aGlzLm9wdGlvbnMuZnJlZVNjcm9sbCApIHtcblx0XHRcdGlmICggYWJzRGlzdFggPiBhYnNEaXN0WSArIHRoaXMub3B0aW9ucy5kaXJlY3Rpb25Mb2NrVGhyZXNob2xkICkge1xuXHRcdFx0XHR0aGlzLmRpcmVjdGlvbkxvY2tlZCA9ICdoJztcdFx0Ly8gbG9jayBob3Jpem9udGFsbHlcblx0XHRcdH0gZWxzZSBpZiAoIGFic0Rpc3RZID49IGFic0Rpc3RYICsgdGhpcy5vcHRpb25zLmRpcmVjdGlvbkxvY2tUaHJlc2hvbGQgKSB7XG5cdFx0XHRcdHRoaXMuZGlyZWN0aW9uTG9ja2VkID0gJ3YnO1x0XHQvLyBsb2NrIHZlcnRpY2FsbHlcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuZGlyZWN0aW9uTG9ja2VkID0gJ24nO1x0XHQvLyBubyBsb2NrXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmRpcmVjdGlvbkxvY2tlZCA9PSAnaCcgKSB7XG5cdFx0XHRpZiAoIHRoaXMub3B0aW9ucy5ldmVudFBhc3N0aHJvdWdoID09ICd2ZXJ0aWNhbCcgKSB7XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdH0gZWxzZSBpZiAoIHRoaXMub3B0aW9ucy5ldmVudFBhc3N0aHJvdWdoID09ICdob3Jpem9udGFsJyApIHtcblx0XHRcdFx0dGhpcy5pbml0aWF0ZWQgPSBmYWxzZTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWx0YVkgPSAwO1xuXHRcdH0gZWxzZSBpZiAoIHRoaXMuZGlyZWN0aW9uTG9ja2VkID09ICd2JyApIHtcblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmV2ZW50UGFzc3Rocm91Z2ggPT0gJ2hvcml6b250YWwnICkge1xuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR9IGVsc2UgaWYgKCB0aGlzLm9wdGlvbnMuZXZlbnRQYXNzdGhyb3VnaCA9PSAndmVydGljYWwnICkge1xuXHRcdFx0XHR0aGlzLmluaXRpYXRlZCA9IGZhbHNlO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGRlbHRhWCA9IDA7XG5cdFx0fVxuXG5cdFx0ZGVsdGFYID0gdGhpcy5oYXNIb3Jpem9udGFsU2Nyb2xsID8gZGVsdGFYIDogMDtcblx0XHRkZWx0YVkgPSB0aGlzLmhhc1ZlcnRpY2FsU2Nyb2xsID8gZGVsdGFZIDogMDtcblxuXHRcdG5ld1ggPSB0aGlzLnggKyBkZWx0YVg7XG5cdFx0bmV3WSA9IHRoaXMueSArIGRlbHRhWTtcblxuXHRcdC8vIFNsb3cgZG93biBpZiBvdXRzaWRlIG9mIHRoZSBib3VuZGFyaWVzXG5cdFx0aWYgKCBuZXdYID4gMCB8fCBuZXdYIDwgdGhpcy5tYXhTY3JvbGxYICkge1xuXHRcdFx0bmV3WCA9IHRoaXMub3B0aW9ucy5ib3VuY2UgPyB0aGlzLnggKyBkZWx0YVggLyAzIDogbmV3WCA+IDAgPyAwIDogdGhpcy5tYXhTY3JvbGxYO1xuXHRcdH1cblx0XHRpZiAoIG5ld1kgPiAwIHx8IG5ld1kgPCB0aGlzLm1heFNjcm9sbFkgKSB7XG5cdFx0XHRuZXdZID0gdGhpcy5vcHRpb25zLmJvdW5jZSA/IHRoaXMueSArIGRlbHRhWSAvIDMgOiBuZXdZID4gMCA/IDAgOiB0aGlzLm1heFNjcm9sbFk7XG5cdFx0fVxuXG5cdFx0dGhpcy5kaXJlY3Rpb25YID0gZGVsdGFYID4gMCA/IC0xIDogZGVsdGFYIDwgMCA/IDEgOiAwO1xuXHRcdHRoaXMuZGlyZWN0aW9uWSA9IGRlbHRhWSA+IDAgPyAtMSA6IGRlbHRhWSA8IDAgPyAxIDogMDtcblxuXHRcdGlmICggIXRoaXMubW92ZWQgKSB7XG5cdFx0XHR0aGlzLl9leGVjRXZlbnQoJ3Njcm9sbFN0YXJ0Jyk7XG5cdFx0fVxuXG5cdFx0dGhpcy5tb3ZlZCA9IHRydWU7XG5cblx0XHR0aGlzLl90cmFuc2xhdGUobmV3WCwgbmV3WSk7XG5cbi8qIFJFUExBQ0UgU1RBUlQ6IF9tb3ZlICovXG5cblx0XHRpZiAoIHRpbWVzdGFtcCAtIHRoaXMuc3RhcnRUaW1lID4gMzAwICkge1xuXHRcdFx0dGhpcy5zdGFydFRpbWUgPSB0aW1lc3RhbXA7XG5cdFx0XHR0aGlzLnN0YXJ0WCA9IHRoaXMueDtcblx0XHRcdHRoaXMuc3RhcnRZID0gdGhpcy55O1xuXHRcdH1cblxuLyogUkVQTEFDRSBFTkQ6IF9tb3ZlICovXG5cblx0fSxcblxuXHRfZW5kOiBmdW5jdGlvbiAoZSkge1xuXHRcdGlmICggIXRoaXMuZW5hYmxlZCB8fCB1dGlscy5ldmVudFR5cGVbZS50eXBlXSAhPT0gdGhpcy5pbml0aWF0ZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMucHJldmVudERlZmF1bHQgJiYgIXV0aWxzLnByZXZlbnREZWZhdWx0RXhjZXB0aW9uKGUudGFyZ2V0LCB0aGlzLm9wdGlvbnMucHJldmVudERlZmF1bHRFeGNlcHRpb24pICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblxuXHRcdHZhciBwb2ludCA9IGUuY2hhbmdlZFRvdWNoZXMgPyBlLmNoYW5nZWRUb3VjaGVzWzBdIDogZSxcblx0XHRcdG1vbWVudHVtWCxcblx0XHRcdG1vbWVudHVtWSxcblx0XHRcdGR1cmF0aW9uID0gdXRpbHMuZ2V0VGltZSgpIC0gdGhpcy5zdGFydFRpbWUsXG5cdFx0XHRuZXdYID0gTWF0aC5yb3VuZCh0aGlzLngpLFxuXHRcdFx0bmV3WSA9IE1hdGgucm91bmQodGhpcy55KSxcblx0XHRcdGRpc3RhbmNlWCA9IE1hdGguYWJzKG5ld1ggLSB0aGlzLnN0YXJ0WCksXG5cdFx0XHRkaXN0YW5jZVkgPSBNYXRoLmFicyhuZXdZIC0gdGhpcy5zdGFydFkpLFxuXHRcdFx0dGltZSA9IDAsXG5cdFx0XHRlYXNpbmcgPSAnJztcblxuXHRcdHRoaXMuaXNJblRyYW5zaXRpb24gPSAwO1xuXHRcdHRoaXMuaW5pdGlhdGVkID0gMDtcblx0XHR0aGlzLmVuZFRpbWUgPSB1dGlscy5nZXRUaW1lKCk7XG5cblx0XHQvLyByZXNldCBpZiB3ZSBhcmUgb3V0c2lkZSBvZiB0aGUgYm91bmRhcmllc1xuXHRcdGlmICggdGhpcy5yZXNldFBvc2l0aW9uKHRoaXMub3B0aW9ucy5ib3VuY2VUaW1lKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGlzLnNjcm9sbFRvKG5ld1gsIG5ld1kpO1x0Ly8gZW5zdXJlcyB0aGF0IHRoZSBsYXN0IHBvc2l0aW9uIGlzIHJvdW5kZWRcblxuXHRcdC8vIHdlIHNjcm9sbGVkIGxlc3MgdGhhbiAxMCBwaXhlbHNcblx0XHRpZiAoICF0aGlzLm1vdmVkICkge1xuXHRcdFx0aWYgKCB0aGlzLm9wdGlvbnMudGFwICkge1xuXHRcdFx0XHR1dGlscy50YXAoZSwgdGhpcy5vcHRpb25zLnRhcCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmNsaWNrICkge1xuXHRcdFx0XHR1dGlscy5jbGljayhlKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5fZXhlY0V2ZW50KCdzY3JvbGxDYW5jZWwnKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMuX2V2ZW50cy5mbGljayAmJiBkdXJhdGlvbiA8IDIwMCAmJiBkaXN0YW5jZVggPCAxMDAgJiYgZGlzdGFuY2VZIDwgMTAwICkge1xuXHRcdFx0dGhpcy5fZXhlY0V2ZW50KCdmbGljaycpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIHN0YXJ0IG1vbWVudHVtIGFuaW1hdGlvbiBpZiBuZWVkZWRcblx0XHRpZiAoIHRoaXMub3B0aW9ucy5tb21lbnR1bSAmJiBkdXJhdGlvbiA8IDMwMCApIHtcblx0XHRcdG1vbWVudHVtWCA9IHRoaXMuaGFzSG9yaXpvbnRhbFNjcm9sbCA/IHV0aWxzLm1vbWVudHVtKHRoaXMueCwgdGhpcy5zdGFydFgsIGR1cmF0aW9uLCB0aGlzLm1heFNjcm9sbFgsIHRoaXMub3B0aW9ucy5ib3VuY2UgPyB0aGlzLndyYXBwZXJXaWR0aCA6IDAsIHRoaXMub3B0aW9ucy5kZWNlbGVyYXRpb24pIDogeyBkZXN0aW5hdGlvbjogbmV3WCwgZHVyYXRpb246IDAgfTtcblx0XHRcdG1vbWVudHVtWSA9IHRoaXMuaGFzVmVydGljYWxTY3JvbGwgPyB1dGlscy5tb21lbnR1bSh0aGlzLnksIHRoaXMuc3RhcnRZLCBkdXJhdGlvbiwgdGhpcy5tYXhTY3JvbGxZLCB0aGlzLm9wdGlvbnMuYm91bmNlID8gdGhpcy53cmFwcGVySGVpZ2h0IDogMCwgdGhpcy5vcHRpb25zLmRlY2VsZXJhdGlvbikgOiB7IGRlc3RpbmF0aW9uOiBuZXdZLCBkdXJhdGlvbjogMCB9O1xuXHRcdFx0bmV3WCA9IG1vbWVudHVtWC5kZXN0aW5hdGlvbjtcblx0XHRcdG5ld1kgPSBtb21lbnR1bVkuZGVzdGluYXRpb247XG5cdFx0XHR0aW1lID0gTWF0aC5tYXgobW9tZW50dW1YLmR1cmF0aW9uLCBtb21lbnR1bVkuZHVyYXRpb24pO1xuXHRcdFx0dGhpcy5pc0luVHJhbnNpdGlvbiA9IDE7XG5cdFx0fVxuXG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5zbmFwICkge1xuXHRcdFx0dmFyIHNuYXAgPSB0aGlzLl9uZWFyZXN0U25hcChuZXdYLCBuZXdZKTtcblx0XHRcdHRoaXMuY3VycmVudFBhZ2UgPSBzbmFwO1xuXHRcdFx0dGltZSA9IHRoaXMub3B0aW9ucy5zbmFwU3BlZWQgfHwgTWF0aC5tYXgoXG5cdFx0XHRcdFx0TWF0aC5tYXgoXG5cdFx0XHRcdFx0XHRNYXRoLm1pbihNYXRoLmFicyhuZXdYIC0gc25hcC54KSwgMTAwMCksXG5cdFx0XHRcdFx0XHRNYXRoLm1pbihNYXRoLmFicyhuZXdZIC0gc25hcC55KSwgMTAwMClcblx0XHRcdFx0XHQpLCAzMDApO1xuXHRcdFx0bmV3WCA9IHNuYXAueDtcblx0XHRcdG5ld1kgPSBzbmFwLnk7XG5cblx0XHRcdHRoaXMuZGlyZWN0aW9uWCA9IDA7XG5cdFx0XHR0aGlzLmRpcmVjdGlvblkgPSAwO1xuXHRcdFx0ZWFzaW5nID0gdGhpcy5vcHRpb25zLmJvdW5jZUVhc2luZztcblx0XHR9XG5cbi8vIElOU0VSVCBQT0lOVDogX2VuZFxuXG5cdFx0aWYgKCBuZXdYICE9IHRoaXMueCB8fCBuZXdZICE9IHRoaXMueSApIHtcblx0XHRcdC8vIGNoYW5nZSBlYXNpbmcgZnVuY3Rpb24gd2hlbiBzY3JvbGxlciBnb2VzIG91dCBvZiB0aGUgYm91bmRhcmllc1xuXHRcdFx0aWYgKCBuZXdYID4gMCB8fCBuZXdYIDwgdGhpcy5tYXhTY3JvbGxYIHx8IG5ld1kgPiAwIHx8IG5ld1kgPCB0aGlzLm1heFNjcm9sbFkgKSB7XG5cdFx0XHRcdGVhc2luZyA9IHV0aWxzLmVhc2UucXVhZHJhdGljO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLnNjcm9sbFRvKG5ld1gsIG5ld1ksIHRpbWUsIGVhc2luZyk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhpcy5fZXhlY0V2ZW50KCdzY3JvbGxFbmQnKTtcblx0fSxcblxuXHRfcmVzaXplOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xuXG5cdFx0Y2xlYXJUaW1lb3V0KHRoaXMucmVzaXplVGltZW91dCk7XG5cblx0XHR0aGlzLnJlc2l6ZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoYXQucmVmcmVzaCgpO1xuXHRcdH0sIHRoaXMub3B0aW9ucy5yZXNpemVQb2xsaW5nKTtcblx0fSxcblxuXHRyZXNldFBvc2l0aW9uOiBmdW5jdGlvbiAodGltZSkge1xuXHRcdHZhciB4ID0gdGhpcy54LFxuXHRcdFx0eSA9IHRoaXMueTtcblxuXHRcdHRpbWUgPSB0aW1lIHx8IDA7XG5cblx0XHRpZiAoICF0aGlzLmhhc0hvcml6b250YWxTY3JvbGwgfHwgdGhpcy54ID4gMCApIHtcblx0XHRcdHggPSAwO1xuXHRcdH0gZWxzZSBpZiAoIHRoaXMueCA8IHRoaXMubWF4U2Nyb2xsWCApIHtcblx0XHRcdHggPSB0aGlzLm1heFNjcm9sbFg7XG5cdFx0fVxuXG5cdFx0aWYgKCAhdGhpcy5oYXNWZXJ0aWNhbFNjcm9sbCB8fCB0aGlzLnkgPiAwICkge1xuXHRcdFx0eSA9IDA7XG5cdFx0fSBlbHNlIGlmICggdGhpcy55IDwgdGhpcy5tYXhTY3JvbGxZICkge1xuXHRcdFx0eSA9IHRoaXMubWF4U2Nyb2xsWTtcblx0XHR9XG5cblx0XHRpZiAoIHggPT0gdGhpcy54ICYmIHkgPT0gdGhpcy55ICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHRoaXMuc2Nyb2xsVG8oeCwgeSwgdGltZSwgdGhpcy5vcHRpb25zLmJvdW5jZUVhc2luZyk7XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHRkaXNhYmxlOiBmdW5jdGlvbiAoKSB7XG5cdFx0dGhpcy5lbmFibGVkID0gZmFsc2U7XG5cdH0sXG5cblx0ZW5hYmxlOiBmdW5jdGlvbiAoKSB7XG5cdFx0dGhpcy5lbmFibGVkID0gdHJ1ZTtcblx0fSxcblxuXHRyZWZyZXNoOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIHJmID0gdGhpcy53cmFwcGVyLm9mZnNldEhlaWdodDtcdFx0Ly8gRm9yY2UgcmVmbG93XG5cblx0XHR0aGlzLndyYXBwZXJXaWR0aFx0PSB0aGlzLndyYXBwZXIuY2xpZW50V2lkdGg7XG5cdFx0dGhpcy53cmFwcGVySGVpZ2h0XHQ9IHRoaXMud3JhcHBlci5jbGllbnRIZWlnaHQ7XG5cbi8qIFJFUExBQ0UgU1RBUlQ6IHJlZnJlc2ggKi9cblxuXHRcdHRoaXMuc2Nyb2xsZXJXaWR0aFx0PSB0aGlzLnNjcm9sbGVyLm9mZnNldFdpZHRoO1xuXHRcdHRoaXMuc2Nyb2xsZXJIZWlnaHRcdD0gdGhpcy5zY3JvbGxlci5vZmZzZXRIZWlnaHQ7XG5cblx0XHR0aGlzLm1heFNjcm9sbFhcdFx0PSB0aGlzLndyYXBwZXJXaWR0aCAtIHRoaXMuc2Nyb2xsZXJXaWR0aDtcblx0XHR0aGlzLm1heFNjcm9sbFlcdFx0PSB0aGlzLndyYXBwZXJIZWlnaHQgLSB0aGlzLnNjcm9sbGVySGVpZ2h0O1xuXG4vKiBSRVBMQUNFIEVORDogcmVmcmVzaCAqL1xuXG5cdFx0dGhpcy5oYXNIb3Jpem9udGFsU2Nyb2xsXHQ9IHRoaXMub3B0aW9ucy5zY3JvbGxYICYmIHRoaXMubWF4U2Nyb2xsWCA8IDA7XG5cdFx0dGhpcy5oYXNWZXJ0aWNhbFNjcm9sbFx0XHQ9IHRoaXMub3B0aW9ucy5zY3JvbGxZICYmIHRoaXMubWF4U2Nyb2xsWSA8IDA7XG5cblx0XHRpZiAoICF0aGlzLmhhc0hvcml6b250YWxTY3JvbGwgKSB7XG5cdFx0XHR0aGlzLm1heFNjcm9sbFggPSAwO1xuXHRcdFx0dGhpcy5zY3JvbGxlcldpZHRoID0gdGhpcy53cmFwcGVyV2lkdGg7XG5cdFx0fVxuXG5cdFx0aWYgKCAhdGhpcy5oYXNWZXJ0aWNhbFNjcm9sbCApIHtcblx0XHRcdHRoaXMubWF4U2Nyb2xsWSA9IDA7XG5cdFx0XHR0aGlzLnNjcm9sbGVySGVpZ2h0ID0gdGhpcy53cmFwcGVySGVpZ2h0O1xuXHRcdH1cblxuXHRcdHRoaXMuZW5kVGltZSA9IDA7XG5cdFx0dGhpcy5kaXJlY3Rpb25YID0gMDtcblx0XHR0aGlzLmRpcmVjdGlvblkgPSAwO1xuXG5cdFx0dGhpcy53cmFwcGVyT2Zmc2V0ID0gdXRpbHMub2Zmc2V0KHRoaXMud3JhcHBlcik7XG5cblx0XHR0aGlzLl9leGVjRXZlbnQoJ3JlZnJlc2gnKTtcblxuXHRcdHRoaXMucmVzZXRQb3NpdGlvbigpO1xuXG4vLyBJTlNFUlQgUE9JTlQ6IF9yZWZyZXNoXG5cblx0fSxcblxuXHRvbjogZnVuY3Rpb24gKHR5cGUsIGZuKSB7XG5cdFx0aWYgKCAhdGhpcy5fZXZlbnRzW3R5cGVdICkge1xuXHRcdFx0dGhpcy5fZXZlbnRzW3R5cGVdID0gW107XG5cdFx0fVxuXG5cdFx0dGhpcy5fZXZlbnRzW3R5cGVdLnB1c2goZm4pO1xuXHR9LFxuXG5cdG9mZjogZnVuY3Rpb24gKHR5cGUsIGZuKSB7XG5cdFx0aWYgKCAhdGhpcy5fZXZlbnRzW3R5cGVdICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBpbmRleCA9IHRoaXMuX2V2ZW50c1t0eXBlXS5pbmRleE9mKGZuKTtcblxuXHRcdGlmICggaW5kZXggPiAtMSApIHtcblx0XHRcdHRoaXMuX2V2ZW50c1t0eXBlXS5zcGxpY2UoaW5kZXgsIDEpO1xuXHRcdH1cblx0fSxcblxuXHRfZXhlY0V2ZW50OiBmdW5jdGlvbiAodHlwZSkge1xuXHRcdGlmICggIXRoaXMuX2V2ZW50c1t0eXBlXSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgaSA9IDAsXG5cdFx0XHRsID0gdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aDtcblxuXHRcdGlmICggIWwgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0dGhpcy5fZXZlbnRzW3R5cGVdW2ldLmFwcGx5KHRoaXMsIFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7XG5cdFx0fVxuXHR9LFxuXG5cdHNjcm9sbEJ5OiBmdW5jdGlvbiAoeCwgeSwgdGltZSwgZWFzaW5nKSB7XG5cdFx0eCA9IHRoaXMueCArIHg7XG5cdFx0eSA9IHRoaXMueSArIHk7XG5cdFx0dGltZSA9IHRpbWUgfHwgMDtcblxuXHRcdHRoaXMuc2Nyb2xsVG8oeCwgeSwgdGltZSwgZWFzaW5nKTtcblx0fSxcblxuXHRzY3JvbGxUbzogZnVuY3Rpb24gKHgsIHksIHRpbWUsIGVhc2luZykge1xuXHRcdGVhc2luZyA9IGVhc2luZyB8fCB1dGlscy5lYXNlLmNpcmN1bGFyO1xuXG5cdFx0dGhpcy5pc0luVHJhbnNpdGlvbiA9IHRoaXMub3B0aW9ucy51c2VUcmFuc2l0aW9uICYmIHRpbWUgPiAwO1xuXG5cdFx0aWYgKCAhdGltZSB8fCAodGhpcy5vcHRpb25zLnVzZVRyYW5zaXRpb24gJiYgZWFzaW5nLnN0eWxlKSApIHtcblx0XHRcdHRoaXMuX3RyYW5zaXRpb25UaW1pbmdGdW5jdGlvbihlYXNpbmcuc3R5bGUpO1xuXHRcdFx0dGhpcy5fdHJhbnNpdGlvblRpbWUodGltZSk7XG5cdFx0XHR0aGlzLl90cmFuc2xhdGUoeCwgeSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuX2FuaW1hdGUoeCwgeSwgdGltZSwgZWFzaW5nLmZuKTtcblx0XHR9XG5cdH0sXG5cblx0c2Nyb2xsVG9FbGVtZW50OiBmdW5jdGlvbiAoZWwsIHRpbWUsIG9mZnNldFgsIG9mZnNldFksIGVhc2luZykge1xuXHRcdGVsID0gZWwubm9kZVR5cGUgPyBlbCA6IHRoaXMuc2Nyb2xsZXIucXVlcnlTZWxlY3RvcihlbCk7XG5cblx0XHRpZiAoICFlbCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgcG9zID0gdXRpbHMub2Zmc2V0KGVsKTtcblxuXHRcdHBvcy5sZWZ0IC09IHRoaXMud3JhcHBlck9mZnNldC5sZWZ0O1xuXHRcdHBvcy50b3AgIC09IHRoaXMud3JhcHBlck9mZnNldC50b3A7XG5cblx0XHQvLyBpZiBvZmZzZXRYL1kgYXJlIHRydWUgd2UgY2VudGVyIHRoZSBlbGVtZW50IHRvIHRoZSBzY3JlZW5cblx0XHRpZiAoIG9mZnNldFggPT09IHRydWUgKSB7XG5cdFx0XHRvZmZzZXRYID0gTWF0aC5yb3VuZChlbC5vZmZzZXRXaWR0aCAvIDIgLSB0aGlzLndyYXBwZXIub2Zmc2V0V2lkdGggLyAyKTtcblx0XHR9XG5cdFx0aWYgKCBvZmZzZXRZID09PSB0cnVlICkge1xuXHRcdFx0b2Zmc2V0WSA9IE1hdGgucm91bmQoZWwub2Zmc2V0SGVpZ2h0IC8gMiAtIHRoaXMud3JhcHBlci5vZmZzZXRIZWlnaHQgLyAyKTtcblx0XHR9XG5cblx0XHRwb3MubGVmdCAtPSBvZmZzZXRYIHx8IDA7XG5cdFx0cG9zLnRvcCAgLT0gb2Zmc2V0WSB8fCAwO1xuXG5cdFx0cG9zLmxlZnQgPSBwb3MubGVmdCA+IDAgPyAwIDogcG9zLmxlZnQgPCB0aGlzLm1heFNjcm9sbFggPyB0aGlzLm1heFNjcm9sbFggOiBwb3MubGVmdDtcblx0XHRwb3MudG9wICA9IHBvcy50b3AgID4gMCA/IDAgOiBwb3MudG9wICA8IHRoaXMubWF4U2Nyb2xsWSA/IHRoaXMubWF4U2Nyb2xsWSA6IHBvcy50b3A7XG5cblx0XHR0aW1lID0gdGltZSA9PT0gdW5kZWZpbmVkIHx8IHRpbWUgPT09IG51bGwgfHwgdGltZSA9PT0gJ2F1dG8nID8gTWF0aC5tYXgoTWF0aC5hYnModGhpcy54LXBvcy5sZWZ0KSwgTWF0aC5hYnModGhpcy55LXBvcy50b3ApKSA6IHRpbWU7XG5cblx0XHR0aGlzLnNjcm9sbFRvKHBvcy5sZWZ0LCBwb3MudG9wLCB0aW1lLCBlYXNpbmcpO1xuXHR9LFxuXG5cdF90cmFuc2l0aW9uVGltZTogZnVuY3Rpb24gKHRpbWUpIHtcblx0XHR0aW1lID0gdGltZSB8fCAwO1xuXG5cdFx0dGhpcy5zY3JvbGxlclN0eWxlW3V0aWxzLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbl0gPSB0aW1lICsgJ21zJztcblxuXHRcdGlmICggIXRpbWUgJiYgdXRpbHMuaXNCYWRBbmRyb2lkICkge1xuXHRcdFx0dGhpcy5zY3JvbGxlclN0eWxlW3V0aWxzLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbl0gPSAnMC4wMDFzJztcblx0XHR9XG5cblxuXHRcdGlmICggdGhpcy5pbmRpY2F0b3JzICkge1xuXHRcdFx0Zm9yICggdmFyIGkgPSB0aGlzLmluZGljYXRvcnMubGVuZ3RoOyBpLS07ICkge1xuXHRcdFx0XHR0aGlzLmluZGljYXRvcnNbaV0udHJhbnNpdGlvblRpbWUodGltZSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cbi8vIElOU0VSVCBQT0lOVDogX3RyYW5zaXRpb25UaW1lXG5cblx0fSxcblxuXHRfdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uOiBmdW5jdGlvbiAoZWFzaW5nKSB7XG5cdFx0dGhpcy5zY3JvbGxlclN0eWxlW3V0aWxzLnN0eWxlLnRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbl0gPSBlYXNpbmc7XG5cblxuXHRcdGlmICggdGhpcy5pbmRpY2F0b3JzICkge1xuXHRcdFx0Zm9yICggdmFyIGkgPSB0aGlzLmluZGljYXRvcnMubGVuZ3RoOyBpLS07ICkge1xuXHRcdFx0XHR0aGlzLmluZGljYXRvcnNbaV0udHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uKGVhc2luZyk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cbi8vIElOU0VSVCBQT0lOVDogX3RyYW5zaXRpb25UaW1pbmdGdW5jdGlvblxuXG5cdH0sXG5cblx0X3RyYW5zbGF0ZTogZnVuY3Rpb24gKHgsIHkpIHtcblx0XHRpZiAoIHRoaXMub3B0aW9ucy51c2VUcmFuc2Zvcm0gKSB7XG5cbi8qIFJFUExBQ0UgU1RBUlQ6IF90cmFuc2xhdGUgKi9cblxuXHRcdFx0dGhpcy5zY3JvbGxlclN0eWxlW3V0aWxzLnN0eWxlLnRyYW5zZm9ybV0gPSAndHJhbnNsYXRlKCcgKyB4ICsgJ3B4LCcgKyB5ICsgJ3B4KScgKyB0aGlzLnRyYW5zbGF0ZVo7XG5cbi8qIFJFUExBQ0UgRU5EOiBfdHJhbnNsYXRlICovXG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0eCA9IE1hdGgucm91bmQoeCk7XG5cdFx0XHR5ID0gTWF0aC5yb3VuZCh5KTtcblx0XHRcdHRoaXMuc2Nyb2xsZXJTdHlsZS5sZWZ0ID0geCArICdweCc7XG5cdFx0XHR0aGlzLnNjcm9sbGVyU3R5bGUudG9wID0geSArICdweCc7XG5cdFx0fVxuXG5cdFx0dGhpcy54ID0geDtcblx0XHR0aGlzLnkgPSB5O1xuXG5cblx0aWYgKCB0aGlzLmluZGljYXRvcnMgKSB7XG5cdFx0Zm9yICggdmFyIGkgPSB0aGlzLmluZGljYXRvcnMubGVuZ3RoOyBpLS07ICkge1xuXHRcdFx0dGhpcy5pbmRpY2F0b3JzW2ldLnVwZGF0ZVBvc2l0aW9uKCk7XG5cdFx0fVxuXHR9XG5cblxuLy8gSU5TRVJUIFBPSU5UOiBfdHJhbnNsYXRlXG5cblx0fSxcblxuXHRfaW5pdEV2ZW50czogZnVuY3Rpb24gKHJlbW92ZSkge1xuXHRcdHZhciBldmVudFR5cGUgPSByZW1vdmUgPyB1dGlscy5yZW1vdmVFdmVudCA6IHV0aWxzLmFkZEV2ZW50LFxuXHRcdFx0dGFyZ2V0ID0gdGhpcy5vcHRpb25zLmJpbmRUb1dyYXBwZXIgPyB0aGlzLndyYXBwZXIgOiB3aW5kb3c7XG5cblx0XHRldmVudFR5cGUod2luZG93LCAnb3JpZW50YXRpb25jaGFuZ2UnLCB0aGlzKTtcblx0XHRldmVudFR5cGUod2luZG93LCAncmVzaXplJywgdGhpcyk7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5jbGljayApIHtcblx0XHRcdGV2ZW50VHlwZSh0aGlzLndyYXBwZXIsICdjbGljaycsIHRoaXMsIHRydWUpO1xuXHRcdH1cblxuXHRcdGlmICggIXRoaXMub3B0aW9ucy5kaXNhYmxlTW91c2UgKSB7XG5cdFx0XHRldmVudFR5cGUodGhpcy53cmFwcGVyLCAnbW91c2Vkb3duJywgdGhpcyk7XG5cdFx0XHRldmVudFR5cGUodGFyZ2V0LCAnbW91c2Vtb3ZlJywgdGhpcyk7XG5cdFx0XHRldmVudFR5cGUodGFyZ2V0LCAnbW91c2VjYW5jZWwnLCB0aGlzKTtcblx0XHRcdGV2ZW50VHlwZSh0YXJnZXQsICdtb3VzZXVwJywgdGhpcyk7XG5cdFx0fVxuXG5cdFx0aWYgKCB1dGlscy5oYXNQb2ludGVyICYmICF0aGlzLm9wdGlvbnMuZGlzYWJsZVBvaW50ZXIgKSB7XG5cdFx0XHRldmVudFR5cGUodGhpcy53cmFwcGVyLCB1dGlscy5wcmVmaXhQb2ludGVyRXZlbnQoJ3BvaW50ZXJkb3duJyksIHRoaXMpO1xuXHRcdFx0ZXZlbnRUeXBlKHRhcmdldCwgdXRpbHMucHJlZml4UG9pbnRlckV2ZW50KCdwb2ludGVybW92ZScpLCB0aGlzKTtcblx0XHRcdGV2ZW50VHlwZSh0YXJnZXQsIHV0aWxzLnByZWZpeFBvaW50ZXJFdmVudCgncG9pbnRlcmNhbmNlbCcpLCB0aGlzKTtcblx0XHRcdGV2ZW50VHlwZSh0YXJnZXQsIHV0aWxzLnByZWZpeFBvaW50ZXJFdmVudCgncG9pbnRlcnVwJyksIHRoaXMpO1xuXHRcdH1cblxuXHRcdGlmICggdXRpbHMuaGFzVG91Y2ggJiYgIXRoaXMub3B0aW9ucy5kaXNhYmxlVG91Y2ggKSB7XG5cdFx0XHRldmVudFR5cGUodGhpcy53cmFwcGVyLCAndG91Y2hzdGFydCcsIHRoaXMpO1xuXHRcdFx0ZXZlbnRUeXBlKHRhcmdldCwgJ3RvdWNobW92ZScsIHRoaXMpO1xuXHRcdFx0ZXZlbnRUeXBlKHRhcmdldCwgJ3RvdWNoY2FuY2VsJywgdGhpcyk7XG5cdFx0XHRldmVudFR5cGUodGFyZ2V0LCAndG91Y2hlbmQnLCB0aGlzKTtcblx0XHR9XG5cblx0XHRldmVudFR5cGUodGhpcy5zY3JvbGxlciwgJ3RyYW5zaXRpb25lbmQnLCB0aGlzKTtcblx0XHRldmVudFR5cGUodGhpcy5zY3JvbGxlciwgJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCB0aGlzKTtcblx0XHRldmVudFR5cGUodGhpcy5zY3JvbGxlciwgJ29UcmFuc2l0aW9uRW5kJywgdGhpcyk7XG5cdFx0ZXZlbnRUeXBlKHRoaXMuc2Nyb2xsZXIsICdNU1RyYW5zaXRpb25FbmQnLCB0aGlzKTtcblx0fSxcblxuXHRnZXRDb21wdXRlZFBvc2l0aW9uOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIG1hdHJpeCA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuc2Nyb2xsZXIsIG51bGwpLFxuXHRcdFx0eCwgeTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnVzZVRyYW5zZm9ybSApIHtcblx0XHRcdG1hdHJpeCA9IG1hdHJpeFt1dGlscy5zdHlsZS50cmFuc2Zvcm1dLnNwbGl0KCcpJylbMF0uc3BsaXQoJywgJyk7XG5cdFx0XHR4ID0gKyhtYXRyaXhbMTJdIHx8IG1hdHJpeFs0XSk7XG5cdFx0XHR5ID0gKyhtYXRyaXhbMTNdIHx8IG1hdHJpeFs1XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHggPSArbWF0cml4LmxlZnQucmVwbGFjZSgvW14tXFxkLl0vZywgJycpO1xuXHRcdFx0eSA9ICttYXRyaXgudG9wLnJlcGxhY2UoL1teLVxcZC5dL2csICcnKTtcblx0XHR9XG5cblx0XHRyZXR1cm4geyB4OiB4LCB5OiB5IH07XG5cdH0sXG5cblx0X2luaXRJbmRpY2F0b3JzOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIGludGVyYWN0aXZlID0gdGhpcy5vcHRpb25zLmludGVyYWN0aXZlU2Nyb2xsYmFycyxcblx0XHRcdGN1c3RvbVN0eWxlID0gdHlwZW9mIHRoaXMub3B0aW9ucy5zY3JvbGxiYXJzICE9ICdzdHJpbmcnLFxuXHRcdFx0aW5kaWNhdG9ycyA9IFtdLFxuXHRcdFx0aW5kaWNhdG9yO1xuXG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xuXG5cdFx0dGhpcy5pbmRpY2F0b3JzID0gW107XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5zY3JvbGxiYXJzICkge1xuXHRcdFx0Ly8gVmVydGljYWwgc2Nyb2xsYmFyXG5cdFx0XHRpZiAoIHRoaXMub3B0aW9ucy5zY3JvbGxZICkge1xuXHRcdFx0XHRpbmRpY2F0b3IgPSB7XG5cdFx0XHRcdFx0ZWw6IGNyZWF0ZURlZmF1bHRTY3JvbGxiYXIoJ3YnLCBpbnRlcmFjdGl2ZSwgdGhpcy5vcHRpb25zLnNjcm9sbGJhcnMpLFxuXHRcdFx0XHRcdGludGVyYWN0aXZlOiBpbnRlcmFjdGl2ZSxcblx0XHRcdFx0XHRkZWZhdWx0U2Nyb2xsYmFyczogdHJ1ZSxcblx0XHRcdFx0XHRjdXN0b21TdHlsZTogY3VzdG9tU3R5bGUsXG5cdFx0XHRcdFx0cmVzaXplOiB0aGlzLm9wdGlvbnMucmVzaXplU2Nyb2xsYmFycyxcblx0XHRcdFx0XHRzaHJpbms6IHRoaXMub3B0aW9ucy5zaHJpbmtTY3JvbGxiYXJzLFxuXHRcdFx0XHRcdGZhZGU6IHRoaXMub3B0aW9ucy5mYWRlU2Nyb2xsYmFycyxcblx0XHRcdFx0XHRsaXN0ZW5YOiBmYWxzZVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdHRoaXMud3JhcHBlci5hcHBlbmRDaGlsZChpbmRpY2F0b3IuZWwpO1xuXHRcdFx0XHRpbmRpY2F0b3JzLnB1c2goaW5kaWNhdG9yKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSG9yaXpvbnRhbCBzY3JvbGxiYXJcblx0XHRcdGlmICggdGhpcy5vcHRpb25zLnNjcm9sbFggKSB7XG5cdFx0XHRcdGluZGljYXRvciA9IHtcblx0XHRcdFx0XHRlbDogY3JlYXRlRGVmYXVsdFNjcm9sbGJhcignaCcsIGludGVyYWN0aXZlLCB0aGlzLm9wdGlvbnMuc2Nyb2xsYmFycyksXG5cdFx0XHRcdFx0aW50ZXJhY3RpdmU6IGludGVyYWN0aXZlLFxuXHRcdFx0XHRcdGRlZmF1bHRTY3JvbGxiYXJzOiB0cnVlLFxuXHRcdFx0XHRcdGN1c3RvbVN0eWxlOiBjdXN0b21TdHlsZSxcblx0XHRcdFx0XHRyZXNpemU6IHRoaXMub3B0aW9ucy5yZXNpemVTY3JvbGxiYXJzLFxuXHRcdFx0XHRcdHNocmluazogdGhpcy5vcHRpb25zLnNocmlua1Njcm9sbGJhcnMsXG5cdFx0XHRcdFx0ZmFkZTogdGhpcy5vcHRpb25zLmZhZGVTY3JvbGxiYXJzLFxuXHRcdFx0XHRcdGxpc3Rlblk6IGZhbHNlXG5cdFx0XHRcdH07XG5cblx0XHRcdFx0dGhpcy53cmFwcGVyLmFwcGVuZENoaWxkKGluZGljYXRvci5lbCk7XG5cdFx0XHRcdGluZGljYXRvcnMucHVzaChpbmRpY2F0b3IpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmluZGljYXRvcnMgKSB7XG5cdFx0XHQvLyBUT0RPOiBjaGVjayBjb25jYXQgY29tcGF0aWJpbGl0eVxuXHRcdFx0aW5kaWNhdG9ycyA9IGluZGljYXRvcnMuY29uY2F0KHRoaXMub3B0aW9ucy5pbmRpY2F0b3JzKTtcblx0XHR9XG5cblx0XHRmb3IgKCB2YXIgaSA9IGluZGljYXRvcnMubGVuZ3RoOyBpLS07ICkge1xuXHRcdFx0dGhpcy5pbmRpY2F0b3JzLnB1c2goIG5ldyBJbmRpY2F0b3IodGhpcywgaW5kaWNhdG9yc1tpXSkgKTtcblx0XHR9XG5cblx0XHQvLyBUT0RPOiBjaGVjayBpZiB3ZSBjYW4gdXNlIGFycmF5Lm1hcCAod2lkZSBjb21wYXRpYmlsaXR5IGFuZCBwZXJmb3JtYW5jZSBpc3N1ZXMpXG5cdFx0ZnVuY3Rpb24gX2luZGljYXRvcnNNYXAgKGZuKSB7XG5cdFx0XHRmb3IgKCB2YXIgaSA9IHRoYXQuaW5kaWNhdG9ycy5sZW5ndGg7IGktLTsgKSB7XG5cdFx0XHRcdGZuLmNhbGwodGhhdC5pbmRpY2F0b3JzW2ldKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5mYWRlU2Nyb2xsYmFycyApIHtcblx0XHRcdHRoaXMub24oJ3Njcm9sbEVuZCcsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0X2luZGljYXRvcnNNYXAoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdHRoaXMuZmFkZSgpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXG5cdFx0XHR0aGlzLm9uKCdzY3JvbGxDYW5jZWwnLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdF9pbmRpY2F0b3JzTWFwKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHR0aGlzLmZhZGUoKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblxuXHRcdFx0dGhpcy5vbignc2Nyb2xsU3RhcnQnLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdF9pbmRpY2F0b3JzTWFwKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHR0aGlzLmZhZGUoMSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cblx0XHRcdHRoaXMub24oJ2JlZm9yZVNjcm9sbFN0YXJ0JywgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRfaW5kaWNhdG9yc01hcChmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0dGhpcy5mYWRlKDEsIHRydWUpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH1cblxuXG5cdFx0dGhpcy5vbigncmVmcmVzaCcsIGZ1bmN0aW9uICgpIHtcblx0XHRcdF9pbmRpY2F0b3JzTWFwKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0dGhpcy5yZWZyZXNoKCk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblxuXHRcdHRoaXMub24oJ2Rlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRfaW5kaWNhdG9yc01hcChmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHRoaXMuZGVzdHJveSgpO1xuXHRcdFx0fSk7XG5cblx0XHRcdGRlbGV0ZSB0aGlzLmluZGljYXRvcnM7XG5cdFx0fSk7XG5cdH0sXG5cblx0X2luaXRXaGVlbDogZnVuY3Rpb24gKCkge1xuXHRcdHV0aWxzLmFkZEV2ZW50KHRoaXMud3JhcHBlciwgJ3doZWVsJywgdGhpcyk7XG5cdFx0dXRpbHMuYWRkRXZlbnQodGhpcy53cmFwcGVyLCAnbW91c2V3aGVlbCcsIHRoaXMpO1xuXHRcdHV0aWxzLmFkZEV2ZW50KHRoaXMud3JhcHBlciwgJ0RPTU1vdXNlU2Nyb2xsJywgdGhpcyk7XG5cblx0XHR0aGlzLm9uKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xuXHRcdFx0dXRpbHMucmVtb3ZlRXZlbnQodGhpcy53cmFwcGVyLCAnd2hlZWwnLCB0aGlzKTtcblx0XHRcdHV0aWxzLnJlbW92ZUV2ZW50KHRoaXMud3JhcHBlciwgJ21vdXNld2hlZWwnLCB0aGlzKTtcblx0XHRcdHV0aWxzLnJlbW92ZUV2ZW50KHRoaXMud3JhcHBlciwgJ0RPTU1vdXNlU2Nyb2xsJywgdGhpcyk7XG5cdFx0fSk7XG5cdH0sXG5cblx0X3doZWVsOiBmdW5jdGlvbiAoZSkge1xuXHRcdGlmICggIXRoaXMuZW5hYmxlZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuXHRcdHZhciB3aGVlbERlbHRhWCwgd2hlZWxEZWx0YVksXG5cdFx0XHRuZXdYLCBuZXdZLFxuXHRcdFx0dGhhdCA9IHRoaXM7XG5cblx0XHRpZiAoIHRoaXMud2hlZWxUaW1lb3V0ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0aGF0Ll9leGVjRXZlbnQoJ3Njcm9sbFN0YXJ0Jyk7XG5cdFx0fVxuXG5cdFx0Ly8gRXhlY3V0ZSB0aGUgc2Nyb2xsRW5kIGV2ZW50IGFmdGVyIDQwMG1zIHRoZSB3aGVlbCBzdG9wcGVkIHNjcm9sbGluZ1xuXHRcdGNsZWFyVGltZW91dCh0aGlzLndoZWVsVGltZW91dCk7XG5cdFx0dGhpcy53aGVlbFRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcblx0XHRcdHRoYXQuX2V4ZWNFdmVudCgnc2Nyb2xsRW5kJyk7XG5cdFx0XHR0aGF0LndoZWVsVGltZW91dCA9IHVuZGVmaW5lZDtcblx0XHR9LCA0MDApO1xuXG5cdFx0aWYgKCAnZGVsdGFYJyBpbiBlICkge1xuXHRcdFx0aWYgKGUuZGVsdGFNb2RlID09PSAxKSB7XG5cdFx0XHRcdHdoZWVsRGVsdGFYID0gLWUuZGVsdGFYICogdGhpcy5vcHRpb25zLm1vdXNlV2hlZWxTcGVlZDtcblx0XHRcdFx0d2hlZWxEZWx0YVkgPSAtZS5kZWx0YVkgKiB0aGlzLm9wdGlvbnMubW91c2VXaGVlbFNwZWVkO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2hlZWxEZWx0YVggPSAtZS5kZWx0YVg7XG5cdFx0XHRcdHdoZWVsRGVsdGFZID0gLWUuZGVsdGFZO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSBpZiAoICd3aGVlbERlbHRhWCcgaW4gZSApIHtcblx0XHRcdHdoZWVsRGVsdGFYID0gZS53aGVlbERlbHRhWCAvIDEyMCAqIHRoaXMub3B0aW9ucy5tb3VzZVdoZWVsU3BlZWQ7XG5cdFx0XHR3aGVlbERlbHRhWSA9IGUud2hlZWxEZWx0YVkgLyAxMjAgKiB0aGlzLm9wdGlvbnMubW91c2VXaGVlbFNwZWVkO1xuXHRcdH0gZWxzZSBpZiAoICd3aGVlbERlbHRhJyBpbiBlICkge1xuXHRcdFx0d2hlZWxEZWx0YVggPSB3aGVlbERlbHRhWSA9IGUud2hlZWxEZWx0YSAvIDEyMCAqIHRoaXMub3B0aW9ucy5tb3VzZVdoZWVsU3BlZWQ7XG5cdFx0fSBlbHNlIGlmICggJ2RldGFpbCcgaW4gZSApIHtcblx0XHRcdHdoZWVsRGVsdGFYID0gd2hlZWxEZWx0YVkgPSAtZS5kZXRhaWwgLyAzICogdGhpcy5vcHRpb25zLm1vdXNlV2hlZWxTcGVlZDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHdoZWVsRGVsdGFYICo9IHRoaXMub3B0aW9ucy5pbnZlcnRXaGVlbERpcmVjdGlvbjtcblx0XHR3aGVlbERlbHRhWSAqPSB0aGlzLm9wdGlvbnMuaW52ZXJ0V2hlZWxEaXJlY3Rpb247XG5cblx0XHRpZiAoICF0aGlzLmhhc1ZlcnRpY2FsU2Nyb2xsICkge1xuXHRcdFx0d2hlZWxEZWx0YVggPSB3aGVlbERlbHRhWTtcblx0XHRcdHdoZWVsRGVsdGFZID0gMDtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5zbmFwICkge1xuXHRcdFx0bmV3WCA9IHRoaXMuY3VycmVudFBhZ2UucGFnZVg7XG5cdFx0XHRuZXdZID0gdGhpcy5jdXJyZW50UGFnZS5wYWdlWTtcblxuXHRcdFx0aWYgKCB3aGVlbERlbHRhWCA+IDAgKSB7XG5cdFx0XHRcdG5ld1gtLTtcblx0XHRcdH0gZWxzZSBpZiAoIHdoZWVsRGVsdGFYIDwgMCApIHtcblx0XHRcdFx0bmV3WCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHdoZWVsRGVsdGFZID4gMCApIHtcblx0XHRcdFx0bmV3WS0tO1xuXHRcdFx0fSBlbHNlIGlmICggd2hlZWxEZWx0YVkgPCAwICkge1xuXHRcdFx0XHRuZXdZKys7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMuZ29Ub1BhZ2UobmV3WCwgbmV3WSk7XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRuZXdYID0gdGhpcy54ICsgTWF0aC5yb3VuZCh0aGlzLmhhc0hvcml6b250YWxTY3JvbGwgPyB3aGVlbERlbHRhWCA6IDApO1xuXHRcdG5ld1kgPSB0aGlzLnkgKyBNYXRoLnJvdW5kKHRoaXMuaGFzVmVydGljYWxTY3JvbGwgPyB3aGVlbERlbHRhWSA6IDApO1xuXG5cdFx0aWYgKCBuZXdYID4gMCApIHtcblx0XHRcdG5ld1ggPSAwO1xuXHRcdH0gZWxzZSBpZiAoIG5ld1ggPCB0aGlzLm1heFNjcm9sbFggKSB7XG5cdFx0XHRuZXdYID0gdGhpcy5tYXhTY3JvbGxYO1xuXHRcdH1cblxuXHRcdGlmICggbmV3WSA+IDAgKSB7XG5cdFx0XHRuZXdZID0gMDtcblx0XHR9IGVsc2UgaWYgKCBuZXdZIDwgdGhpcy5tYXhTY3JvbGxZICkge1xuXHRcdFx0bmV3WSA9IHRoaXMubWF4U2Nyb2xsWTtcblx0XHR9XG5cblx0XHR0aGlzLnNjcm9sbFRvKG5ld1gsIG5ld1ksIDApO1xuXG4vLyBJTlNFUlQgUE9JTlQ6IF93aGVlbFxuXHR9LFxuXG5cdF9pbml0U25hcDogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMuY3VycmVudFBhZ2UgPSB7fTtcblxuXHRcdGlmICggdHlwZW9mIHRoaXMub3B0aW9ucy5zbmFwID09ICdzdHJpbmcnICkge1xuXHRcdFx0dGhpcy5vcHRpb25zLnNuYXAgPSB0aGlzLnNjcm9sbGVyLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5vcHRpb25zLnNuYXApO1xuXHRcdH1cblxuXHRcdHRoaXMub24oJ3JlZnJlc2gnLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgaSA9IDAsIGwsXG5cdFx0XHRcdG0gPSAwLCBuLFxuXHRcdFx0XHRjeCwgY3ksXG5cdFx0XHRcdHggPSAwLCB5LFxuXHRcdFx0XHRzdGVwWCA9IHRoaXMub3B0aW9ucy5zbmFwU3RlcFggfHwgdGhpcy53cmFwcGVyV2lkdGgsXG5cdFx0XHRcdHN0ZXBZID0gdGhpcy5vcHRpb25zLnNuYXBTdGVwWSB8fCB0aGlzLndyYXBwZXJIZWlnaHQsXG5cdFx0XHRcdGVsO1xuXG5cdFx0XHR0aGlzLnBhZ2VzID0gW107XG5cblx0XHRcdGlmICggIXRoaXMud3JhcHBlcldpZHRoIHx8ICF0aGlzLndyYXBwZXJIZWlnaHQgfHwgIXRoaXMuc2Nyb2xsZXJXaWR0aCB8fCAhdGhpcy5zY3JvbGxlckhlaWdodCApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHRoaXMub3B0aW9ucy5zbmFwID09PSB0cnVlICkge1xuXHRcdFx0XHRjeCA9IE1hdGgucm91bmQoIHN0ZXBYIC8gMiApO1xuXHRcdFx0XHRjeSA9IE1hdGgucm91bmQoIHN0ZXBZIC8gMiApO1xuXG5cdFx0XHRcdHdoaWxlICggeCA+IC10aGlzLnNjcm9sbGVyV2lkdGggKSB7XG5cdFx0XHRcdFx0dGhpcy5wYWdlc1tpXSA9IFtdO1xuXHRcdFx0XHRcdGwgPSAwO1xuXHRcdFx0XHRcdHkgPSAwO1xuXG5cdFx0XHRcdFx0d2hpbGUgKCB5ID4gLXRoaXMuc2Nyb2xsZXJIZWlnaHQgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnBhZ2VzW2ldW2xdID0ge1xuXHRcdFx0XHRcdFx0XHR4OiBNYXRoLm1heCh4LCB0aGlzLm1heFNjcm9sbFgpLFxuXHRcdFx0XHRcdFx0XHR5OiBNYXRoLm1heCh5LCB0aGlzLm1heFNjcm9sbFkpLFxuXHRcdFx0XHRcdFx0XHR3aWR0aDogc3RlcFgsXG5cdFx0XHRcdFx0XHRcdGhlaWdodDogc3RlcFksXG5cdFx0XHRcdFx0XHRcdGN4OiB4IC0gY3gsXG5cdFx0XHRcdFx0XHRcdGN5OiB5IC0gY3lcblx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdHkgLT0gc3RlcFk7XG5cdFx0XHRcdFx0XHRsKys7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0eCAtPSBzdGVwWDtcblx0XHRcdFx0XHRpKys7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsID0gdGhpcy5vcHRpb25zLnNuYXA7XG5cdFx0XHRcdGwgPSBlbC5sZW5ndGg7XG5cdFx0XHRcdG4gPSAtMTtcblxuXHRcdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBpID09PSAwIHx8IGVsW2ldLm9mZnNldExlZnQgPD0gZWxbaS0xXS5vZmZzZXRMZWZ0ICkge1xuXHRcdFx0XHRcdFx0bSA9IDA7XG5cdFx0XHRcdFx0XHRuKys7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKCAhdGhpcy5wYWdlc1ttXSApIHtcblx0XHRcdFx0XHRcdHRoaXMucGFnZXNbbV0gPSBbXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR4ID0gTWF0aC5tYXgoLWVsW2ldLm9mZnNldExlZnQsIHRoaXMubWF4U2Nyb2xsWCk7XG5cdFx0XHRcdFx0eSA9IE1hdGgubWF4KC1lbFtpXS5vZmZzZXRUb3AsIHRoaXMubWF4U2Nyb2xsWSk7XG5cdFx0XHRcdFx0Y3ggPSB4IC0gTWF0aC5yb3VuZChlbFtpXS5vZmZzZXRXaWR0aCAvIDIpO1xuXHRcdFx0XHRcdGN5ID0geSAtIE1hdGgucm91bmQoZWxbaV0ub2Zmc2V0SGVpZ2h0IC8gMik7XG5cblx0XHRcdFx0XHR0aGlzLnBhZ2VzW21dW25dID0ge1xuXHRcdFx0XHRcdFx0eDogeCxcblx0XHRcdFx0XHRcdHk6IHksXG5cdFx0XHRcdFx0XHR3aWR0aDogZWxbaV0ub2Zmc2V0V2lkdGgsXG5cdFx0XHRcdFx0XHRoZWlnaHQ6IGVsW2ldLm9mZnNldEhlaWdodCxcblx0XHRcdFx0XHRcdGN4OiBjeCxcblx0XHRcdFx0XHRcdGN5OiBjeVxuXHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRpZiAoIHggPiB0aGlzLm1heFNjcm9sbFggKSB7XG5cdFx0XHRcdFx0XHRtKys7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMuZ29Ub1BhZ2UodGhpcy5jdXJyZW50UGFnZS5wYWdlWCB8fCAwLCB0aGlzLmN1cnJlbnRQYWdlLnBhZ2VZIHx8IDAsIDApO1xuXG5cdFx0XHQvLyBVcGRhdGUgc25hcCB0aHJlc2hvbGQgaWYgbmVlZGVkXG5cdFx0XHRpZiAoIHRoaXMub3B0aW9ucy5zbmFwVGhyZXNob2xkICUgMSA9PT0gMCApIHtcblx0XHRcdFx0dGhpcy5zbmFwVGhyZXNob2xkWCA9IHRoaXMub3B0aW9ucy5zbmFwVGhyZXNob2xkO1xuXHRcdFx0XHR0aGlzLnNuYXBUaHJlc2hvbGRZID0gdGhpcy5vcHRpb25zLnNuYXBUaHJlc2hvbGQ7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLnNuYXBUaHJlc2hvbGRYID0gTWF0aC5yb3VuZCh0aGlzLnBhZ2VzW3RoaXMuY3VycmVudFBhZ2UucGFnZVhdW3RoaXMuY3VycmVudFBhZ2UucGFnZVldLndpZHRoICogdGhpcy5vcHRpb25zLnNuYXBUaHJlc2hvbGQpO1xuXHRcdFx0XHR0aGlzLnNuYXBUaHJlc2hvbGRZID0gTWF0aC5yb3VuZCh0aGlzLnBhZ2VzW3RoaXMuY3VycmVudFBhZ2UucGFnZVhdW3RoaXMuY3VycmVudFBhZ2UucGFnZVldLmhlaWdodCAqIHRoaXMub3B0aW9ucy5zbmFwVGhyZXNob2xkKTtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHRoaXMub24oJ2ZsaWNrJywgZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIHRpbWUgPSB0aGlzLm9wdGlvbnMuc25hcFNwZWVkIHx8IE1hdGgubWF4KFxuXHRcdFx0XHRcdE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0TWF0aC5taW4oTWF0aC5hYnModGhpcy54IC0gdGhpcy5zdGFydFgpLCAxMDAwKSxcblx0XHRcdFx0XHRcdE1hdGgubWluKE1hdGguYWJzKHRoaXMueSAtIHRoaXMuc3RhcnRZKSwgMTAwMClcblx0XHRcdFx0XHQpLCAzMDApO1xuXG5cdFx0XHR0aGlzLmdvVG9QYWdlKFxuXHRcdFx0XHR0aGlzLmN1cnJlbnRQYWdlLnBhZ2VYICsgdGhpcy5kaXJlY3Rpb25YLFxuXHRcdFx0XHR0aGlzLmN1cnJlbnRQYWdlLnBhZ2VZICsgdGhpcy5kaXJlY3Rpb25ZLFxuXHRcdFx0XHR0aW1lXG5cdFx0XHQpO1xuXHRcdH0pO1xuXHR9LFxuXG5cdF9uZWFyZXN0U25hcDogZnVuY3Rpb24gKHgsIHkpIHtcblx0XHRpZiAoICF0aGlzLnBhZ2VzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB7IHg6IDAsIHk6IDAsIHBhZ2VYOiAwLCBwYWdlWTogMCB9O1xuXHRcdH1cblxuXHRcdHZhciBpID0gMCxcblx0XHRcdGwgPSB0aGlzLnBhZ2VzLmxlbmd0aCxcblx0XHRcdG0gPSAwO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UgZXhjZWVkZWQgdGhlIHNuYXAgdGhyZXNob2xkXG5cdFx0aWYgKCBNYXRoLmFicyh4IC0gdGhpcy5hYnNTdGFydFgpIDwgdGhpcy5zbmFwVGhyZXNob2xkWCAmJlxuXHRcdFx0TWF0aC5hYnMoeSAtIHRoaXMuYWJzU3RhcnRZKSA8IHRoaXMuc25hcFRocmVzaG9sZFkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5jdXJyZW50UGFnZTtcblx0XHR9XG5cblx0XHRpZiAoIHggPiAwICkge1xuXHRcdFx0eCA9IDA7XG5cdFx0fSBlbHNlIGlmICggeCA8IHRoaXMubWF4U2Nyb2xsWCApIHtcblx0XHRcdHggPSB0aGlzLm1heFNjcm9sbFg7XG5cdFx0fVxuXG5cdFx0aWYgKCB5ID4gMCApIHtcblx0XHRcdHkgPSAwO1xuXHRcdH0gZWxzZSBpZiAoIHkgPCB0aGlzLm1heFNjcm9sbFkgKSB7XG5cdFx0XHR5ID0gdGhpcy5tYXhTY3JvbGxZO1xuXHRcdH1cblxuXHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdGlmICggeCA+PSB0aGlzLnBhZ2VzW2ldWzBdLmN4ICkge1xuXHRcdFx0XHR4ID0gdGhpcy5wYWdlc1tpXVswXS54O1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cblx0XHRsID0gdGhpcy5wYWdlc1tpXS5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IG0gPCBsOyBtKysgKSB7XG5cdFx0XHRpZiAoIHkgPj0gdGhpcy5wYWdlc1swXVttXS5jeSApIHtcblx0XHRcdFx0eSA9IHRoaXMucGFnZXNbMF1bbV0ueTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBpID09IHRoaXMuY3VycmVudFBhZ2UucGFnZVggKSB7XG5cdFx0XHRpICs9IHRoaXMuZGlyZWN0aW9uWDtcblxuXHRcdFx0aWYgKCBpIDwgMCApIHtcblx0XHRcdFx0aSA9IDA7XG5cdFx0XHR9IGVsc2UgaWYgKCBpID49IHRoaXMucGFnZXMubGVuZ3RoICkge1xuXHRcdFx0XHRpID0gdGhpcy5wYWdlcy5sZW5ndGggLSAxO1xuXHRcdFx0fVxuXG5cdFx0XHR4ID0gdGhpcy5wYWdlc1tpXVswXS54O1xuXHRcdH1cblxuXHRcdGlmICggbSA9PSB0aGlzLmN1cnJlbnRQYWdlLnBhZ2VZICkge1xuXHRcdFx0bSArPSB0aGlzLmRpcmVjdGlvblk7XG5cblx0XHRcdGlmICggbSA8IDAgKSB7XG5cdFx0XHRcdG0gPSAwO1xuXHRcdFx0fSBlbHNlIGlmICggbSA+PSB0aGlzLnBhZ2VzWzBdLmxlbmd0aCApIHtcblx0XHRcdFx0bSA9IHRoaXMucGFnZXNbMF0ubGVuZ3RoIC0gMTtcblx0XHRcdH1cblxuXHRcdFx0eSA9IHRoaXMucGFnZXNbMF1bbV0ueTtcblx0XHR9XG5cblx0XHRyZXR1cm4ge1xuXHRcdFx0eDogeCxcblx0XHRcdHk6IHksXG5cdFx0XHRwYWdlWDogaSxcblx0XHRcdHBhZ2VZOiBtXG5cdFx0fTtcblx0fSxcblxuXHRnb1RvUGFnZTogZnVuY3Rpb24gKHgsIHksIHRpbWUsIGVhc2luZykge1xuXHRcdGVhc2luZyA9IGVhc2luZyB8fCB0aGlzLm9wdGlvbnMuYm91bmNlRWFzaW5nO1xuXG5cdFx0aWYgKCB4ID49IHRoaXMucGFnZXMubGVuZ3RoICkge1xuXHRcdFx0eCA9IHRoaXMucGFnZXMubGVuZ3RoIC0gMTtcblx0XHR9IGVsc2UgaWYgKCB4IDwgMCApIHtcblx0XHRcdHggPSAwO1xuXHRcdH1cblxuXHRcdGlmICggeSA+PSB0aGlzLnBhZ2VzW3hdLmxlbmd0aCApIHtcblx0XHRcdHkgPSB0aGlzLnBhZ2VzW3hdLmxlbmd0aCAtIDE7XG5cdFx0fSBlbHNlIGlmICggeSA8IDAgKSB7XG5cdFx0XHR5ID0gMDtcblx0XHR9XG5cblx0XHR2YXIgcG9zWCA9IHRoaXMucGFnZXNbeF1beV0ueCxcblx0XHRcdHBvc1kgPSB0aGlzLnBhZ2VzW3hdW3ldLnk7XG5cblx0XHR0aW1lID0gdGltZSA9PT0gdW5kZWZpbmVkID8gdGhpcy5vcHRpb25zLnNuYXBTcGVlZCB8fCBNYXRoLm1heChcblx0XHRcdE1hdGgubWF4KFxuXHRcdFx0XHRNYXRoLm1pbihNYXRoLmFicyhwb3NYIC0gdGhpcy54KSwgMTAwMCksXG5cdFx0XHRcdE1hdGgubWluKE1hdGguYWJzKHBvc1kgLSB0aGlzLnkpLCAxMDAwKVxuXHRcdFx0KSwgMzAwKSA6IHRpbWU7XG5cblx0XHR0aGlzLmN1cnJlbnRQYWdlID0ge1xuXHRcdFx0eDogcG9zWCxcblx0XHRcdHk6IHBvc1ksXG5cdFx0XHRwYWdlWDogeCxcblx0XHRcdHBhZ2VZOiB5XG5cdFx0fTtcblxuXHRcdHRoaXMuc2Nyb2xsVG8ocG9zWCwgcG9zWSwgdGltZSwgZWFzaW5nKTtcblx0fSxcblxuXHRuZXh0OiBmdW5jdGlvbiAodGltZSwgZWFzaW5nKSB7XG5cdFx0dmFyIHggPSB0aGlzLmN1cnJlbnRQYWdlLnBhZ2VYLFxuXHRcdFx0eSA9IHRoaXMuY3VycmVudFBhZ2UucGFnZVk7XG5cblx0XHR4Kys7XG5cblx0XHRpZiAoIHggPj0gdGhpcy5wYWdlcy5sZW5ndGggJiYgdGhpcy5oYXNWZXJ0aWNhbFNjcm9sbCApIHtcblx0XHRcdHggPSAwO1xuXHRcdFx0eSsrO1xuXHRcdH1cblxuXHRcdHRoaXMuZ29Ub1BhZ2UoeCwgeSwgdGltZSwgZWFzaW5nKTtcblx0fSxcblxuXHRwcmV2OiBmdW5jdGlvbiAodGltZSwgZWFzaW5nKSB7XG5cdFx0dmFyIHggPSB0aGlzLmN1cnJlbnRQYWdlLnBhZ2VYLFxuXHRcdFx0eSA9IHRoaXMuY3VycmVudFBhZ2UucGFnZVk7XG5cblx0XHR4LS07XG5cblx0XHRpZiAoIHggPCAwICYmIHRoaXMuaGFzVmVydGljYWxTY3JvbGwgKSB7XG5cdFx0XHR4ID0gMDtcblx0XHRcdHktLTtcblx0XHR9XG5cblx0XHR0aGlzLmdvVG9QYWdlKHgsIHksIHRpbWUsIGVhc2luZyk7XG5cdH0sXG5cblx0X2luaXRLZXlzOiBmdW5jdGlvbiAoZSkge1xuXHRcdC8vIGRlZmF1bHQga2V5IGJpbmRpbmdzXG5cdFx0dmFyIGtleXMgPSB7XG5cdFx0XHRwYWdlVXA6IDMzLFxuXHRcdFx0cGFnZURvd246IDM0LFxuXHRcdFx0ZW5kOiAzNSxcblx0XHRcdGhvbWU6IDM2LFxuXHRcdFx0bGVmdDogMzcsXG5cdFx0XHR1cDogMzgsXG5cdFx0XHRyaWdodDogMzksXG5cdFx0XHRkb3duOiA0MFxuXHRcdH07XG5cdFx0dmFyIGk7XG5cblx0XHQvLyBpZiB5b3UgZ2l2ZSBtZSBjaGFyYWN0ZXJzIEkgZ2l2ZSB5b3Uga2V5Y29kZVxuXHRcdGlmICggdHlwZW9mIHRoaXMub3B0aW9ucy5rZXlCaW5kaW5ncyA9PSAnb2JqZWN0JyApIHtcblx0XHRcdGZvciAoIGkgaW4gdGhpcy5vcHRpb25zLmtleUJpbmRpbmdzICkge1xuXHRcdFx0XHRpZiAoIHR5cGVvZiB0aGlzLm9wdGlvbnMua2V5QmluZGluZ3NbaV0gPT0gJ3N0cmluZycgKSB7XG5cdFx0XHRcdFx0dGhpcy5vcHRpb25zLmtleUJpbmRpbmdzW2ldID0gdGhpcy5vcHRpb25zLmtleUJpbmRpbmdzW2ldLnRvVXBwZXJDYXNlKCkuY2hhckNvZGVBdCgwKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMua2V5QmluZGluZ3MgPSB7fTtcblx0XHR9XG5cblx0XHRmb3IgKCBpIGluIGtleXMgKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMua2V5QmluZGluZ3NbaV0gPSB0aGlzLm9wdGlvbnMua2V5QmluZGluZ3NbaV0gfHwga2V5c1tpXTtcblx0XHR9XG5cblx0XHR1dGlscy5hZGRFdmVudCh3aW5kb3csICdrZXlkb3duJywgdGhpcyk7XG5cblx0XHR0aGlzLm9uKCdkZXN0cm95JywgZnVuY3Rpb24gKCkge1xuXHRcdFx0dXRpbHMucmVtb3ZlRXZlbnQod2luZG93LCAna2V5ZG93bicsIHRoaXMpO1xuXHRcdH0pO1xuXHR9LFxuXG5cdF9rZXk6IGZ1bmN0aW9uIChlKSB7XG5cdFx0aWYgKCAhdGhpcy5lbmFibGVkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBzbmFwID0gdGhpcy5vcHRpb25zLnNuYXAsXHQvLyB3ZSBhcmUgdXNpbmcgdGhpcyBhbG90LCBiZXR0ZXIgdG8gY2FjaGUgaXRcblx0XHRcdG5ld1ggPSBzbmFwID8gdGhpcy5jdXJyZW50UGFnZS5wYWdlWCA6IHRoaXMueCxcblx0XHRcdG5ld1kgPSBzbmFwID8gdGhpcy5jdXJyZW50UGFnZS5wYWdlWSA6IHRoaXMueSxcblx0XHRcdG5vdyA9IHV0aWxzLmdldFRpbWUoKSxcblx0XHRcdHByZXZUaW1lID0gdGhpcy5rZXlUaW1lIHx8IDAsXG5cdFx0XHRhY2NlbGVyYXRpb24gPSAwLjI1MCxcblx0XHRcdHBvcztcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnVzZVRyYW5zaXRpb24gJiYgdGhpcy5pc0luVHJhbnNpdGlvbiApIHtcblx0XHRcdHBvcyA9IHRoaXMuZ2V0Q29tcHV0ZWRQb3NpdGlvbigpO1xuXG5cdFx0XHR0aGlzLl90cmFuc2xhdGUoTWF0aC5yb3VuZChwb3MueCksIE1hdGgucm91bmQocG9zLnkpKTtcblx0XHRcdHRoaXMuaXNJblRyYW5zaXRpb24gPSBmYWxzZTtcblx0XHR9XG5cblx0XHR0aGlzLmtleUFjY2VsZXJhdGlvbiA9IG5vdyAtIHByZXZUaW1lIDwgMjAwID8gTWF0aC5taW4odGhpcy5rZXlBY2NlbGVyYXRpb24gKyBhY2NlbGVyYXRpb24sIDUwKSA6IDA7XG5cblx0XHRzd2l0Y2ggKCBlLmtleUNvZGUgKSB7XG5cdFx0XHRjYXNlIHRoaXMub3B0aW9ucy5rZXlCaW5kaW5ncy5wYWdlVXA6XG5cdFx0XHRcdGlmICggdGhpcy5oYXNIb3Jpem9udGFsU2Nyb2xsICYmICF0aGlzLmhhc1ZlcnRpY2FsU2Nyb2xsICkge1xuXHRcdFx0XHRcdG5ld1ggKz0gc25hcCA/IDEgOiB0aGlzLndyYXBwZXJXaWR0aDtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRuZXdZICs9IHNuYXAgPyAxIDogdGhpcy53cmFwcGVySGVpZ2h0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSB0aGlzLm9wdGlvbnMua2V5QmluZGluZ3MucGFnZURvd246XG5cdFx0XHRcdGlmICggdGhpcy5oYXNIb3Jpem9udGFsU2Nyb2xsICYmICF0aGlzLmhhc1ZlcnRpY2FsU2Nyb2xsICkge1xuXHRcdFx0XHRcdG5ld1ggLT0gc25hcCA/IDEgOiB0aGlzLndyYXBwZXJXaWR0aDtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRuZXdZIC09IHNuYXAgPyAxIDogdGhpcy53cmFwcGVySGVpZ2h0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSB0aGlzLm9wdGlvbnMua2V5QmluZGluZ3MuZW5kOlxuXHRcdFx0XHRuZXdYID0gc25hcCA/IHRoaXMucGFnZXMubGVuZ3RoLTEgOiB0aGlzLm1heFNjcm9sbFg7XG5cdFx0XHRcdG5ld1kgPSBzbmFwID8gdGhpcy5wYWdlc1swXS5sZW5ndGgtMSA6IHRoaXMubWF4U2Nyb2xsWTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIHRoaXMub3B0aW9ucy5rZXlCaW5kaW5ncy5ob21lOlxuXHRcdFx0XHRuZXdYID0gMDtcblx0XHRcdFx0bmV3WSA9IDA7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSB0aGlzLm9wdGlvbnMua2V5QmluZGluZ3MubGVmdDpcblx0XHRcdFx0bmV3WCArPSBzbmFwID8gLTEgOiA1ICsgdGhpcy5rZXlBY2NlbGVyYXRpb24+PjA7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSB0aGlzLm9wdGlvbnMua2V5QmluZGluZ3MudXA6XG5cdFx0XHRcdG5ld1kgKz0gc25hcCA/IDEgOiA1ICsgdGhpcy5rZXlBY2NlbGVyYXRpb24+PjA7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSB0aGlzLm9wdGlvbnMua2V5QmluZGluZ3MucmlnaHQ6XG5cdFx0XHRcdG5ld1ggLT0gc25hcCA/IC0xIDogNSArIHRoaXMua2V5QWNjZWxlcmF0aW9uPj4wO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgdGhpcy5vcHRpb25zLmtleUJpbmRpbmdzLmRvd246XG5cdFx0XHRcdG5ld1kgLT0gc25hcCA/IDEgOiA1ICsgdGhpcy5rZXlBY2NlbGVyYXRpb24+PjA7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggc25hcCApIHtcblx0XHRcdHRoaXMuZ29Ub1BhZ2UobmV3WCwgbmV3WSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBuZXdYID4gMCApIHtcblx0XHRcdG5ld1ggPSAwO1xuXHRcdFx0dGhpcy5rZXlBY2NlbGVyYXRpb24gPSAwO1xuXHRcdH0gZWxzZSBpZiAoIG5ld1ggPCB0aGlzLm1heFNjcm9sbFggKSB7XG5cdFx0XHRuZXdYID0gdGhpcy5tYXhTY3JvbGxYO1xuXHRcdFx0dGhpcy5rZXlBY2NlbGVyYXRpb24gPSAwO1xuXHRcdH1cblxuXHRcdGlmICggbmV3WSA+IDAgKSB7XG5cdFx0XHRuZXdZID0gMDtcblx0XHRcdHRoaXMua2V5QWNjZWxlcmF0aW9uID0gMDtcblx0XHR9IGVsc2UgaWYgKCBuZXdZIDwgdGhpcy5tYXhTY3JvbGxZICkge1xuXHRcdFx0bmV3WSA9IHRoaXMubWF4U2Nyb2xsWTtcblx0XHRcdHRoaXMua2V5QWNjZWxlcmF0aW9uID0gMDtcblx0XHR9XG5cblx0XHR0aGlzLnNjcm9sbFRvKG5ld1gsIG5ld1ksIDApO1xuXG5cdFx0dGhpcy5rZXlUaW1lID0gbm93O1xuXHR9LFxuXG5cdF9hbmltYXRlOiBmdW5jdGlvbiAoZGVzdFgsIGRlc3RZLCBkdXJhdGlvbiwgZWFzaW5nRm4pIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRzdGFydFggPSB0aGlzLngsXG5cdFx0XHRzdGFydFkgPSB0aGlzLnksXG5cdFx0XHRzdGFydFRpbWUgPSB1dGlscy5nZXRUaW1lKCksXG5cdFx0XHRkZXN0VGltZSA9IHN0YXJ0VGltZSArIGR1cmF0aW9uO1xuXG5cdFx0ZnVuY3Rpb24gc3RlcCAoKSB7XG5cdFx0XHR2YXIgbm93ID0gdXRpbHMuZ2V0VGltZSgpLFxuXHRcdFx0XHRuZXdYLCBuZXdZLFxuXHRcdFx0XHRlYXNpbmc7XG5cblx0XHRcdGlmICggbm93ID49IGRlc3RUaW1lICkge1xuXHRcdFx0XHR0aGF0LmlzQW5pbWF0aW5nID0gZmFsc2U7XG5cdFx0XHRcdHRoYXQuX3RyYW5zbGF0ZShkZXN0WCwgZGVzdFkpO1xuXG5cdFx0XHRcdGlmICggIXRoYXQucmVzZXRQb3NpdGlvbih0aGF0Lm9wdGlvbnMuYm91bmNlVGltZSkgKSB7XG5cdFx0XHRcdFx0dGhhdC5fZXhlY0V2ZW50KCdzY3JvbGxFbmQnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0bm93ID0gKCBub3cgLSBzdGFydFRpbWUgKSAvIGR1cmF0aW9uO1xuXHRcdFx0ZWFzaW5nID0gZWFzaW5nRm4obm93KTtcblx0XHRcdG5ld1ggPSAoIGRlc3RYIC0gc3RhcnRYICkgKiBlYXNpbmcgKyBzdGFydFg7XG5cdFx0XHRuZXdZID0gKCBkZXN0WSAtIHN0YXJ0WSApICogZWFzaW5nICsgc3RhcnRZO1xuXHRcdFx0dGhhdC5fdHJhbnNsYXRlKG5ld1gsIG5ld1kpO1xuXG5cdFx0XHRpZiAoIHRoYXQuaXNBbmltYXRpbmcgKSB7XG5cdFx0XHRcdHJBRihzdGVwKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aGlzLmlzQW5pbWF0aW5nID0gdHJ1ZTtcblx0XHRzdGVwKCk7XG5cdH0sXG5cdGhhbmRsZUV2ZW50OiBmdW5jdGlvbiAoZSkge1xuXHRcdHN3aXRjaCAoIGUudHlwZSApIHtcblx0XHRcdGNhc2UgJ3RvdWNoc3RhcnQnOlxuXHRcdFx0Y2FzZSAncG9pbnRlcmRvd24nOlxuXHRcdFx0Y2FzZSAnTVNQb2ludGVyRG93bic6XG5cdFx0XHRjYXNlICdtb3VzZWRvd24nOlxuXHRcdFx0XHR0aGlzLl9zdGFydChlKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICd0b3VjaG1vdmUnOlxuXHRcdFx0Y2FzZSAncG9pbnRlcm1vdmUnOlxuXHRcdFx0Y2FzZSAnTVNQb2ludGVyTW92ZSc6XG5cdFx0XHRjYXNlICdtb3VzZW1vdmUnOlxuXHRcdFx0XHR0aGlzLl9tb3ZlKGUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3RvdWNoZW5kJzpcblx0XHRcdGNhc2UgJ3BvaW50ZXJ1cCc6XG5cdFx0XHRjYXNlICdNU1BvaW50ZXJVcCc6XG5cdFx0XHRjYXNlICdtb3VzZXVwJzpcblx0XHRcdGNhc2UgJ3RvdWNoY2FuY2VsJzpcblx0XHRcdGNhc2UgJ3BvaW50ZXJjYW5jZWwnOlxuXHRcdFx0Y2FzZSAnTVNQb2ludGVyQ2FuY2VsJzpcblx0XHRcdGNhc2UgJ21vdXNlY2FuY2VsJzpcblx0XHRcdFx0dGhpcy5fZW5kKGUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ29yaWVudGF0aW9uY2hhbmdlJzpcblx0XHRcdGNhc2UgJ3Jlc2l6ZSc6XG5cdFx0XHRcdHRoaXMuX3Jlc2l6ZSgpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3RyYW5zaXRpb25lbmQnOlxuXHRcdFx0Y2FzZSAnd2Via2l0VHJhbnNpdGlvbkVuZCc6XG5cdFx0XHRjYXNlICdvVHJhbnNpdGlvbkVuZCc6XG5cdFx0XHRjYXNlICdNU1RyYW5zaXRpb25FbmQnOlxuXHRcdFx0XHR0aGlzLl90cmFuc2l0aW9uRW5kKGUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3doZWVsJzpcblx0XHRcdGNhc2UgJ0RPTU1vdXNlU2Nyb2xsJzpcblx0XHRcdGNhc2UgJ21vdXNld2hlZWwnOlxuXHRcdFx0XHR0aGlzLl93aGVlbChlKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdrZXlkb3duJzpcblx0XHRcdFx0dGhpcy5fa2V5KGUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2NsaWNrJzpcblx0XHRcdFx0aWYgKCAhZS5fY29uc3RydWN0ZWQgKSB7XG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG59O1xuZnVuY3Rpb24gY3JlYXRlRGVmYXVsdFNjcm9sbGJhciAoZGlyZWN0aW9uLCBpbnRlcmFjdGl2ZSwgdHlwZSkge1xuXHR2YXIgc2Nyb2xsYmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksXG5cdFx0aW5kaWNhdG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cblx0aWYgKCB0eXBlID09PSB0cnVlICkge1xuXHRcdHNjcm9sbGJhci5zdHlsZS5jc3NUZXh0ID0gJ3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6OTk5OSc7XG5cdFx0aW5kaWNhdG9yLnN0eWxlLmNzc1RleHQgPSAnLXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjUpO2JvcmRlcjoxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjkpO2JvcmRlci1yYWRpdXM6M3B4Jztcblx0fVxuXG5cdGluZGljYXRvci5jbGFzc05hbWUgPSAnaVNjcm9sbEluZGljYXRvcic7XG5cblx0aWYgKCBkaXJlY3Rpb24gPT0gJ2gnICkge1xuXHRcdGlmICggdHlwZSA9PT0gdHJ1ZSApIHtcblx0XHRcdHNjcm9sbGJhci5zdHlsZS5jc3NUZXh0ICs9ICc7aGVpZ2h0OjdweDtsZWZ0OjJweDtyaWdodDoycHg7Ym90dG9tOjAnO1xuXHRcdFx0aW5kaWNhdG9yLnN0eWxlLmhlaWdodCA9ICcxMDAlJztcblx0XHR9XG5cdFx0c2Nyb2xsYmFyLmNsYXNzTmFtZSA9ICdpU2Nyb2xsSG9yaXpvbnRhbFNjcm9sbGJhcic7XG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlID09PSB0cnVlICkge1xuXHRcdFx0c2Nyb2xsYmFyLnN0eWxlLmNzc1RleHQgKz0gJzt3aWR0aDo3cHg7Ym90dG9tOjJweDt0b3A6MnB4O3JpZ2h0OjFweCc7XG5cdFx0XHRpbmRpY2F0b3Iuc3R5bGUud2lkdGggPSAnMTAwJSc7XG5cdFx0fVxuXHRcdHNjcm9sbGJhci5jbGFzc05hbWUgPSAnaVNjcm9sbFZlcnRpY2FsU2Nyb2xsYmFyJztcblx0fVxuXG5cdHNjcm9sbGJhci5zdHlsZS5jc3NUZXh0ICs9ICc7b3ZlcmZsb3c6aGlkZGVuJztcblxuXHRpZiAoICFpbnRlcmFjdGl2ZSApIHtcblx0XHRzY3JvbGxiYXIuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdub25lJztcblx0fVxuXG5cdHNjcm9sbGJhci5hcHBlbmRDaGlsZChpbmRpY2F0b3IpO1xuXG5cdHJldHVybiBzY3JvbGxiYXI7XG59XG5cbmZ1bmN0aW9uIEluZGljYXRvciAoc2Nyb2xsZXIsIG9wdGlvbnMpIHtcblx0dGhpcy53cmFwcGVyID0gdHlwZW9mIG9wdGlvbnMuZWwgPT0gJ3N0cmluZycgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG9wdGlvbnMuZWwpIDogb3B0aW9ucy5lbDtcblx0dGhpcy53cmFwcGVyU3R5bGUgPSB0aGlzLndyYXBwZXIuc3R5bGU7XG5cdHRoaXMuaW5kaWNhdG9yID0gdGhpcy53cmFwcGVyLmNoaWxkcmVuWzBdO1xuXHR0aGlzLmluZGljYXRvclN0eWxlID0gdGhpcy5pbmRpY2F0b3Iuc3R5bGU7XG5cdHRoaXMuc2Nyb2xsZXIgPSBzY3JvbGxlcjtcblxuXHR0aGlzLm9wdGlvbnMgPSB7XG5cdFx0bGlzdGVuWDogdHJ1ZSxcblx0XHRsaXN0ZW5ZOiB0cnVlLFxuXHRcdGludGVyYWN0aXZlOiBmYWxzZSxcblx0XHRyZXNpemU6IHRydWUsXG5cdFx0ZGVmYXVsdFNjcm9sbGJhcnM6IGZhbHNlLFxuXHRcdHNocmluazogZmFsc2UsXG5cdFx0ZmFkZTogZmFsc2UsXG5cdFx0c3BlZWRSYXRpb1g6IDAsXG5cdFx0c3BlZWRSYXRpb1k6IDBcblx0fTtcblxuXHRmb3IgKCB2YXIgaSBpbiBvcHRpb25zICkge1xuXHRcdHRoaXMub3B0aW9uc1tpXSA9IG9wdGlvbnNbaV07XG5cdH1cblxuXHR0aGlzLnNpemVSYXRpb1ggPSAxO1xuXHR0aGlzLnNpemVSYXRpb1kgPSAxO1xuXHR0aGlzLm1heFBvc1ggPSAwO1xuXHR0aGlzLm1heFBvc1kgPSAwO1xuXG5cdGlmICggdGhpcy5vcHRpb25zLmludGVyYWN0aXZlICkge1xuXHRcdGlmICggIXRoaXMub3B0aW9ucy5kaXNhYmxlVG91Y2ggKSB7XG5cdFx0XHR1dGlscy5hZGRFdmVudCh0aGlzLmluZGljYXRvciwgJ3RvdWNoc3RhcnQnLCB0aGlzKTtcblx0XHRcdHV0aWxzLmFkZEV2ZW50KHdpbmRvdywgJ3RvdWNoZW5kJywgdGhpcyk7XG5cdFx0fVxuXHRcdGlmICggIXRoaXMub3B0aW9ucy5kaXNhYmxlUG9pbnRlciApIHtcblx0XHRcdHV0aWxzLmFkZEV2ZW50KHRoaXMuaW5kaWNhdG9yLCB1dGlscy5wcmVmaXhQb2ludGVyRXZlbnQoJ3BvaW50ZXJkb3duJyksIHRoaXMpO1xuXHRcdFx0dXRpbHMuYWRkRXZlbnQod2luZG93LCB1dGlscy5wcmVmaXhQb2ludGVyRXZlbnQoJ3BvaW50ZXJ1cCcpLCB0aGlzKTtcblx0XHR9XG5cdFx0aWYgKCAhdGhpcy5vcHRpb25zLmRpc2FibGVNb3VzZSApIHtcblx0XHRcdHV0aWxzLmFkZEV2ZW50KHRoaXMuaW5kaWNhdG9yLCAnbW91c2Vkb3duJywgdGhpcyk7XG5cdFx0XHR1dGlscy5hZGRFdmVudCh3aW5kb3csICdtb3VzZXVwJywgdGhpcyk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCB0aGlzLm9wdGlvbnMuZmFkZSApIHtcblx0XHR0aGlzLndyYXBwZXJTdHlsZVt1dGlscy5zdHlsZS50cmFuc2Zvcm1dID0gdGhpcy5zY3JvbGxlci50cmFuc2xhdGVaO1xuXHRcdHRoaXMud3JhcHBlclN0eWxlW3V0aWxzLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbl0gPSB1dGlscy5pc0JhZEFuZHJvaWQgPyAnMC4wMDFzJyA6ICcwbXMnO1xuXHRcdHRoaXMud3JhcHBlclN0eWxlLm9wYWNpdHkgPSAnMCc7XG5cdH1cbn1cblxuSW5kaWNhdG9yLnByb3RvdHlwZSA9IHtcblx0aGFuZGxlRXZlbnQ6IGZ1bmN0aW9uIChlKSB7XG5cdFx0c3dpdGNoICggZS50eXBlICkge1xuXHRcdFx0Y2FzZSAndG91Y2hzdGFydCc6XG5cdFx0XHRjYXNlICdwb2ludGVyZG93bic6XG5cdFx0XHRjYXNlICdNU1BvaW50ZXJEb3duJzpcblx0XHRcdGNhc2UgJ21vdXNlZG93bic6XG5cdFx0XHRcdHRoaXMuX3N0YXJ0KGUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3RvdWNobW92ZSc6XG5cdFx0XHRjYXNlICdwb2ludGVybW92ZSc6XG5cdFx0XHRjYXNlICdNU1BvaW50ZXJNb3ZlJzpcblx0XHRcdGNhc2UgJ21vdXNlbW92ZSc6XG5cdFx0XHRcdHRoaXMuX21vdmUoZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAndG91Y2hlbmQnOlxuXHRcdFx0Y2FzZSAncG9pbnRlcnVwJzpcblx0XHRcdGNhc2UgJ01TUG9pbnRlclVwJzpcblx0XHRcdGNhc2UgJ21vdXNldXAnOlxuXHRcdFx0Y2FzZSAndG91Y2hjYW5jZWwnOlxuXHRcdFx0Y2FzZSAncG9pbnRlcmNhbmNlbCc6XG5cdFx0XHRjYXNlICdNU1BvaW50ZXJDYW5jZWwnOlxuXHRcdFx0Y2FzZSAnbW91c2VjYW5jZWwnOlxuXHRcdFx0XHR0aGlzLl9lbmQoZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fSxcblxuXHRkZXN0cm95OiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuaW50ZXJhY3RpdmUgKSB7XG5cdFx0XHR1dGlscy5yZW1vdmVFdmVudCh0aGlzLmluZGljYXRvciwgJ3RvdWNoc3RhcnQnLCB0aGlzKTtcblx0XHRcdHV0aWxzLnJlbW92ZUV2ZW50KHRoaXMuaW5kaWNhdG9yLCB1dGlscy5wcmVmaXhQb2ludGVyRXZlbnQoJ3BvaW50ZXJkb3duJyksIHRoaXMpO1xuXHRcdFx0dXRpbHMucmVtb3ZlRXZlbnQodGhpcy5pbmRpY2F0b3IsICdtb3VzZWRvd24nLCB0aGlzKTtcblxuXHRcdFx0dXRpbHMucmVtb3ZlRXZlbnQod2luZG93LCAndG91Y2htb3ZlJywgdGhpcyk7XG5cdFx0XHR1dGlscy5yZW1vdmVFdmVudCh3aW5kb3csIHV0aWxzLnByZWZpeFBvaW50ZXJFdmVudCgncG9pbnRlcm1vdmUnKSwgdGhpcyk7XG5cdFx0XHR1dGlscy5yZW1vdmVFdmVudCh3aW5kb3csICdtb3VzZW1vdmUnLCB0aGlzKTtcblxuXHRcdFx0dXRpbHMucmVtb3ZlRXZlbnQod2luZG93LCAndG91Y2hlbmQnLCB0aGlzKTtcblx0XHRcdHV0aWxzLnJlbW92ZUV2ZW50KHdpbmRvdywgdXRpbHMucHJlZml4UG9pbnRlckV2ZW50KCdwb2ludGVydXAnKSwgdGhpcyk7XG5cdFx0XHR1dGlscy5yZW1vdmVFdmVudCh3aW5kb3csICdtb3VzZXVwJywgdGhpcyk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuZGVmYXVsdFNjcm9sbGJhcnMgKSB7XG5cdFx0XHR0aGlzLndyYXBwZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLndyYXBwZXIpO1xuXHRcdH1cblx0fSxcblxuXHRfc3RhcnQ6IGZ1bmN0aW9uIChlKSB7XG5cdFx0dmFyIHBvaW50ID0gZS50b3VjaGVzID8gZS50b3VjaGVzWzBdIDogZTtcblxuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG5cdFx0dGhpcy50cmFuc2l0aW9uVGltZSgpO1xuXG5cdFx0dGhpcy5pbml0aWF0ZWQgPSB0cnVlO1xuXHRcdHRoaXMubW92ZWQgPSBmYWxzZTtcblx0XHR0aGlzLmxhc3RQb2ludFhcdD0gcG9pbnQucGFnZVg7XG5cdFx0dGhpcy5sYXN0UG9pbnRZXHQ9IHBvaW50LnBhZ2VZO1xuXG5cdFx0dGhpcy5zdGFydFRpbWVcdD0gdXRpbHMuZ2V0VGltZSgpO1xuXG5cdFx0aWYgKCAhdGhpcy5vcHRpb25zLmRpc2FibGVUb3VjaCApIHtcblx0XHRcdHV0aWxzLmFkZEV2ZW50KHdpbmRvdywgJ3RvdWNobW92ZScsIHRoaXMpO1xuXHRcdH1cblx0XHRpZiAoICF0aGlzLm9wdGlvbnMuZGlzYWJsZVBvaW50ZXIgKSB7XG5cdFx0XHR1dGlscy5hZGRFdmVudCh3aW5kb3csIHV0aWxzLnByZWZpeFBvaW50ZXJFdmVudCgncG9pbnRlcm1vdmUnKSwgdGhpcyk7XG5cdFx0fVxuXHRcdGlmICggIXRoaXMub3B0aW9ucy5kaXNhYmxlTW91c2UgKSB7XG5cdFx0XHR1dGlscy5hZGRFdmVudCh3aW5kb3csICdtb3VzZW1vdmUnLCB0aGlzKTtcblx0XHR9XG5cblx0XHR0aGlzLnNjcm9sbGVyLl9leGVjRXZlbnQoJ2JlZm9yZVNjcm9sbFN0YXJ0Jyk7XG5cdH0sXG5cblx0X21vdmU6IGZ1bmN0aW9uIChlKSB7XG5cdFx0dmFyIHBvaW50ID0gZS50b3VjaGVzID8gZS50b3VjaGVzWzBdIDogZSxcblx0XHRcdGRlbHRhWCwgZGVsdGFZLFxuXHRcdFx0bmV3WCwgbmV3WSxcblx0XHRcdHRpbWVzdGFtcCA9IHV0aWxzLmdldFRpbWUoKTtcblxuXHRcdGlmICggIXRoaXMubW92ZWQgKSB7XG5cdFx0XHR0aGlzLnNjcm9sbGVyLl9leGVjRXZlbnQoJ3Njcm9sbFN0YXJ0Jyk7XG5cdFx0fVxuXG5cdFx0dGhpcy5tb3ZlZCA9IHRydWU7XG5cblx0XHRkZWx0YVggPSBwb2ludC5wYWdlWCAtIHRoaXMubGFzdFBvaW50WDtcblx0XHR0aGlzLmxhc3RQb2ludFggPSBwb2ludC5wYWdlWDtcblxuXHRcdGRlbHRhWSA9IHBvaW50LnBhZ2VZIC0gdGhpcy5sYXN0UG9pbnRZO1xuXHRcdHRoaXMubGFzdFBvaW50WSA9IHBvaW50LnBhZ2VZO1xuXG5cdFx0bmV3WCA9IHRoaXMueCArIGRlbHRhWDtcblx0XHRuZXdZID0gdGhpcy55ICsgZGVsdGFZO1xuXG5cdFx0dGhpcy5fcG9zKG5ld1gsIG5ld1kpO1xuXG4vLyBJTlNFUlQgUE9JTlQ6IGluZGljYXRvci5fbW92ZVxuXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH0sXG5cblx0X2VuZDogZnVuY3Rpb24gKGUpIHtcblx0XHRpZiAoICF0aGlzLmluaXRpYXRlZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGlzLmluaXRpYXRlZCA9IGZhbHNlO1xuXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cblx0XHR1dGlscy5yZW1vdmVFdmVudCh3aW5kb3csICd0b3VjaG1vdmUnLCB0aGlzKTtcblx0XHR1dGlscy5yZW1vdmVFdmVudCh3aW5kb3csIHV0aWxzLnByZWZpeFBvaW50ZXJFdmVudCgncG9pbnRlcm1vdmUnKSwgdGhpcyk7XG5cdFx0dXRpbHMucmVtb3ZlRXZlbnQod2luZG93LCAnbW91c2Vtb3ZlJywgdGhpcyk7XG5cblx0XHRpZiAoIHRoaXMuc2Nyb2xsZXIub3B0aW9ucy5zbmFwICkge1xuXHRcdFx0dmFyIHNuYXAgPSB0aGlzLnNjcm9sbGVyLl9uZWFyZXN0U25hcCh0aGlzLnNjcm9sbGVyLngsIHRoaXMuc2Nyb2xsZXIueSk7XG5cblx0XHRcdHZhciB0aW1lID0gdGhpcy5vcHRpb25zLnNuYXBTcGVlZCB8fCBNYXRoLm1heChcblx0XHRcdFx0XHRNYXRoLm1heChcblx0XHRcdFx0XHRcdE1hdGgubWluKE1hdGguYWJzKHRoaXMuc2Nyb2xsZXIueCAtIHNuYXAueCksIDEwMDApLFxuXHRcdFx0XHRcdFx0TWF0aC5taW4oTWF0aC5hYnModGhpcy5zY3JvbGxlci55IC0gc25hcC55KSwgMTAwMClcblx0XHRcdFx0XHQpLCAzMDApO1xuXG5cdFx0XHRpZiAoIHRoaXMuc2Nyb2xsZXIueCAhPSBzbmFwLnggfHwgdGhpcy5zY3JvbGxlci55ICE9IHNuYXAueSApIHtcblx0XHRcdFx0dGhpcy5zY3JvbGxlci5kaXJlY3Rpb25YID0gMDtcblx0XHRcdFx0dGhpcy5zY3JvbGxlci5kaXJlY3Rpb25ZID0gMDtcblx0XHRcdFx0dGhpcy5zY3JvbGxlci5jdXJyZW50UGFnZSA9IHNuYXA7XG5cdFx0XHRcdHRoaXMuc2Nyb2xsZXIuc2Nyb2xsVG8oc25hcC54LCBzbmFwLnksIHRpbWUsIHRoaXMuc2Nyb2xsZXIub3B0aW9ucy5ib3VuY2VFYXNpbmcpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggdGhpcy5tb3ZlZCApIHtcblx0XHRcdHRoaXMuc2Nyb2xsZXIuX2V4ZWNFdmVudCgnc2Nyb2xsRW5kJyk7XG5cdFx0fVxuXHR9LFxuXG5cdHRyYW5zaXRpb25UaW1lOiBmdW5jdGlvbiAodGltZSkge1xuXHRcdHRpbWUgPSB0aW1lIHx8IDA7XG5cdFx0dGhpcy5pbmRpY2F0b3JTdHlsZVt1dGlscy5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb25dID0gdGltZSArICdtcyc7XG5cblx0XHRpZiAoICF0aW1lICYmIHV0aWxzLmlzQmFkQW5kcm9pZCApIHtcblx0XHRcdHRoaXMuaW5kaWNhdG9yU3R5bGVbdXRpbHMuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uXSA9ICcwLjAwMXMnO1xuXHRcdH1cblx0fSxcblxuXHR0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IGZ1bmN0aW9uIChlYXNpbmcpIHtcblx0XHR0aGlzLmluZGljYXRvclN0eWxlW3V0aWxzLnN0eWxlLnRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbl0gPSBlYXNpbmc7XG5cdH0sXG5cblx0cmVmcmVzaDogZnVuY3Rpb24gKCkge1xuXHRcdHRoaXMudHJhbnNpdGlvblRpbWUoKTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmxpc3RlblggJiYgIXRoaXMub3B0aW9ucy5saXN0ZW5ZICkge1xuXHRcdFx0dGhpcy5pbmRpY2F0b3JTdHlsZS5kaXNwbGF5ID0gdGhpcy5zY3JvbGxlci5oYXNIb3Jpem9udGFsU2Nyb2xsID8gJ2Jsb2NrJyA6ICdub25lJztcblx0XHR9IGVsc2UgaWYgKCB0aGlzLm9wdGlvbnMubGlzdGVuWSAmJiAhdGhpcy5vcHRpb25zLmxpc3RlblggKSB7XG5cdFx0XHR0aGlzLmluZGljYXRvclN0eWxlLmRpc3BsYXkgPSB0aGlzLnNjcm9sbGVyLmhhc1ZlcnRpY2FsU2Nyb2xsID8gJ2Jsb2NrJyA6ICdub25lJztcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5pbmRpY2F0b3JTdHlsZS5kaXNwbGF5ID0gdGhpcy5zY3JvbGxlci5oYXNIb3Jpem9udGFsU2Nyb2xsIHx8IHRoaXMuc2Nyb2xsZXIuaGFzVmVydGljYWxTY3JvbGwgPyAnYmxvY2snIDogJ25vbmUnO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5zY3JvbGxlci5oYXNIb3Jpem9udGFsU2Nyb2xsICYmIHRoaXMuc2Nyb2xsZXIuaGFzVmVydGljYWxTY3JvbGwgKSB7XG5cdFx0XHR1dGlscy5hZGRDbGFzcyh0aGlzLndyYXBwZXIsICdpU2Nyb2xsQm90aFNjcm9sbGJhcnMnKTtcblx0XHRcdHV0aWxzLnJlbW92ZUNsYXNzKHRoaXMud3JhcHBlciwgJ2lTY3JvbGxMb25lU2Nyb2xsYmFyJyk7XG5cblx0XHRcdGlmICggdGhpcy5vcHRpb25zLmRlZmF1bHRTY3JvbGxiYXJzICYmIHRoaXMub3B0aW9ucy5jdXN0b21TdHlsZSApIHtcblx0XHRcdFx0aWYgKCB0aGlzLm9wdGlvbnMubGlzdGVuWCApIHtcblx0XHRcdFx0XHR0aGlzLndyYXBwZXIuc3R5bGUucmlnaHQgPSAnOHB4Jztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aGlzLndyYXBwZXIuc3R5bGUuYm90dG9tID0gJzhweCc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dXRpbHMucmVtb3ZlQ2xhc3ModGhpcy53cmFwcGVyLCAnaVNjcm9sbEJvdGhTY3JvbGxiYXJzJyk7XG5cdFx0XHR1dGlscy5hZGRDbGFzcyh0aGlzLndyYXBwZXIsICdpU2Nyb2xsTG9uZVNjcm9sbGJhcicpO1xuXG5cdFx0XHRpZiAoIHRoaXMub3B0aW9ucy5kZWZhdWx0U2Nyb2xsYmFycyAmJiB0aGlzLm9wdGlvbnMuY3VzdG9tU3R5bGUgKSB7XG5cdFx0XHRcdGlmICggdGhpcy5vcHRpb25zLmxpc3RlblggKSB7XG5cdFx0XHRcdFx0dGhpcy53cmFwcGVyLnN0eWxlLnJpZ2h0ID0gJzJweCc7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy53cmFwcGVyLnN0eWxlLmJvdHRvbSA9ICcycHgnO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dmFyIHIgPSB0aGlzLndyYXBwZXIub2Zmc2V0SGVpZ2h0O1x0Ly8gZm9yY2UgcmVmcmVzaFxuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMubGlzdGVuWCApIHtcblx0XHRcdHRoaXMud3JhcHBlcldpZHRoID0gdGhpcy53cmFwcGVyLmNsaWVudFdpZHRoO1xuXHRcdFx0aWYgKCB0aGlzLm9wdGlvbnMucmVzaXplICkge1xuXHRcdFx0XHR0aGlzLmluZGljYXRvcldpZHRoID0gTWF0aC5tYXgoTWF0aC5yb3VuZCh0aGlzLndyYXBwZXJXaWR0aCAqIHRoaXMud3JhcHBlcldpZHRoIC8gKHRoaXMuc2Nyb2xsZXIuc2Nyb2xsZXJXaWR0aCB8fCB0aGlzLndyYXBwZXJXaWR0aCB8fCAxKSksIDgpO1xuXHRcdFx0XHR0aGlzLmluZGljYXRvclN0eWxlLndpZHRoID0gdGhpcy5pbmRpY2F0b3JXaWR0aCArICdweCc7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLmluZGljYXRvcldpZHRoID0gdGhpcy5pbmRpY2F0b3IuY2xpZW50V2lkdGg7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMubWF4UG9zWCA9IHRoaXMud3JhcHBlcldpZHRoIC0gdGhpcy5pbmRpY2F0b3JXaWR0aDtcblxuXHRcdFx0aWYgKCB0aGlzLm9wdGlvbnMuc2hyaW5rID09ICdjbGlwJyApIHtcblx0XHRcdFx0dGhpcy5taW5Cb3VuZGFyeVggPSAtdGhpcy5pbmRpY2F0b3JXaWR0aCArIDg7XG5cdFx0XHRcdHRoaXMubWF4Qm91bmRhcnlYID0gdGhpcy53cmFwcGVyV2lkdGggLSA4O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5taW5Cb3VuZGFyeVggPSAwO1xuXHRcdFx0XHR0aGlzLm1heEJvdW5kYXJ5WCA9IHRoaXMubWF4UG9zWDtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5zaXplUmF0aW9YID0gdGhpcy5vcHRpb25zLnNwZWVkUmF0aW9YIHx8ICh0aGlzLnNjcm9sbGVyLm1heFNjcm9sbFggJiYgKHRoaXMubWF4UG9zWCAvIHRoaXMuc2Nyb2xsZXIubWF4U2Nyb2xsWCkpO1x0XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMubGlzdGVuWSApIHtcblx0XHRcdHRoaXMud3JhcHBlckhlaWdodCA9IHRoaXMud3JhcHBlci5jbGllbnRIZWlnaHQ7XG5cdFx0XHRpZiAoIHRoaXMub3B0aW9ucy5yZXNpemUgKSB7XG5cdFx0XHRcdHRoaXMuaW5kaWNhdG9ySGVpZ2h0ID0gTWF0aC5tYXgoTWF0aC5yb3VuZCh0aGlzLndyYXBwZXJIZWlnaHQgKiB0aGlzLndyYXBwZXJIZWlnaHQgLyAodGhpcy5zY3JvbGxlci5zY3JvbGxlckhlaWdodCB8fCB0aGlzLndyYXBwZXJIZWlnaHQgfHwgMSkpLCA4KTtcblx0XHRcdFx0dGhpcy5pbmRpY2F0b3JTdHlsZS5oZWlnaHQgPSB0aGlzLmluZGljYXRvckhlaWdodCArICdweCc7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLmluZGljYXRvckhlaWdodCA9IHRoaXMuaW5kaWNhdG9yLmNsaWVudEhlaWdodDtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5tYXhQb3NZID0gdGhpcy53cmFwcGVySGVpZ2h0IC0gdGhpcy5pbmRpY2F0b3JIZWlnaHQ7XG5cblx0XHRcdGlmICggdGhpcy5vcHRpb25zLnNocmluayA9PSAnY2xpcCcgKSB7XG5cdFx0XHRcdHRoaXMubWluQm91bmRhcnlZID0gLXRoaXMuaW5kaWNhdG9ySGVpZ2h0ICsgODtcblx0XHRcdFx0dGhpcy5tYXhCb3VuZGFyeVkgPSB0aGlzLndyYXBwZXJIZWlnaHQgLSA4O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5taW5Cb3VuZGFyeVkgPSAwO1xuXHRcdFx0XHR0aGlzLm1heEJvdW5kYXJ5WSA9IHRoaXMubWF4UG9zWTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5tYXhQb3NZID0gdGhpcy53cmFwcGVySGVpZ2h0IC0gdGhpcy5pbmRpY2F0b3JIZWlnaHQ7XG5cdFx0XHR0aGlzLnNpemVSYXRpb1kgPSB0aGlzLm9wdGlvbnMuc3BlZWRSYXRpb1kgfHwgKHRoaXMuc2Nyb2xsZXIubWF4U2Nyb2xsWSAmJiAodGhpcy5tYXhQb3NZIC8gdGhpcy5zY3JvbGxlci5tYXhTY3JvbGxZKSk7XG5cdFx0fVxuXG5cdFx0dGhpcy51cGRhdGVQb3NpdGlvbigpO1xuXHR9LFxuXG5cdHVwZGF0ZVBvc2l0aW9uOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIHggPSB0aGlzLm9wdGlvbnMubGlzdGVuWCAmJiBNYXRoLnJvdW5kKHRoaXMuc2l6ZVJhdGlvWCAqIHRoaXMuc2Nyb2xsZXIueCkgfHwgMCxcblx0XHRcdHkgPSB0aGlzLm9wdGlvbnMubGlzdGVuWSAmJiBNYXRoLnJvdW5kKHRoaXMuc2l6ZVJhdGlvWSAqIHRoaXMuc2Nyb2xsZXIueSkgfHwgMDtcblxuXHRcdGlmICggIXRoaXMub3B0aW9ucy5pZ25vcmVCb3VuZGFyaWVzICkge1xuXHRcdFx0aWYgKCB4IDwgdGhpcy5taW5Cb3VuZGFyeVggKSB7XG5cdFx0XHRcdGlmICggdGhpcy5vcHRpb25zLnNocmluayA9PSAnc2NhbGUnICkge1xuXHRcdFx0XHRcdHRoaXMud2lkdGggPSBNYXRoLm1heCh0aGlzLmluZGljYXRvcldpZHRoICsgeCwgOCk7XG5cdFx0XHRcdFx0dGhpcy5pbmRpY2F0b3JTdHlsZS53aWR0aCA9IHRoaXMud2lkdGggKyAncHgnO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHggPSB0aGlzLm1pbkJvdW5kYXJ5WDtcblx0XHRcdH0gZWxzZSBpZiAoIHggPiB0aGlzLm1heEJvdW5kYXJ5WCApIHtcblx0XHRcdFx0aWYgKCB0aGlzLm9wdGlvbnMuc2hyaW5rID09ICdzY2FsZScgKSB7XG5cdFx0XHRcdFx0dGhpcy53aWR0aCA9IE1hdGgubWF4KHRoaXMuaW5kaWNhdG9yV2lkdGggLSAoeCAtIHRoaXMubWF4UG9zWCksIDgpO1xuXHRcdFx0XHRcdHRoaXMuaW5kaWNhdG9yU3R5bGUud2lkdGggPSB0aGlzLndpZHRoICsgJ3B4Jztcblx0XHRcdFx0XHR4ID0gdGhpcy5tYXhQb3NYICsgdGhpcy5pbmRpY2F0b3JXaWR0aCAtIHRoaXMud2lkdGg7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0eCA9IHRoaXMubWF4Qm91bmRhcnlYO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKCB0aGlzLm9wdGlvbnMuc2hyaW5rID09ICdzY2FsZScgJiYgdGhpcy53aWR0aCAhPSB0aGlzLmluZGljYXRvcldpZHRoICkge1xuXHRcdFx0XHR0aGlzLndpZHRoID0gdGhpcy5pbmRpY2F0b3JXaWR0aDtcblx0XHRcdFx0dGhpcy5pbmRpY2F0b3JTdHlsZS53aWR0aCA9IHRoaXMud2lkdGggKyAncHgnO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHkgPCB0aGlzLm1pbkJvdW5kYXJ5WSApIHtcblx0XHRcdFx0aWYgKCB0aGlzLm9wdGlvbnMuc2hyaW5rID09ICdzY2FsZScgKSB7XG5cdFx0XHRcdFx0dGhpcy5oZWlnaHQgPSBNYXRoLm1heCh0aGlzLmluZGljYXRvckhlaWdodCArIHkgKiAzLCA4KTtcblx0XHRcdFx0XHR0aGlzLmluZGljYXRvclN0eWxlLmhlaWdodCA9IHRoaXMuaGVpZ2h0ICsgJ3B4Jztcblx0XHRcdFx0fVxuXHRcdFx0XHR5ID0gdGhpcy5taW5Cb3VuZGFyeVk7XG5cdFx0XHR9IGVsc2UgaWYgKCB5ID4gdGhpcy5tYXhCb3VuZGFyeVkgKSB7XG5cdFx0XHRcdGlmICggdGhpcy5vcHRpb25zLnNocmluayA9PSAnc2NhbGUnICkge1xuXHRcdFx0XHRcdHRoaXMuaGVpZ2h0ID0gTWF0aC5tYXgodGhpcy5pbmRpY2F0b3JIZWlnaHQgLSAoeSAtIHRoaXMubWF4UG9zWSkgKiAzLCA4KTtcblx0XHRcdFx0XHR0aGlzLmluZGljYXRvclN0eWxlLmhlaWdodCA9IHRoaXMuaGVpZ2h0ICsgJ3B4Jztcblx0XHRcdFx0XHR5ID0gdGhpcy5tYXhQb3NZICsgdGhpcy5pbmRpY2F0b3JIZWlnaHQgLSB0aGlzLmhlaWdodDtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR5ID0gdGhpcy5tYXhCb3VuZGFyeVk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoIHRoaXMub3B0aW9ucy5zaHJpbmsgPT0gJ3NjYWxlJyAmJiB0aGlzLmhlaWdodCAhPSB0aGlzLmluZGljYXRvckhlaWdodCApIHtcblx0XHRcdFx0dGhpcy5oZWlnaHQgPSB0aGlzLmluZGljYXRvckhlaWdodDtcblx0XHRcdFx0dGhpcy5pbmRpY2F0b3JTdHlsZS5oZWlnaHQgPSB0aGlzLmhlaWdodCArICdweCc7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0dGhpcy54ID0geDtcblx0XHR0aGlzLnkgPSB5O1xuXG5cdFx0aWYgKCB0aGlzLnNjcm9sbGVyLm9wdGlvbnMudXNlVHJhbnNmb3JtICkge1xuXHRcdFx0dGhpcy5pbmRpY2F0b3JTdHlsZVt1dGlscy5zdHlsZS50cmFuc2Zvcm1dID0gJ3RyYW5zbGF0ZSgnICsgeCArICdweCwnICsgeSArICdweCknICsgdGhpcy5zY3JvbGxlci50cmFuc2xhdGVaO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmluZGljYXRvclN0eWxlLmxlZnQgPSB4ICsgJ3B4Jztcblx0XHRcdHRoaXMuaW5kaWNhdG9yU3R5bGUudG9wID0geSArICdweCc7XG5cdFx0fVxuXHR9LFxuXG5cdF9wb3M6IGZ1bmN0aW9uICh4LCB5KSB7XG5cdFx0aWYgKCB4IDwgMCApIHtcblx0XHRcdHggPSAwO1xuXHRcdH0gZWxzZSBpZiAoIHggPiB0aGlzLm1heFBvc1ggKSB7XG5cdFx0XHR4ID0gdGhpcy5tYXhQb3NYO1xuXHRcdH1cblxuXHRcdGlmICggeSA8IDAgKSB7XG5cdFx0XHR5ID0gMDtcblx0XHR9IGVsc2UgaWYgKCB5ID4gdGhpcy5tYXhQb3NZICkge1xuXHRcdFx0eSA9IHRoaXMubWF4UG9zWTtcblx0XHR9XG5cblx0XHR4ID0gdGhpcy5vcHRpb25zLmxpc3RlblggPyBNYXRoLnJvdW5kKHggLyB0aGlzLnNpemVSYXRpb1gpIDogdGhpcy5zY3JvbGxlci54O1xuXHRcdHkgPSB0aGlzLm9wdGlvbnMubGlzdGVuWSA/IE1hdGgucm91bmQoeSAvIHRoaXMuc2l6ZVJhdGlvWSkgOiB0aGlzLnNjcm9sbGVyLnk7XG5cblx0XHR0aGlzLnNjcm9sbGVyLnNjcm9sbFRvKHgsIHkpO1xuXHR9LFxuXG5cdGZhZGU6IGZ1bmN0aW9uICh2YWwsIGhvbGQpIHtcblx0XHRpZiAoIGhvbGQgJiYgIXRoaXMudmlzaWJsZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjbGVhclRpbWVvdXQodGhpcy5mYWRlVGltZW91dCk7XG5cdFx0dGhpcy5mYWRlVGltZW91dCA9IG51bGw7XG5cblx0XHR2YXIgdGltZSA9IHZhbCA/IDI1MCA6IDUwMCxcblx0XHRcdGRlbGF5ID0gdmFsID8gMCA6IDMwMDtcblxuXHRcdHZhbCA9IHZhbCA/ICcxJyA6ICcwJztcblxuXHRcdHRoaXMud3JhcHBlclN0eWxlW3V0aWxzLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbl0gPSB0aW1lICsgJ21zJztcblxuXHRcdHRoaXMuZmFkZVRpbWVvdXQgPSBzZXRUaW1lb3V0KChmdW5jdGlvbiAodmFsKSB7XG5cdFx0XHR0aGlzLndyYXBwZXJTdHlsZS5vcGFjaXR5ID0gdmFsO1xuXHRcdFx0dGhpcy52aXNpYmxlID0gK3ZhbDtcblx0XHR9KS5iaW5kKHRoaXMsIHZhbCksIGRlbGF5KTtcblx0fVxufTtcblxuSVNjcm9sbC51dGlscyA9IHV0aWxzO1xuXG5pZiAoIHR5cGVvZiBtb2R1bGUgIT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMgKSB7XG5cdG1vZHVsZS5leHBvcnRzID0gSVNjcm9sbDtcbn0gZWxzZSB7XG5cdHdpbmRvdy5JU2Nyb2xsID0gSVNjcm9sbDtcbn1cblxufSkod2luZG93LCBkb2N1bWVudCwgTWF0aCk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vQzovQXBwU2Vydi93d3cvZGFzaGl4dW4vaHRtbC9saWIvaXNjcm9sbDUuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ }

});